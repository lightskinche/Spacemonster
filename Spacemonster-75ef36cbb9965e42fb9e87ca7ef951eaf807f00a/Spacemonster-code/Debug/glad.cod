; Listing generated by Microsoft (R) Optimizing Compiler Version 19.27.29111.0 

	TITLE	C:\Users\Light\source\repos\Spacemonster\Spacemonster-code\glad\glad.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	_GLVersion
PUBLIC	_GLAD_GL_VERSION_1_0
PUBLIC	_glad_glCullFace
PUBLIC	_glad_glFrontFace
PUBLIC	_glad_glHint
PUBLIC	_glad_glLineWidth
PUBLIC	_glad_glPointSize
PUBLIC	_glad_glPolygonMode
PUBLIC	_glad_glScissor
PUBLIC	_glad_glTexParameterf
PUBLIC	_glad_glTexParameterfv
PUBLIC	_glad_glTexParameteri
PUBLIC	_glad_glTexParameteriv
PUBLIC	_glad_glTexImage1D
PUBLIC	_glad_glTexImage2D
PUBLIC	_glad_glDrawBuffer
PUBLIC	_glad_glClear
PUBLIC	_glad_glClearColor
PUBLIC	_glad_glClearStencil
PUBLIC	_glad_glClearDepth
PUBLIC	_glad_glStencilMask
PUBLIC	_glad_glColorMask
PUBLIC	_glad_glDepthMask
PUBLIC	_glad_glDisable
PUBLIC	_glad_glEnable
PUBLIC	_glad_glFinish
PUBLIC	_glad_glFlush
PUBLIC	_glad_glBlendFunc
PUBLIC	_glad_glLogicOp
PUBLIC	_glad_glStencilFunc
PUBLIC	_glad_glStencilOp
PUBLIC	_glad_glDepthFunc
PUBLIC	_glad_glPixelStoref
PUBLIC	_glad_glPixelStorei
PUBLIC	_glad_glReadBuffer
PUBLIC	_glad_glReadPixels
PUBLIC	_glad_glGetBooleanv
PUBLIC	_glad_glGetDoublev
PUBLIC	_glad_glGetError
PUBLIC	_glad_glGetFloatv
PUBLIC	_glad_glGetIntegerv
PUBLIC	_glad_glGetString
PUBLIC	_glad_glGetTexImage
PUBLIC	_glad_glGetTexParameterfv
PUBLIC	_glad_glGetTexParameteriv
PUBLIC	_glad_glGetTexLevelParameterfv
PUBLIC	_glad_glGetTexLevelParameteriv
PUBLIC	_glad_glIsEnabled
PUBLIC	_glad_glDepthRange
PUBLIC	_glad_glViewport
PUBLIC	_glad_glNewList
PUBLIC	_glad_glEndList
PUBLIC	_glad_glCallList
PUBLIC	_glad_glCallLists
PUBLIC	_glad_glDeleteLists
PUBLIC	_glad_glGenLists
PUBLIC	_glad_glListBase
PUBLIC	_glad_glBegin
PUBLIC	_glad_glBitmap
PUBLIC	_glad_glColor3b
PUBLIC	_glad_glColor3bv
PUBLIC	_glad_glColor3d
PUBLIC	_glad_glColor3dv
PUBLIC	_glad_glColor3f
PUBLIC	_glad_glColor3fv
PUBLIC	_glad_glColor3i
PUBLIC	_glad_glColor3iv
PUBLIC	_glad_glColor3s
PUBLIC	_glad_glColor3sv
PUBLIC	_glad_glColor3ub
PUBLIC	_glad_glColor3ubv
PUBLIC	_glad_glColor3ui
PUBLIC	_glad_glColor3uiv
PUBLIC	_glad_glColor3us
PUBLIC	_glad_glColor3usv
PUBLIC	_glad_glColor4b
PUBLIC	_glad_glColor4bv
PUBLIC	_glad_glColor4d
PUBLIC	_glad_glColor4dv
PUBLIC	_glad_glColor4f
PUBLIC	_glad_glColor4fv
PUBLIC	_glad_glColor4i
PUBLIC	_glad_glColor4iv
PUBLIC	_glad_glColor4s
PUBLIC	_glad_glColor4sv
PUBLIC	_glad_glColor4ub
PUBLIC	_glad_glColor4ubv
PUBLIC	_glad_glColor4ui
PUBLIC	_glad_glColor4uiv
PUBLIC	_glad_glColor4us
PUBLIC	_glad_glColor4usv
PUBLIC	_glad_glEdgeFlag
PUBLIC	_glad_glEdgeFlagv
PUBLIC	_glad_glEnd
PUBLIC	_glad_glIndexd
PUBLIC	_glad_glIndexdv
PUBLIC	_glad_glIndexf
PUBLIC	_glad_glIndexfv
PUBLIC	_glad_glIndexi
PUBLIC	_glad_glIndexiv
PUBLIC	_glad_glIndexs
PUBLIC	_glad_glIndexsv
PUBLIC	_glad_glNormal3b
PUBLIC	_glad_glNormal3bv
PUBLIC	_glad_glNormal3d
PUBLIC	_glad_glNormal3dv
PUBLIC	_glad_glNormal3f
PUBLIC	_glad_glNormal3fv
PUBLIC	_glad_glNormal3i
PUBLIC	_glad_glNormal3iv
PUBLIC	_glad_glNormal3s
PUBLIC	_glad_glNormal3sv
PUBLIC	_glad_glRasterPos2d
PUBLIC	_glad_glRasterPos2dv
PUBLIC	_glad_glRasterPos2f
PUBLIC	_glad_glRasterPos2fv
PUBLIC	_glad_glRasterPos2i
PUBLIC	_glad_glRasterPos2iv
PUBLIC	_glad_glRasterPos2s
PUBLIC	_glad_glRasterPos2sv
PUBLIC	_glad_glRasterPos3d
PUBLIC	_glad_glRasterPos3dv
PUBLIC	_glad_glRasterPos3f
PUBLIC	_glad_glRasterPos3fv
PUBLIC	_glad_glRasterPos3i
PUBLIC	_glad_glRasterPos3iv
PUBLIC	_glad_glRasterPos3s
PUBLIC	_glad_glRasterPos3sv
PUBLIC	_glad_glRasterPos4d
PUBLIC	_glad_glRasterPos4dv
PUBLIC	_glad_glRasterPos4f
PUBLIC	_glad_glRasterPos4fv
PUBLIC	_glad_glRasterPos4i
PUBLIC	_glad_glRasterPos4iv
PUBLIC	_glad_glRasterPos4s
PUBLIC	_glad_glRasterPos4sv
PUBLIC	_glad_glRectd
PUBLIC	_glad_glRectdv
PUBLIC	_glad_glRectf
PUBLIC	_glad_glRectfv
PUBLIC	_glad_glRecti
PUBLIC	_glad_glRectiv
PUBLIC	_glad_glRects
PUBLIC	_glad_glRectsv
PUBLIC	_glad_glTexCoord1d
PUBLIC	_glad_glTexCoord1dv
PUBLIC	_glad_glTexCoord1f
PUBLIC	_glad_glTexCoord1fv
PUBLIC	_glad_glTexCoord1i
PUBLIC	_glad_glTexCoord1iv
PUBLIC	_glad_glTexCoord1s
PUBLIC	_glad_glTexCoord1sv
PUBLIC	_glad_glTexCoord2d
PUBLIC	_glad_glTexCoord2dv
PUBLIC	_glad_glTexCoord2f
PUBLIC	_glad_glTexCoord2fv
PUBLIC	_glad_glTexCoord2i
PUBLIC	_glad_glTexCoord2iv
PUBLIC	_glad_glTexCoord2s
PUBLIC	_glad_glTexCoord2sv
PUBLIC	_glad_glTexCoord3d
PUBLIC	_glad_glTexCoord3dv
PUBLIC	_glad_glTexCoord3f
PUBLIC	_glad_glTexCoord3fv
PUBLIC	_glad_glTexCoord3i
PUBLIC	_glad_glTexCoord3iv
PUBLIC	_glad_glTexCoord3s
PUBLIC	_glad_glTexCoord3sv
PUBLIC	_glad_glTexCoord4d
PUBLIC	_glad_glTexCoord4dv
PUBLIC	_glad_glTexCoord4f
PUBLIC	_glad_glTexCoord4fv
PUBLIC	_glad_glTexCoord4i
PUBLIC	_glad_glTexCoord4iv
PUBLIC	_glad_glTexCoord4s
PUBLIC	_glad_glTexCoord4sv
PUBLIC	_glad_glVertex2d
PUBLIC	_glad_glVertex2dv
PUBLIC	_glad_glVertex2f
PUBLIC	_glad_glVertex2fv
PUBLIC	_glad_glVertex2i
PUBLIC	_glad_glVertex2iv
PUBLIC	_glad_glVertex2s
PUBLIC	_glad_glVertex2sv
PUBLIC	_glad_glVertex3d
PUBLIC	_glad_glVertex3dv
PUBLIC	_glad_glVertex3f
PUBLIC	_glad_glVertex3fv
PUBLIC	_glad_glVertex3i
PUBLIC	_glad_glVertex3iv
PUBLIC	_glad_glVertex3s
PUBLIC	_glad_glVertex3sv
PUBLIC	_glad_glVertex4d
PUBLIC	_glad_glVertex4dv
PUBLIC	_glad_glVertex4f
PUBLIC	_glad_glVertex4fv
PUBLIC	_glad_glVertex4i
PUBLIC	_glad_glVertex4iv
PUBLIC	_glad_glVertex4s
PUBLIC	_glad_glVertex4sv
PUBLIC	_glad_glClipPlane
PUBLIC	_glad_glColorMaterial
PUBLIC	_glad_glFogf
PUBLIC	_glad_glFogfv
PUBLIC	_glad_glFogi
PUBLIC	_glad_glFogiv
PUBLIC	_glad_glLightf
PUBLIC	_glad_glLightfv
PUBLIC	_glad_glLighti
PUBLIC	_glad_glLightiv
PUBLIC	_glad_glLightModelf
PUBLIC	_glad_glLightModelfv
PUBLIC	_glad_glLightModeli
PUBLIC	_glad_glLightModeliv
PUBLIC	_glad_glLineStipple
PUBLIC	_glad_glMaterialf
PUBLIC	_glad_glMaterialfv
PUBLIC	_glad_glMateriali
PUBLIC	_glad_glMaterialiv
PUBLIC	_glad_glPolygonStipple
PUBLIC	_glad_glShadeModel
PUBLIC	_glad_glTexEnvf
PUBLIC	_glad_glTexEnvfv
PUBLIC	_glad_glTexEnvi
PUBLIC	_glad_glTexEnviv
PUBLIC	_glad_glTexGend
PUBLIC	_glad_glTexGendv
PUBLIC	_glad_glTexGenf
PUBLIC	_glad_glTexGenfv
PUBLIC	_glad_glTexGeni
PUBLIC	_glad_glTexGeniv
PUBLIC	_glad_glFeedbackBuffer
PUBLIC	_glad_glSelectBuffer
PUBLIC	_glad_glRenderMode
PUBLIC	_glad_glInitNames
PUBLIC	_glad_glLoadName
PUBLIC	_glad_glPassThrough
PUBLIC	_glad_glPopName
PUBLIC	_glad_glPushName
PUBLIC	_glad_glClearAccum
PUBLIC	_glad_glClearIndex
PUBLIC	_glad_glIndexMask
PUBLIC	_glad_glAccum
PUBLIC	_glad_glPopAttrib
PUBLIC	_glad_glPushAttrib
PUBLIC	_glad_glMap1d
PUBLIC	_glad_glMap1f
PUBLIC	_glad_glMap2d
PUBLIC	_glad_glMap2f
PUBLIC	_glad_glMapGrid1d
PUBLIC	_glad_glMapGrid1f
PUBLIC	_glad_glMapGrid2d
PUBLIC	_glad_glMapGrid2f
PUBLIC	_glad_glEvalCoord1d
PUBLIC	_glad_glEvalCoord1dv
PUBLIC	_glad_glEvalCoord1f
PUBLIC	_glad_glEvalCoord1fv
PUBLIC	_glad_glEvalCoord2d
PUBLIC	_glad_glEvalCoord2dv
PUBLIC	_glad_glEvalCoord2f
PUBLIC	_glad_glEvalCoord2fv
PUBLIC	_glad_glEvalMesh1
PUBLIC	_glad_glEvalPoint1
PUBLIC	_glad_glEvalMesh2
PUBLIC	_glad_glEvalPoint2
PUBLIC	_glad_glAlphaFunc
PUBLIC	_glad_glPixelZoom
PUBLIC	_glad_glPixelTransferf
PUBLIC	_glad_glPixelTransferi
PUBLIC	_glad_glPixelMapfv
PUBLIC	_glad_glPixelMapuiv
PUBLIC	_glad_glPixelMapusv
PUBLIC	_glad_glCopyPixels
PUBLIC	_glad_glDrawPixels
PUBLIC	_glad_glGetClipPlane
PUBLIC	_glad_glGetLightfv
PUBLIC	_glad_glGetLightiv
PUBLIC	_glad_glGetMapdv
PUBLIC	_glad_glGetMapfv
PUBLIC	_glad_glGetMapiv
PUBLIC	_glad_glGetMaterialfv
PUBLIC	_glad_glGetMaterialiv
PUBLIC	_glad_glGetPixelMapfv
PUBLIC	_glad_glGetPixelMapuiv
PUBLIC	_glad_glGetPixelMapusv
PUBLIC	_glad_glGetPolygonStipple
PUBLIC	_glad_glGetTexEnvfv
PUBLIC	_glad_glGetTexEnviv
PUBLIC	_glad_glGetTexGendv
PUBLIC	_glad_glGetTexGenfv
PUBLIC	_glad_glGetTexGeniv
PUBLIC	_glad_glIsList
PUBLIC	_glad_glFrustum
PUBLIC	_glad_glLoadIdentity
PUBLIC	_glad_glLoadMatrixf
PUBLIC	_glad_glLoadMatrixd
PUBLIC	_glad_glMatrixMode
PUBLIC	_glad_glMultMatrixf
PUBLIC	_glad_glMultMatrixd
PUBLIC	_glad_glOrtho
PUBLIC	_glad_glPopMatrix
PUBLIC	_glad_glPushMatrix
PUBLIC	_glad_glRotated
PUBLIC	_glad_glRotatef
PUBLIC	_glad_glScaled
PUBLIC	_glad_glScalef
PUBLIC	_glad_glTranslated
PUBLIC	_glad_glTranslatef
PUBLIC	_GLAD_GL_VERSION_1_1
PUBLIC	_glad_glDrawArrays
PUBLIC	_glad_glDrawElements
PUBLIC	_glad_glGetPointerv
PUBLIC	_glad_glPolygonOffset
PUBLIC	_glad_glCopyTexImage1D
PUBLIC	_glad_glCopyTexImage2D
PUBLIC	_glad_glCopyTexSubImage1D
PUBLIC	_glad_glCopyTexSubImage2D
PUBLIC	_glad_glTexSubImage1D
PUBLIC	_glad_glTexSubImage2D
PUBLIC	_glad_glBindTexture
PUBLIC	_glad_glDeleteTextures
PUBLIC	_glad_glGenTextures
PUBLIC	_glad_glIsTexture
PUBLIC	_glad_glArrayElement
PUBLIC	_glad_glColorPointer
PUBLIC	_glad_glDisableClientState
PUBLIC	_glad_glEdgeFlagPointer
PUBLIC	_glad_glEnableClientState
PUBLIC	_glad_glIndexPointer
PUBLIC	_glad_glInterleavedArrays
PUBLIC	_glad_glNormalPointer
PUBLIC	_glad_glTexCoordPointer
PUBLIC	_glad_glVertexPointer
PUBLIC	_glad_glAreTexturesResident
PUBLIC	_glad_glPrioritizeTextures
PUBLIC	_glad_glIndexub
PUBLIC	_glad_glIndexubv
PUBLIC	_glad_glPopClientAttrib
PUBLIC	_glad_glPushClientAttrib
PUBLIC	_GLAD_GL_VERSION_1_2
PUBLIC	_glad_glDrawRangeElements
PUBLIC	_glad_glTexImage3D
PUBLIC	_glad_glTexSubImage3D
PUBLIC	_glad_glCopyTexSubImage3D
PUBLIC	_GLAD_GL_VERSION_1_3
PUBLIC	_glad_glActiveTexture
PUBLIC	_glad_glSampleCoverage
PUBLIC	_glad_glCompressedTexImage3D
PUBLIC	_glad_glCompressedTexImage2D
PUBLIC	_glad_glCompressedTexImage1D
PUBLIC	_glad_glCompressedTexSubImage3D
PUBLIC	_glad_glCompressedTexSubImage2D
PUBLIC	_glad_glCompressedTexSubImage1D
PUBLIC	_glad_glGetCompressedTexImage
PUBLIC	_glad_glClientActiveTexture
PUBLIC	_glad_glMultiTexCoord1d
PUBLIC	_glad_glMultiTexCoord1dv
PUBLIC	_glad_glMultiTexCoord1f
PUBLIC	_glad_glMultiTexCoord1fv
PUBLIC	_glad_glMultiTexCoord1i
PUBLIC	_glad_glMultiTexCoord1iv
PUBLIC	_glad_glMultiTexCoord1s
PUBLIC	_glad_glMultiTexCoord1sv
PUBLIC	_glad_glMultiTexCoord2d
PUBLIC	_glad_glMultiTexCoord2dv
PUBLIC	_glad_glMultiTexCoord2f
PUBLIC	_glad_glMultiTexCoord2fv
PUBLIC	_glad_glMultiTexCoord2i
PUBLIC	_glad_glMultiTexCoord2iv
PUBLIC	_glad_glMultiTexCoord2s
PUBLIC	_glad_glMultiTexCoord2sv
PUBLIC	_glad_glMultiTexCoord3d
PUBLIC	_glad_glMultiTexCoord3dv
PUBLIC	_glad_glMultiTexCoord3f
PUBLIC	_glad_glMultiTexCoord3fv
PUBLIC	_glad_glMultiTexCoord3i
PUBLIC	_glad_glMultiTexCoord3iv
PUBLIC	_glad_glMultiTexCoord3s
PUBLIC	_glad_glMultiTexCoord3sv
PUBLIC	_glad_glMultiTexCoord4d
PUBLIC	_glad_glMultiTexCoord4dv
PUBLIC	_glad_glMultiTexCoord4f
PUBLIC	_glad_glMultiTexCoord4fv
PUBLIC	_glad_glMultiTexCoord4i
PUBLIC	_glad_glMultiTexCoord4iv
PUBLIC	_glad_glMultiTexCoord4s
PUBLIC	_glad_glMultiTexCoord4sv
PUBLIC	_glad_glLoadTransposeMatrixf
PUBLIC	_glad_glLoadTransposeMatrixd
PUBLIC	_glad_glMultTransposeMatrixf
PUBLIC	_glad_glMultTransposeMatrixd
PUBLIC	_GLAD_GL_VERSION_1_4
PUBLIC	_glad_glBlendFuncSeparate
PUBLIC	_glad_glMultiDrawArrays
PUBLIC	_glad_glMultiDrawElements
PUBLIC	_glad_glPointParameterf
PUBLIC	_glad_glPointParameterfv
PUBLIC	_glad_glPointParameteri
PUBLIC	_glad_glPointParameteriv
PUBLIC	_glad_glFogCoordf
PUBLIC	_glad_glFogCoordfv
PUBLIC	_glad_glFogCoordd
PUBLIC	_glad_glFogCoorddv
PUBLIC	_glad_glFogCoordPointer
PUBLIC	_glad_glSecondaryColor3b
PUBLIC	_glad_glSecondaryColor3bv
PUBLIC	_glad_glSecondaryColor3d
PUBLIC	_glad_glSecondaryColor3dv
PUBLIC	_glad_glSecondaryColor3f
PUBLIC	_glad_glSecondaryColor3fv
PUBLIC	_glad_glSecondaryColor3i
PUBLIC	_glad_glSecondaryColor3iv
PUBLIC	_glad_glSecondaryColor3s
PUBLIC	_glad_glSecondaryColor3sv
PUBLIC	_glad_glSecondaryColor3ub
PUBLIC	_glad_glSecondaryColor3ubv
PUBLIC	_glad_glSecondaryColor3ui
PUBLIC	_glad_glSecondaryColor3uiv
PUBLIC	_glad_glSecondaryColor3us
PUBLIC	_glad_glSecondaryColor3usv
PUBLIC	_glad_glSecondaryColorPointer
PUBLIC	_glad_glWindowPos2d
PUBLIC	_glad_glWindowPos2dv
PUBLIC	_glad_glWindowPos2f
PUBLIC	_glad_glWindowPos2fv
PUBLIC	_glad_glWindowPos2i
PUBLIC	_glad_glWindowPos2iv
PUBLIC	_glad_glWindowPos2s
PUBLIC	_glad_glWindowPos2sv
PUBLIC	_glad_glWindowPos3d
PUBLIC	_glad_glWindowPos3dv
PUBLIC	_glad_glWindowPos3f
PUBLIC	_glad_glWindowPos3fv
PUBLIC	_glad_glWindowPos3i
PUBLIC	_glad_glWindowPos3iv
PUBLIC	_glad_glWindowPos3s
PUBLIC	_glad_glWindowPos3sv
PUBLIC	_glad_glBlendColor
PUBLIC	_glad_glBlendEquation
PUBLIC	_GLAD_GL_VERSION_1_5
PUBLIC	_glad_glGenQueries
PUBLIC	_glad_glDeleteQueries
PUBLIC	_glad_glIsQuery
PUBLIC	_glad_glBeginQuery
PUBLIC	_glad_glEndQuery
PUBLIC	_glad_glGetQueryiv
PUBLIC	_glad_glGetQueryObjectiv
PUBLIC	_glad_glGetQueryObjectuiv
PUBLIC	_glad_glBindBuffer
PUBLIC	_glad_glDeleteBuffers
PUBLIC	_glad_glGenBuffers
PUBLIC	_glad_glIsBuffer
PUBLIC	_glad_glBufferData
PUBLIC	_glad_glBufferSubData
PUBLIC	_glad_glGetBufferSubData
PUBLIC	_glad_glMapBuffer
PUBLIC	_glad_glUnmapBuffer
PUBLIC	_glad_glGetBufferParameteriv
PUBLIC	_glad_glGetBufferPointerv
PUBLIC	_GLAD_GL_VERSION_2_0
PUBLIC	_glad_glBlendEquationSeparate
PUBLIC	_glad_glDrawBuffers
PUBLIC	_glad_glStencilOpSeparate
PUBLIC	_glad_glStencilFuncSeparate
PUBLIC	_glad_glStencilMaskSeparate
PUBLIC	_glad_glAttachShader
PUBLIC	_glad_glBindAttribLocation
PUBLIC	_glad_glCompileShader
PUBLIC	_glad_glCreateProgram
PUBLIC	_glad_glCreateShader
PUBLIC	_glad_glDeleteProgram
PUBLIC	_glad_glDeleteShader
PUBLIC	_glad_glDetachShader
PUBLIC	_glad_glDisableVertexAttribArray
PUBLIC	_glad_glEnableVertexAttribArray
PUBLIC	_glad_glGetActiveAttrib
PUBLIC	_glad_glGetActiveUniform
PUBLIC	_glad_glGetAttachedShaders
PUBLIC	_glad_glGetAttribLocation
PUBLIC	_glad_glGetProgramiv
PUBLIC	_glad_glGetProgramInfoLog
PUBLIC	_glad_glGetShaderiv
PUBLIC	_glad_glGetShaderInfoLog
PUBLIC	_glad_glGetShaderSource
PUBLIC	_glad_glGetUniformLocation
PUBLIC	_glad_glGetUniformfv
PUBLIC	_glad_glGetUniformiv
PUBLIC	_glad_glGetVertexAttribdv
PUBLIC	_glad_glGetVertexAttribfv
PUBLIC	_glad_glGetVertexAttribiv
PUBLIC	_glad_glGetVertexAttribPointerv
PUBLIC	_glad_glIsProgram
PUBLIC	_glad_glIsShader
PUBLIC	_glad_glLinkProgram
PUBLIC	_glad_glShaderSource
PUBLIC	_glad_glUseProgram
PUBLIC	_glad_glUniform1f
PUBLIC	_glad_glUniform2f
PUBLIC	_glad_glUniform3f
PUBLIC	_glad_glUniform4f
PUBLIC	_glad_glUniform1i
PUBLIC	_glad_glUniform2i
PUBLIC	_glad_glUniform3i
PUBLIC	_glad_glUniform4i
PUBLIC	_glad_glUniform1fv
PUBLIC	_glad_glUniform2fv
PUBLIC	_glad_glUniform3fv
PUBLIC	_glad_glUniform4fv
PUBLIC	_glad_glUniform1iv
PUBLIC	_glad_glUniform2iv
PUBLIC	_glad_glUniform3iv
PUBLIC	_glad_glUniform4iv
PUBLIC	_glad_glUniformMatrix2fv
PUBLIC	_glad_glUniformMatrix3fv
PUBLIC	_glad_glUniformMatrix4fv
PUBLIC	_glad_glValidateProgram
PUBLIC	_glad_glVertexAttrib1d
PUBLIC	_glad_glVertexAttrib1dv
PUBLIC	_glad_glVertexAttrib1f
PUBLIC	_glad_glVertexAttrib1fv
PUBLIC	_glad_glVertexAttrib1s
PUBLIC	_glad_glVertexAttrib1sv
PUBLIC	_glad_glVertexAttrib2d
PUBLIC	_glad_glVertexAttrib2dv
PUBLIC	_glad_glVertexAttrib2f
PUBLIC	_glad_glVertexAttrib2fv
PUBLIC	_glad_glVertexAttrib2s
PUBLIC	_glad_glVertexAttrib2sv
PUBLIC	_glad_glVertexAttrib3d
PUBLIC	_glad_glVertexAttrib3dv
PUBLIC	_glad_glVertexAttrib3f
PUBLIC	_glad_glVertexAttrib3fv
PUBLIC	_glad_glVertexAttrib3s
PUBLIC	_glad_glVertexAttrib3sv
PUBLIC	_glad_glVertexAttrib4Nbv
PUBLIC	_glad_glVertexAttrib4Niv
PUBLIC	_glad_glVertexAttrib4Nsv
PUBLIC	_glad_glVertexAttrib4Nub
PUBLIC	_glad_glVertexAttrib4Nubv
PUBLIC	_glad_glVertexAttrib4Nuiv
PUBLIC	_glad_glVertexAttrib4Nusv
PUBLIC	_glad_glVertexAttrib4bv
PUBLIC	_glad_glVertexAttrib4d
PUBLIC	_glad_glVertexAttrib4dv
PUBLIC	_glad_glVertexAttrib4f
PUBLIC	_glad_glVertexAttrib4fv
PUBLIC	_glad_glVertexAttrib4iv
PUBLIC	_glad_glVertexAttrib4s
PUBLIC	_glad_glVertexAttrib4sv
PUBLIC	_glad_glVertexAttrib4ubv
PUBLIC	_glad_glVertexAttrib4uiv
PUBLIC	_glad_glVertexAttrib4usv
PUBLIC	_glad_glVertexAttribPointer
PUBLIC	_GLAD_GL_VERSION_2_1
PUBLIC	_glad_glUniformMatrix2x3fv
PUBLIC	_glad_glUniformMatrix3x2fv
PUBLIC	_glad_glUniformMatrix2x4fv
PUBLIC	_glad_glUniformMatrix4x2fv
PUBLIC	_glad_glUniformMatrix3x4fv
PUBLIC	_glad_glUniformMatrix4x3fv
PUBLIC	_GLAD_GL_VERSION_3_0
PUBLIC	_glad_glColorMaski
PUBLIC	_glad_glGetBooleani_v
PUBLIC	_glad_glGetIntegeri_v
PUBLIC	_glad_glEnablei
PUBLIC	_glad_glDisablei
PUBLIC	_glad_glIsEnabledi
PUBLIC	_glad_glBeginTransformFeedback
PUBLIC	_glad_glEndTransformFeedback
PUBLIC	_glad_glBindBufferRange
PUBLIC	_glad_glBindBufferBase
PUBLIC	_glad_glTransformFeedbackVaryings
PUBLIC	_glad_glGetTransformFeedbackVarying
PUBLIC	_glad_glClampColor
PUBLIC	_glad_glBeginConditionalRender
PUBLIC	_glad_glEndConditionalRender
PUBLIC	_glad_glVertexAttribIPointer
PUBLIC	_glad_glGetVertexAttribIiv
PUBLIC	_glad_glGetVertexAttribIuiv
PUBLIC	_glad_glVertexAttribI1i
PUBLIC	_glad_glVertexAttribI2i
PUBLIC	_glad_glVertexAttribI3i
PUBLIC	_glad_glVertexAttribI4i
PUBLIC	_glad_glVertexAttribI1ui
PUBLIC	_glad_glVertexAttribI2ui
PUBLIC	_glad_glVertexAttribI3ui
PUBLIC	_glad_glVertexAttribI4ui
PUBLIC	_glad_glVertexAttribI1iv
PUBLIC	_glad_glVertexAttribI2iv
PUBLIC	_glad_glVertexAttribI3iv
PUBLIC	_glad_glVertexAttribI4iv
PUBLIC	_glad_glVertexAttribI1uiv
PUBLIC	_glad_glVertexAttribI2uiv
PUBLIC	_glad_glVertexAttribI3uiv
PUBLIC	_glad_glVertexAttribI4uiv
PUBLIC	_glad_glVertexAttribI4bv
PUBLIC	_glad_glVertexAttribI4sv
PUBLIC	_glad_glVertexAttribI4ubv
PUBLIC	_glad_glVertexAttribI4usv
PUBLIC	_glad_glGetUniformuiv
PUBLIC	_glad_glBindFragDataLocation
PUBLIC	_glad_glGetFragDataLocation
PUBLIC	_glad_glUniform1ui
PUBLIC	_glad_glUniform2ui
PUBLIC	_glad_glUniform3ui
PUBLIC	_glad_glUniform4ui
PUBLIC	_glad_glUniform1uiv
PUBLIC	_glad_glUniform2uiv
PUBLIC	_glad_glUniform3uiv
PUBLIC	_glad_glUniform4uiv
PUBLIC	_glad_glTexParameterIiv
PUBLIC	_glad_glTexParameterIuiv
PUBLIC	_glad_glGetTexParameterIiv
PUBLIC	_glad_glGetTexParameterIuiv
PUBLIC	_glad_glClearBufferiv
PUBLIC	_glad_glClearBufferuiv
PUBLIC	_glad_glClearBufferfv
PUBLIC	_glad_glClearBufferfi
PUBLIC	_glad_glGetStringi
PUBLIC	_glad_glIsRenderbuffer
PUBLIC	_glad_glBindRenderbuffer
PUBLIC	_glad_glDeleteRenderbuffers
PUBLIC	_glad_glGenRenderbuffers
PUBLIC	_glad_glRenderbufferStorage
PUBLIC	_glad_glGetRenderbufferParameteriv
PUBLIC	_glad_glIsFramebuffer
PUBLIC	_glad_glBindFramebuffer
PUBLIC	_glad_glDeleteFramebuffers
PUBLIC	_glad_glGenFramebuffers
PUBLIC	_glad_glCheckFramebufferStatus
PUBLIC	_glad_glFramebufferTexture1D
PUBLIC	_glad_glFramebufferTexture2D
PUBLIC	_glad_glFramebufferTexture3D
PUBLIC	_glad_glFramebufferRenderbuffer
PUBLIC	_glad_glGetFramebufferAttachmentParameteriv
PUBLIC	_glad_glGenerateMipmap
PUBLIC	_glad_glBlitFramebuffer
PUBLIC	_glad_glRenderbufferStorageMultisample
PUBLIC	_glad_glFramebufferTextureLayer
PUBLIC	_glad_glMapBufferRange
PUBLIC	_glad_glFlushMappedBufferRange
PUBLIC	_glad_glBindVertexArray
PUBLIC	_glad_glDeleteVertexArrays
PUBLIC	_glad_glGenVertexArrays
PUBLIC	_glad_glIsVertexArray
PUBLIC	_GLAD_GL_VERSION_3_1
PUBLIC	_glad_glDrawArraysInstanced
PUBLIC	_glad_glDrawElementsInstanced
PUBLIC	_glad_glTexBuffer
PUBLIC	_glad_glPrimitiveRestartIndex
PUBLIC	_glad_glCopyBufferSubData
PUBLIC	_glad_glGetUniformIndices
PUBLIC	_glad_glGetActiveUniformsiv
PUBLIC	_glad_glGetActiveUniformName
PUBLIC	_glad_glGetUniformBlockIndex
PUBLIC	_glad_glGetActiveUniformBlockiv
PUBLIC	_glad_glGetActiveUniformBlockName
PUBLIC	_glad_glUniformBlockBinding
PUBLIC	_GLAD_GL_VERSION_3_2
PUBLIC	_glad_glDrawElementsBaseVertex
PUBLIC	_glad_glDrawRangeElementsBaseVertex
PUBLIC	_glad_glDrawElementsInstancedBaseVertex
PUBLIC	_glad_glMultiDrawElementsBaseVertex
PUBLIC	_glad_glProvokingVertex
PUBLIC	_glad_glFenceSync
PUBLIC	_glad_glIsSync
PUBLIC	_glad_glDeleteSync
PUBLIC	_glad_glClientWaitSync
PUBLIC	_glad_glWaitSync
PUBLIC	_glad_glGetInteger64v
PUBLIC	_glad_glGetSynciv
PUBLIC	_glad_glGetInteger64i_v
PUBLIC	_glad_glGetBufferParameteri64v
PUBLIC	_glad_glFramebufferTexture
PUBLIC	_glad_glTexImage2DMultisample
PUBLIC	_glad_glTexImage3DMultisample
PUBLIC	_glad_glGetMultisamplefv
PUBLIC	_glad_glSampleMaski
PUBLIC	_GLAD_GL_VERSION_3_3
PUBLIC	_glad_glBindFragDataLocationIndexed
PUBLIC	_glad_glGetFragDataIndex
PUBLIC	_glad_glGenSamplers
PUBLIC	_glad_glDeleteSamplers
PUBLIC	_glad_glIsSampler
PUBLIC	_glad_glBindSampler
PUBLIC	_glad_glSamplerParameteri
PUBLIC	_glad_glSamplerParameteriv
PUBLIC	_glad_glSamplerParameterf
PUBLIC	_glad_glSamplerParameterfv
PUBLIC	_glad_glSamplerParameterIiv
PUBLIC	_glad_glSamplerParameterIuiv
PUBLIC	_glad_glGetSamplerParameteriv
PUBLIC	_glad_glGetSamplerParameterIiv
PUBLIC	_glad_glGetSamplerParameterfv
PUBLIC	_glad_glGetSamplerParameterIuiv
PUBLIC	_glad_glQueryCounter
PUBLIC	_glad_glGetQueryObjecti64v
PUBLIC	_glad_glGetQueryObjectui64v
PUBLIC	_glad_glVertexAttribDivisor
PUBLIC	_glad_glVertexAttribP1ui
PUBLIC	_glad_glVertexAttribP1uiv
PUBLIC	_glad_glVertexAttribP2ui
PUBLIC	_glad_glVertexAttribP2uiv
PUBLIC	_glad_glVertexAttribP3ui
PUBLIC	_glad_glVertexAttribP3uiv
PUBLIC	_glad_glVertexAttribP4ui
PUBLIC	_glad_glVertexAttribP4uiv
PUBLIC	_glad_glVertexP2ui
PUBLIC	_glad_glVertexP2uiv
PUBLIC	_glad_glVertexP3ui
PUBLIC	_glad_glVertexP3uiv
PUBLIC	_glad_glVertexP4ui
PUBLIC	_glad_glVertexP4uiv
PUBLIC	_glad_glTexCoordP1ui
PUBLIC	_glad_glTexCoordP1uiv
PUBLIC	_glad_glTexCoordP2ui
PUBLIC	_glad_glTexCoordP2uiv
PUBLIC	_glad_glTexCoordP3ui
PUBLIC	_glad_glTexCoordP3uiv
PUBLIC	_glad_glTexCoordP4ui
PUBLIC	_glad_glTexCoordP4uiv
PUBLIC	_glad_glMultiTexCoordP1ui
PUBLIC	_glad_glMultiTexCoordP1uiv
PUBLIC	_glad_glMultiTexCoordP2ui
PUBLIC	_glad_glMultiTexCoordP2uiv
PUBLIC	_glad_glMultiTexCoordP3ui
PUBLIC	_glad_glMultiTexCoordP3uiv
PUBLIC	_glad_glMultiTexCoordP4ui
PUBLIC	_glad_glMultiTexCoordP4uiv
PUBLIC	_glad_glNormalP3ui
PUBLIC	_glad_glNormalP3uiv
PUBLIC	_glad_glColorP3ui
PUBLIC	_glad_glColorP3uiv
PUBLIC	_glad_glColorP4ui
PUBLIC	_glad_glColorP4uiv
PUBLIC	_glad_glSecondaryColorP3ui
PUBLIC	_glad_glSecondaryColorP3uiv
_BSS	SEGMENT
_GLVersion DQ	01H DUP (?)
_GLAD_GL_VERSION_1_0 DD 01H DUP (?)
_glad_glCullFace DD 01H DUP (?)
_glad_glFrontFace DD 01H DUP (?)
_glad_glHint DD	01H DUP (?)
_glad_glLineWidth DD 01H DUP (?)
_glad_glPointSize DD 01H DUP (?)
_glad_glPolygonMode DD 01H DUP (?)
_glad_glScissor DD 01H DUP (?)
_glad_glTexParameterf DD 01H DUP (?)
_glad_glTexParameterfv DD 01H DUP (?)
_glad_glTexParameteri DD 01H DUP (?)
_glad_glTexParameteriv DD 01H DUP (?)
_glad_glTexImage1D DD 01H DUP (?)
_glad_glTexImage2D DD 01H DUP (?)
_glad_glDrawBuffer DD 01H DUP (?)
_glad_glClear DD 01H DUP (?)
_glad_glClearColor DD 01H DUP (?)
_glad_glClearStencil DD 01H DUP (?)
_glad_glClearDepth DD 01H DUP (?)
_glad_glStencilMask DD 01H DUP (?)
_glad_glColorMask DD 01H DUP (?)
_glad_glDepthMask DD 01H DUP (?)
_glad_glDisable DD 01H DUP (?)
_glad_glEnable DD 01H DUP (?)
_glad_glFinish DD 01H DUP (?)
_glad_glFlush DD 01H DUP (?)
_glad_glBlendFunc DD 01H DUP (?)
_glad_glLogicOp DD 01H DUP (?)
_glad_glStencilFunc DD 01H DUP (?)
_glad_glStencilOp DD 01H DUP (?)
_glad_glDepthFunc DD 01H DUP (?)
_glad_glPixelStoref DD 01H DUP (?)
_glad_glPixelStorei DD 01H DUP (?)
_glad_glReadBuffer DD 01H DUP (?)
_glad_glReadPixels DD 01H DUP (?)
_glad_glGetBooleanv DD 01H DUP (?)
_glad_glGetDoublev DD 01H DUP (?)
_glad_glGetError DD 01H DUP (?)
_glad_glGetFloatv DD 01H DUP (?)
_glad_glGetIntegerv DD 01H DUP (?)
_glad_glGetString DD 01H DUP (?)
_glad_glGetTexImage DD 01H DUP (?)
_glad_glGetTexParameterfv DD 01H DUP (?)
_glad_glGetTexParameteriv DD 01H DUP (?)
_glad_glGetTexLevelParameterfv DD 01H DUP (?)
_glad_glGetTexLevelParameteriv DD 01H DUP (?)
_glad_glIsEnabled DD 01H DUP (?)
_glad_glDepthRange DD 01H DUP (?)
_glad_glViewport DD 01H DUP (?)
_glad_glNewList DD 01H DUP (?)
_glad_glEndList DD 01H DUP (?)
_glad_glCallList DD 01H DUP (?)
_glad_glCallLists DD 01H DUP (?)
_glad_glDeleteLists DD 01H DUP (?)
_glad_glGenLists DD 01H DUP (?)
_glad_glListBase DD 01H DUP (?)
_glad_glBegin DD 01H DUP (?)
_glad_glBitmap DD 01H DUP (?)
_glad_glColor3b DD 01H DUP (?)
_glad_glColor3bv DD 01H DUP (?)
_glad_glColor3d DD 01H DUP (?)
_glad_glColor3dv DD 01H DUP (?)
_glad_glColor3f DD 01H DUP (?)
_glad_glColor3fv DD 01H DUP (?)
_glad_glColor3i DD 01H DUP (?)
_glad_glColor3iv DD 01H DUP (?)
_glad_glColor3s DD 01H DUP (?)
_glad_glColor3sv DD 01H DUP (?)
_glad_glColor3ub DD 01H DUP (?)
_glad_glColor3ubv DD 01H DUP (?)
_glad_glColor3ui DD 01H DUP (?)
_glad_glColor3uiv DD 01H DUP (?)
_glad_glColor3us DD 01H DUP (?)
_glad_glColor3usv DD 01H DUP (?)
_glad_glColor4b DD 01H DUP (?)
_glad_glColor4bv DD 01H DUP (?)
_glad_glColor4d DD 01H DUP (?)
_glad_glColor4dv DD 01H DUP (?)
_glad_glColor4f DD 01H DUP (?)
_glad_glColor4fv DD 01H DUP (?)
_glad_glColor4i DD 01H DUP (?)
_glad_glColor4iv DD 01H DUP (?)
_glad_glColor4s DD 01H DUP (?)
_glad_glColor4sv DD 01H DUP (?)
_glad_glColor4ub DD 01H DUP (?)
_glad_glColor4ubv DD 01H DUP (?)
_glad_glColor4ui DD 01H DUP (?)
_glad_glColor4uiv DD 01H DUP (?)
_glad_glColor4us DD 01H DUP (?)
_glad_glColor4usv DD 01H DUP (?)
_glad_glEdgeFlag DD 01H DUP (?)
_glad_glEdgeFlagv DD 01H DUP (?)
_glad_glEnd DD	01H DUP (?)
_glad_glIndexd DD 01H DUP (?)
_glad_glIndexdv DD 01H DUP (?)
_glad_glIndexf DD 01H DUP (?)
_glad_glIndexfv DD 01H DUP (?)
_glad_glIndexi DD 01H DUP (?)
_glad_glIndexiv DD 01H DUP (?)
_glad_glIndexs DD 01H DUP (?)
_glad_glIndexsv DD 01H DUP (?)
_glad_glNormal3b DD 01H DUP (?)
_glad_glNormal3bv DD 01H DUP (?)
_glad_glNormal3d DD 01H DUP (?)
_glad_glNormal3dv DD 01H DUP (?)
_glad_glNormal3f DD 01H DUP (?)
_glad_glNormal3fv DD 01H DUP (?)
_glad_glNormal3i DD 01H DUP (?)
_glad_glNormal3iv DD 01H DUP (?)
_glad_glNormal3s DD 01H DUP (?)
_glad_glNormal3sv DD 01H DUP (?)
_glad_glRasterPos2d DD 01H DUP (?)
_glad_glRasterPos2dv DD 01H DUP (?)
_glad_glRasterPos2f DD 01H DUP (?)
_glad_glRasterPos2fv DD 01H DUP (?)
_glad_glRasterPos2i DD 01H DUP (?)
_glad_glRasterPos2iv DD 01H DUP (?)
_glad_glRasterPos2s DD 01H DUP (?)
_glad_glRasterPos2sv DD 01H DUP (?)
_glad_glRasterPos3d DD 01H DUP (?)
_glad_glRasterPos3dv DD 01H DUP (?)
_glad_glRasterPos3f DD 01H DUP (?)
_glad_glRasterPos3fv DD 01H DUP (?)
_glad_glRasterPos3i DD 01H DUP (?)
_glad_glRasterPos3iv DD 01H DUP (?)
_glad_glRasterPos3s DD 01H DUP (?)
_glad_glRasterPos3sv DD 01H DUP (?)
_glad_glRasterPos4d DD 01H DUP (?)
_glad_glRasterPos4dv DD 01H DUP (?)
_glad_glRasterPos4f DD 01H DUP (?)
_glad_glRasterPos4fv DD 01H DUP (?)
_glad_glRasterPos4i DD 01H DUP (?)
_glad_glRasterPos4iv DD 01H DUP (?)
_glad_glRasterPos4s DD 01H DUP (?)
_glad_glRasterPos4sv DD 01H DUP (?)
_glad_glRectd DD 01H DUP (?)
_glad_glRectdv DD 01H DUP (?)
_glad_glRectf DD 01H DUP (?)
_glad_glRectfv DD 01H DUP (?)
_glad_glRecti DD 01H DUP (?)
_glad_glRectiv DD 01H DUP (?)
_glad_glRects DD 01H DUP (?)
_glad_glRectsv DD 01H DUP (?)
_glad_glTexCoord1d DD 01H DUP (?)
_glad_glTexCoord1dv DD 01H DUP (?)
_glad_glTexCoord1f DD 01H DUP (?)
_glad_glTexCoord1fv DD 01H DUP (?)
_glad_glTexCoord1i DD 01H DUP (?)
_glad_glTexCoord1iv DD 01H DUP (?)
_glad_glTexCoord1s DD 01H DUP (?)
_glad_glTexCoord1sv DD 01H DUP (?)
_glad_glTexCoord2d DD 01H DUP (?)
_glad_glTexCoord2dv DD 01H DUP (?)
_glad_glTexCoord2f DD 01H DUP (?)
_glad_glTexCoord2fv DD 01H DUP (?)
_glad_glTexCoord2i DD 01H DUP (?)
_glad_glTexCoord2iv DD 01H DUP (?)
_glad_glTexCoord2s DD 01H DUP (?)
_glad_glTexCoord2sv DD 01H DUP (?)
_glad_glTexCoord3d DD 01H DUP (?)
_glad_glTexCoord3dv DD 01H DUP (?)
_glad_glTexCoord3f DD 01H DUP (?)
_glad_glTexCoord3fv DD 01H DUP (?)
_glad_glTexCoord3i DD 01H DUP (?)
_glad_glTexCoord3iv DD 01H DUP (?)
_glad_glTexCoord3s DD 01H DUP (?)
_glad_glTexCoord3sv DD 01H DUP (?)
_glad_glTexCoord4d DD 01H DUP (?)
_glad_glTexCoord4dv DD 01H DUP (?)
_glad_glTexCoord4f DD 01H DUP (?)
_glad_glTexCoord4fv DD 01H DUP (?)
_glad_glTexCoord4i DD 01H DUP (?)
_glad_glTexCoord4iv DD 01H DUP (?)
_glad_glTexCoord4s DD 01H DUP (?)
_glad_glTexCoord4sv DD 01H DUP (?)
_glad_glVertex2d DD 01H DUP (?)
_glad_glVertex2dv DD 01H DUP (?)
_glad_glVertex2f DD 01H DUP (?)
_glad_glVertex2fv DD 01H DUP (?)
_glad_glVertex2i DD 01H DUP (?)
_glad_glVertex2iv DD 01H DUP (?)
_glad_glVertex2s DD 01H DUP (?)
_glad_glVertex2sv DD 01H DUP (?)
_glad_glVertex3d DD 01H DUP (?)
_glad_glVertex3dv DD 01H DUP (?)
_glad_glVertex3f DD 01H DUP (?)
_glad_glVertex3fv DD 01H DUP (?)
_glad_glVertex3i DD 01H DUP (?)
_glad_glVertex3iv DD 01H DUP (?)
_glad_glVertex3s DD 01H DUP (?)
_glad_glVertex3sv DD 01H DUP (?)
_glad_glVertex4d DD 01H DUP (?)
_glad_glVertex4dv DD 01H DUP (?)
_glad_glVertex4f DD 01H DUP (?)
_glad_glVertex4fv DD 01H DUP (?)
_glad_glVertex4i DD 01H DUP (?)
_glad_glVertex4iv DD 01H DUP (?)
_glad_glVertex4s DD 01H DUP (?)
_glad_glVertex4sv DD 01H DUP (?)
_glad_glClipPlane DD 01H DUP (?)
_glad_glColorMaterial DD 01H DUP (?)
_glad_glFogf DD	01H DUP (?)
_glad_glFogfv DD 01H DUP (?)
_glad_glFogi DD	01H DUP (?)
_glad_glFogiv DD 01H DUP (?)
_glad_glLightf DD 01H DUP (?)
_glad_glLightfv DD 01H DUP (?)
_glad_glLighti DD 01H DUP (?)
_glad_glLightiv DD 01H DUP (?)
_glad_glLightModelf DD 01H DUP (?)
_glad_glLightModelfv DD 01H DUP (?)
_glad_glLightModeli DD 01H DUP (?)
_glad_glLightModeliv DD 01H DUP (?)
_glad_glLineStipple DD 01H DUP (?)
_glad_glMaterialf DD 01H DUP (?)
_glad_glMaterialfv DD 01H DUP (?)
_glad_glMateriali DD 01H DUP (?)
_glad_glMaterialiv DD 01H DUP (?)
_glad_glPolygonStipple DD 01H DUP (?)
_glad_glShadeModel DD 01H DUP (?)
_glad_glTexEnvf DD 01H DUP (?)
_glad_glTexEnvfv DD 01H DUP (?)
_glad_glTexEnvi DD 01H DUP (?)
_glad_glTexEnviv DD 01H DUP (?)
_glad_glTexGend DD 01H DUP (?)
_glad_glTexGendv DD 01H DUP (?)
_glad_glTexGenf DD 01H DUP (?)
_glad_glTexGenfv DD 01H DUP (?)
_glad_glTexGeni DD 01H DUP (?)
_glad_glTexGeniv DD 01H DUP (?)
_glad_glFeedbackBuffer DD 01H DUP (?)
_glad_glSelectBuffer DD 01H DUP (?)
_glad_glRenderMode DD 01H DUP (?)
_glad_glInitNames DD 01H DUP (?)
_glad_glLoadName DD 01H DUP (?)
_glad_glPassThrough DD 01H DUP (?)
_glad_glPopName DD 01H DUP (?)
_glad_glPushName DD 01H DUP (?)
_glad_glClearAccum DD 01H DUP (?)
_glad_glClearIndex DD 01H DUP (?)
_glad_glIndexMask DD 01H DUP (?)
_glad_glAccum DD 01H DUP (?)
_glad_glPopAttrib DD 01H DUP (?)
_glad_glPushAttrib DD 01H DUP (?)
_glad_glMap1d DD 01H DUP (?)
_glad_glMap1f DD 01H DUP (?)
_glad_glMap2d DD 01H DUP (?)
_glad_glMap2f DD 01H DUP (?)
_glad_glMapGrid1d DD 01H DUP (?)
_glad_glMapGrid1f DD 01H DUP (?)
_glad_glMapGrid2d DD 01H DUP (?)
_glad_glMapGrid2f DD 01H DUP (?)
_glad_glEvalCoord1d DD 01H DUP (?)
_glad_glEvalCoord1dv DD 01H DUP (?)
_glad_glEvalCoord1f DD 01H DUP (?)
_glad_glEvalCoord1fv DD 01H DUP (?)
_glad_glEvalCoord2d DD 01H DUP (?)
_glad_glEvalCoord2dv DD 01H DUP (?)
_glad_glEvalCoord2f DD 01H DUP (?)
_glad_glEvalCoord2fv DD 01H DUP (?)
_glad_glEvalMesh1 DD 01H DUP (?)
_glad_glEvalPoint1 DD 01H DUP (?)
_glad_glEvalMesh2 DD 01H DUP (?)
_glad_glEvalPoint2 DD 01H DUP (?)
_glad_glAlphaFunc DD 01H DUP (?)
_glad_glPixelZoom DD 01H DUP (?)
_glad_glPixelTransferf DD 01H DUP (?)
_glad_glPixelTransferi DD 01H DUP (?)
_glad_glPixelMapfv DD 01H DUP (?)
_glad_glPixelMapuiv DD 01H DUP (?)
_glad_glPixelMapusv DD 01H DUP (?)
_glad_glCopyPixels DD 01H DUP (?)
_glad_glDrawPixels DD 01H DUP (?)
_glad_glGetClipPlane DD 01H DUP (?)
_glad_glGetLightfv DD 01H DUP (?)
_glad_glGetLightiv DD 01H DUP (?)
_glad_glGetMapdv DD 01H DUP (?)
_glad_glGetMapfv DD 01H DUP (?)
_glad_glGetMapiv DD 01H DUP (?)
_glad_glGetMaterialfv DD 01H DUP (?)
_glad_glGetMaterialiv DD 01H DUP (?)
_glad_glGetPixelMapfv DD 01H DUP (?)
_glad_glGetPixelMapuiv DD 01H DUP (?)
_glad_glGetPixelMapusv DD 01H DUP (?)
_glad_glGetPolygonStipple DD 01H DUP (?)
_glad_glGetTexEnvfv DD 01H DUP (?)
_glad_glGetTexEnviv DD 01H DUP (?)
_glad_glGetTexGendv DD 01H DUP (?)
_glad_glGetTexGenfv DD 01H DUP (?)
_glad_glGetTexGeniv DD 01H DUP (?)
_glad_glIsList DD 01H DUP (?)
_glad_glFrustum DD 01H DUP (?)
_glad_glLoadIdentity DD 01H DUP (?)
_glad_glLoadMatrixf DD 01H DUP (?)
_glad_glLoadMatrixd DD 01H DUP (?)
_glad_glMatrixMode DD 01H DUP (?)
_glad_glMultMatrixf DD 01H DUP (?)
_glad_glMultMatrixd DD 01H DUP (?)
_glad_glOrtho DD 01H DUP (?)
_glad_glPopMatrix DD 01H DUP (?)
_glad_glPushMatrix DD 01H DUP (?)
_glad_glRotated DD 01H DUP (?)
_glad_glRotatef DD 01H DUP (?)
_glad_glScaled DD 01H DUP (?)
_glad_glScalef DD 01H DUP (?)
_glad_glTranslated DD 01H DUP (?)
_glad_glTranslatef DD 01H DUP (?)
_GLAD_GL_VERSION_1_1 DD 01H DUP (?)
_glad_glDrawArrays DD 01H DUP (?)
_glad_glDrawElements DD 01H DUP (?)
_glad_glGetPointerv DD 01H DUP (?)
_glad_glPolygonOffset DD 01H DUP (?)
_glad_glCopyTexImage1D DD 01H DUP (?)
_glad_glCopyTexImage2D DD 01H DUP (?)
_glad_glCopyTexSubImage1D DD 01H DUP (?)
_glad_glCopyTexSubImage2D DD 01H DUP (?)
_glad_glTexSubImage1D DD 01H DUP (?)
_glad_glTexSubImage2D DD 01H DUP (?)
_glad_glBindTexture DD 01H DUP (?)
_glad_glDeleteTextures DD 01H DUP (?)
_glad_glGenTextures DD 01H DUP (?)
_glad_glIsTexture DD 01H DUP (?)
_glad_glArrayElement DD 01H DUP (?)
_glad_glColorPointer DD 01H DUP (?)
_glad_glDisableClientState DD 01H DUP (?)
_glad_glEdgeFlagPointer DD 01H DUP (?)
_glad_glEnableClientState DD 01H DUP (?)
_glad_glIndexPointer DD 01H DUP (?)
_glad_glInterleavedArrays DD 01H DUP (?)
_glad_glNormalPointer DD 01H DUP (?)
_glad_glTexCoordPointer DD 01H DUP (?)
_glad_glVertexPointer DD 01H DUP (?)
_glad_glAreTexturesResident DD 01H DUP (?)
_glad_glPrioritizeTextures DD 01H DUP (?)
_glad_glIndexub DD 01H DUP (?)
_glad_glIndexubv DD 01H DUP (?)
_glad_glPopClientAttrib DD 01H DUP (?)
_glad_glPushClientAttrib DD 01H DUP (?)
_GLAD_GL_VERSION_1_2 DD 01H DUP (?)
_glad_glDrawRangeElements DD 01H DUP (?)
_glad_glTexImage3D DD 01H DUP (?)
_glad_glTexSubImage3D DD 01H DUP (?)
_glad_glCopyTexSubImage3D DD 01H DUP (?)
_GLAD_GL_VERSION_1_3 DD 01H DUP (?)
_glad_glActiveTexture DD 01H DUP (?)
_glad_glSampleCoverage DD 01H DUP (?)
_glad_glCompressedTexImage3D DD 01H DUP (?)
_glad_glCompressedTexImage2D DD 01H DUP (?)
_glad_glCompressedTexImage1D DD 01H DUP (?)
_glad_glCompressedTexSubImage3D DD 01H DUP (?)
_glad_glCompressedTexSubImage2D DD 01H DUP (?)
_glad_glCompressedTexSubImage1D DD 01H DUP (?)
_glad_glGetCompressedTexImage DD 01H DUP (?)
_glad_glClientActiveTexture DD 01H DUP (?)
_glad_glMultiTexCoord1d DD 01H DUP (?)
_glad_glMultiTexCoord1dv DD 01H DUP (?)
_glad_glMultiTexCoord1f DD 01H DUP (?)
_glad_glMultiTexCoord1fv DD 01H DUP (?)
_glad_glMultiTexCoord1i DD 01H DUP (?)
_glad_glMultiTexCoord1iv DD 01H DUP (?)
_glad_glMultiTexCoord1s DD 01H DUP (?)
_glad_glMultiTexCoord1sv DD 01H DUP (?)
_glad_glMultiTexCoord2d DD 01H DUP (?)
_glad_glMultiTexCoord2dv DD 01H DUP (?)
_glad_glMultiTexCoord2f DD 01H DUP (?)
_glad_glMultiTexCoord2fv DD 01H DUP (?)
_glad_glMultiTexCoord2i DD 01H DUP (?)
_glad_glMultiTexCoord2iv DD 01H DUP (?)
_glad_glMultiTexCoord2s DD 01H DUP (?)
_glad_glMultiTexCoord2sv DD 01H DUP (?)
_glad_glMultiTexCoord3d DD 01H DUP (?)
_glad_glMultiTexCoord3dv DD 01H DUP (?)
_glad_glMultiTexCoord3f DD 01H DUP (?)
_glad_glMultiTexCoord3fv DD 01H DUP (?)
_glad_glMultiTexCoord3i DD 01H DUP (?)
_glad_glMultiTexCoord3iv DD 01H DUP (?)
_glad_glMultiTexCoord3s DD 01H DUP (?)
_glad_glMultiTexCoord3sv DD 01H DUP (?)
_glad_glMultiTexCoord4d DD 01H DUP (?)
_glad_glMultiTexCoord4dv DD 01H DUP (?)
_glad_glMultiTexCoord4f DD 01H DUP (?)
_glad_glMultiTexCoord4fv DD 01H DUP (?)
_glad_glMultiTexCoord4i DD 01H DUP (?)
_glad_glMultiTexCoord4iv DD 01H DUP (?)
_glad_glMultiTexCoord4s DD 01H DUP (?)
_glad_glMultiTexCoord4sv DD 01H DUP (?)
_glad_glLoadTransposeMatrixf DD 01H DUP (?)
_glad_glLoadTransposeMatrixd DD 01H DUP (?)
_glad_glMultTransposeMatrixf DD 01H DUP (?)
_glad_glMultTransposeMatrixd DD 01H DUP (?)
_GLAD_GL_VERSION_1_4 DD 01H DUP (?)
_glad_glBlendFuncSeparate DD 01H DUP (?)
_glad_glMultiDrawArrays DD 01H DUP (?)
_glad_glMultiDrawElements DD 01H DUP (?)
_glad_glPointParameterf DD 01H DUP (?)
_glad_glPointParameterfv DD 01H DUP (?)
_glad_glPointParameteri DD 01H DUP (?)
_glad_glPointParameteriv DD 01H DUP (?)
_glad_glFogCoordf DD 01H DUP (?)
_glad_glFogCoordfv DD 01H DUP (?)
_glad_glFogCoordd DD 01H DUP (?)
_glad_glFogCoorddv DD 01H DUP (?)
_glad_glFogCoordPointer DD 01H DUP (?)
_glad_glSecondaryColor3b DD 01H DUP (?)
_glad_glSecondaryColor3bv DD 01H DUP (?)
_glad_glSecondaryColor3d DD 01H DUP (?)
_glad_glSecondaryColor3dv DD 01H DUP (?)
_glad_glSecondaryColor3f DD 01H DUP (?)
_glad_glSecondaryColor3fv DD 01H DUP (?)
_glad_glSecondaryColor3i DD 01H DUP (?)
_glad_glSecondaryColor3iv DD 01H DUP (?)
_glad_glSecondaryColor3s DD 01H DUP (?)
_glad_glSecondaryColor3sv DD 01H DUP (?)
_glad_glSecondaryColor3ub DD 01H DUP (?)
_glad_glSecondaryColor3ubv DD 01H DUP (?)
_glad_glSecondaryColor3ui DD 01H DUP (?)
_glad_glSecondaryColor3uiv DD 01H DUP (?)
_glad_glSecondaryColor3us DD 01H DUP (?)
_glad_glSecondaryColor3usv DD 01H DUP (?)
_glad_glSecondaryColorPointer DD 01H DUP (?)
_glad_glWindowPos2d DD 01H DUP (?)
_glad_glWindowPos2dv DD 01H DUP (?)
_glad_glWindowPos2f DD 01H DUP (?)
_glad_glWindowPos2fv DD 01H DUP (?)
_glad_glWindowPos2i DD 01H DUP (?)
_glad_glWindowPos2iv DD 01H DUP (?)
_glad_glWindowPos2s DD 01H DUP (?)
_glad_glWindowPos2sv DD 01H DUP (?)
_glad_glWindowPos3d DD 01H DUP (?)
_glad_glWindowPos3dv DD 01H DUP (?)
_glad_glWindowPos3f DD 01H DUP (?)
_glad_glWindowPos3fv DD 01H DUP (?)
_glad_glWindowPos3i DD 01H DUP (?)
_glad_glWindowPos3iv DD 01H DUP (?)
_glad_glWindowPos3s DD 01H DUP (?)
_glad_glWindowPos3sv DD 01H DUP (?)
_glad_glBlendColor DD 01H DUP (?)
_glad_glBlendEquation DD 01H DUP (?)
_GLAD_GL_VERSION_1_5 DD 01H DUP (?)
_glad_glGenQueries DD 01H DUP (?)
_glad_glDeleteQueries DD 01H DUP (?)
_glad_glIsQuery DD 01H DUP (?)
_glad_glBeginQuery DD 01H DUP (?)
_glad_glEndQuery DD 01H DUP (?)
_glad_glGetQueryiv DD 01H DUP (?)
_glad_glGetQueryObjectiv DD 01H DUP (?)
_glad_glGetQueryObjectuiv DD 01H DUP (?)
_glad_glBindBuffer DD 01H DUP (?)
_glad_glDeleteBuffers DD 01H DUP (?)
_glad_glGenBuffers DD 01H DUP (?)
_glad_glIsBuffer DD 01H DUP (?)
_glad_glBufferData DD 01H DUP (?)
_glad_glBufferSubData DD 01H DUP (?)
_glad_glGetBufferSubData DD 01H DUP (?)
_glad_glMapBuffer DD 01H DUP (?)
_glad_glUnmapBuffer DD 01H DUP (?)
_glad_glGetBufferParameteriv DD 01H DUP (?)
_glad_glGetBufferPointerv DD 01H DUP (?)
_GLAD_GL_VERSION_2_0 DD 01H DUP (?)
_glad_glBlendEquationSeparate DD 01H DUP (?)
_glad_glDrawBuffers DD 01H DUP (?)
_glad_glStencilOpSeparate DD 01H DUP (?)
_glad_glStencilFuncSeparate DD 01H DUP (?)
_glad_glStencilMaskSeparate DD 01H DUP (?)
_glad_glAttachShader DD 01H DUP (?)
_glad_glBindAttribLocation DD 01H DUP (?)
_glad_glCompileShader DD 01H DUP (?)
_glad_glCreateProgram DD 01H DUP (?)
_glad_glCreateShader DD 01H DUP (?)
_glad_glDeleteProgram DD 01H DUP (?)
_glad_glDeleteShader DD 01H DUP (?)
_glad_glDetachShader DD 01H DUP (?)
_glad_glDisableVertexAttribArray DD 01H DUP (?)
_glad_glEnableVertexAttribArray DD 01H DUP (?)
_glad_glGetActiveAttrib DD 01H DUP (?)
_glad_glGetActiveUniform DD 01H DUP (?)
_glad_glGetAttachedShaders DD 01H DUP (?)
_glad_glGetAttribLocation DD 01H DUP (?)
_glad_glGetProgramiv DD 01H DUP (?)
_glad_glGetProgramInfoLog DD 01H DUP (?)
_glad_glGetShaderiv DD 01H DUP (?)
_glad_glGetShaderInfoLog DD 01H DUP (?)
_glad_glGetShaderSource DD 01H DUP (?)
_glad_glGetUniformLocation DD 01H DUP (?)
_glad_glGetUniformfv DD 01H DUP (?)
_glad_glGetUniformiv DD 01H DUP (?)
_glad_glGetVertexAttribdv DD 01H DUP (?)
_glad_glGetVertexAttribfv DD 01H DUP (?)
_glad_glGetVertexAttribiv DD 01H DUP (?)
_glad_glGetVertexAttribPointerv DD 01H DUP (?)
_glad_glIsProgram DD 01H DUP (?)
_glad_glIsShader DD 01H DUP (?)
_glad_glLinkProgram DD 01H DUP (?)
_glad_glShaderSource DD 01H DUP (?)
_glad_glUseProgram DD 01H DUP (?)
_glad_glUniform1f DD 01H DUP (?)
_glad_glUniform2f DD 01H DUP (?)
_glad_glUniform3f DD 01H DUP (?)
_glad_glUniform4f DD 01H DUP (?)
_glad_glUniform1i DD 01H DUP (?)
_glad_glUniform2i DD 01H DUP (?)
_glad_glUniform3i DD 01H DUP (?)
_glad_glUniform4i DD 01H DUP (?)
_glad_glUniform1fv DD 01H DUP (?)
_glad_glUniform2fv DD 01H DUP (?)
_glad_glUniform3fv DD 01H DUP (?)
_glad_glUniform4fv DD 01H DUP (?)
_glad_glUniform1iv DD 01H DUP (?)
_glad_glUniform2iv DD 01H DUP (?)
_glad_glUniform3iv DD 01H DUP (?)
_glad_glUniform4iv DD 01H DUP (?)
_glad_glUniformMatrix2fv DD 01H DUP (?)
_glad_glUniformMatrix3fv DD 01H DUP (?)
_glad_glUniformMatrix4fv DD 01H DUP (?)
_glad_glValidateProgram DD 01H DUP (?)
_glad_glVertexAttrib1d DD 01H DUP (?)
_glad_glVertexAttrib1dv DD 01H DUP (?)
_glad_glVertexAttrib1f DD 01H DUP (?)
_glad_glVertexAttrib1fv DD 01H DUP (?)
_glad_glVertexAttrib1s DD 01H DUP (?)
_glad_glVertexAttrib1sv DD 01H DUP (?)
_glad_glVertexAttrib2d DD 01H DUP (?)
_glad_glVertexAttrib2dv DD 01H DUP (?)
_glad_glVertexAttrib2f DD 01H DUP (?)
_glad_glVertexAttrib2fv DD 01H DUP (?)
_glad_glVertexAttrib2s DD 01H DUP (?)
_glad_glVertexAttrib2sv DD 01H DUP (?)
_glad_glVertexAttrib3d DD 01H DUP (?)
_glad_glVertexAttrib3dv DD 01H DUP (?)
_glad_glVertexAttrib3f DD 01H DUP (?)
_glad_glVertexAttrib3fv DD 01H DUP (?)
_glad_glVertexAttrib3s DD 01H DUP (?)
_glad_glVertexAttrib3sv DD 01H DUP (?)
_glad_glVertexAttrib4Nbv DD 01H DUP (?)
_glad_glVertexAttrib4Niv DD 01H DUP (?)
_glad_glVertexAttrib4Nsv DD 01H DUP (?)
_glad_glVertexAttrib4Nub DD 01H DUP (?)
_glad_glVertexAttrib4Nubv DD 01H DUP (?)
_glad_glVertexAttrib4Nuiv DD 01H DUP (?)
_glad_glVertexAttrib4Nusv DD 01H DUP (?)
_glad_glVertexAttrib4bv DD 01H DUP (?)
_glad_glVertexAttrib4d DD 01H DUP (?)
_glad_glVertexAttrib4dv DD 01H DUP (?)
_glad_glVertexAttrib4f DD 01H DUP (?)
_glad_glVertexAttrib4fv DD 01H DUP (?)
_glad_glVertexAttrib4iv DD 01H DUP (?)
_glad_glVertexAttrib4s DD 01H DUP (?)
_glad_glVertexAttrib4sv DD 01H DUP (?)
_glad_glVertexAttrib4ubv DD 01H DUP (?)
_glad_glVertexAttrib4uiv DD 01H DUP (?)
_glad_glVertexAttrib4usv DD 01H DUP (?)
_glad_glVertexAttribPointer DD 01H DUP (?)
_GLAD_GL_VERSION_2_1 DD 01H DUP (?)
_glad_glUniformMatrix2x3fv DD 01H DUP (?)
_glad_glUniformMatrix3x2fv DD 01H DUP (?)
_glad_glUniformMatrix2x4fv DD 01H DUP (?)
_glad_glUniformMatrix4x2fv DD 01H DUP (?)
_glad_glUniformMatrix3x4fv DD 01H DUP (?)
_glad_glUniformMatrix4x3fv DD 01H DUP (?)
_GLAD_GL_VERSION_3_0 DD 01H DUP (?)
_glad_glColorMaski DD 01H DUP (?)
_glad_glGetBooleani_v DD 01H DUP (?)
_glad_glGetIntegeri_v DD 01H DUP (?)
_glad_glEnablei DD 01H DUP (?)
_glad_glDisablei DD 01H DUP (?)
_glad_glIsEnabledi DD 01H DUP (?)
_glad_glBeginTransformFeedback DD 01H DUP (?)
_glad_glEndTransformFeedback DD 01H DUP (?)
_glad_glBindBufferRange DD 01H DUP (?)
_glad_glBindBufferBase DD 01H DUP (?)
_glad_glTransformFeedbackVaryings DD 01H DUP (?)
_glad_glGetTransformFeedbackVarying DD 01H DUP (?)
_glad_glClampColor DD 01H DUP (?)
_glad_glBeginConditionalRender DD 01H DUP (?)
_glad_glEndConditionalRender DD 01H DUP (?)
_glad_glVertexAttribIPointer DD 01H DUP (?)
_glad_glGetVertexAttribIiv DD 01H DUP (?)
_glad_glGetVertexAttribIuiv DD 01H DUP (?)
_glad_glVertexAttribI1i DD 01H DUP (?)
_glad_glVertexAttribI2i DD 01H DUP (?)
_glad_glVertexAttribI3i DD 01H DUP (?)
_glad_glVertexAttribI4i DD 01H DUP (?)
_glad_glVertexAttribI1ui DD 01H DUP (?)
_glad_glVertexAttribI2ui DD 01H DUP (?)
_glad_glVertexAttribI3ui DD 01H DUP (?)
_glad_glVertexAttribI4ui DD 01H DUP (?)
_glad_glVertexAttribI1iv DD 01H DUP (?)
_glad_glVertexAttribI2iv DD 01H DUP (?)
_glad_glVertexAttribI3iv DD 01H DUP (?)
_glad_glVertexAttribI4iv DD 01H DUP (?)
_glad_glVertexAttribI1uiv DD 01H DUP (?)
_glad_glVertexAttribI2uiv DD 01H DUP (?)
_glad_glVertexAttribI3uiv DD 01H DUP (?)
_glad_glVertexAttribI4uiv DD 01H DUP (?)
_glad_glVertexAttribI4bv DD 01H DUP (?)
_glad_glVertexAttribI4sv DD 01H DUP (?)
_glad_glVertexAttribI4ubv DD 01H DUP (?)
_glad_glVertexAttribI4usv DD 01H DUP (?)
_glad_glGetUniformuiv DD 01H DUP (?)
_glad_glBindFragDataLocation DD 01H DUP (?)
_glad_glGetFragDataLocation DD 01H DUP (?)
_glad_glUniform1ui DD 01H DUP (?)
_glad_glUniform2ui DD 01H DUP (?)
_glad_glUniform3ui DD 01H DUP (?)
_glad_glUniform4ui DD 01H DUP (?)
_glad_glUniform1uiv DD 01H DUP (?)
_glad_glUniform2uiv DD 01H DUP (?)
_glad_glUniform3uiv DD 01H DUP (?)
_glad_glUniform4uiv DD 01H DUP (?)
_glad_glTexParameterIiv DD 01H DUP (?)
_glad_glTexParameterIuiv DD 01H DUP (?)
_glad_glGetTexParameterIiv DD 01H DUP (?)
_glad_glGetTexParameterIuiv DD 01H DUP (?)
_glad_glClearBufferiv DD 01H DUP (?)
_glad_glClearBufferuiv DD 01H DUP (?)
_glad_glClearBufferfv DD 01H DUP (?)
_glad_glClearBufferfi DD 01H DUP (?)
_glad_glGetStringi DD 01H DUP (?)
_glad_glIsRenderbuffer DD 01H DUP (?)
_glad_glBindRenderbuffer DD 01H DUP (?)
_glad_glDeleteRenderbuffers DD 01H DUP (?)
_glad_glGenRenderbuffers DD 01H DUP (?)
_glad_glRenderbufferStorage DD 01H DUP (?)
_glad_glGetRenderbufferParameteriv DD 01H DUP (?)
_glad_glIsFramebuffer DD 01H DUP (?)
_glad_glBindFramebuffer DD 01H DUP (?)
_glad_glDeleteFramebuffers DD 01H DUP (?)
_glad_glGenFramebuffers DD 01H DUP (?)
_glad_glCheckFramebufferStatus DD 01H DUP (?)
_glad_glFramebufferTexture1D DD 01H DUP (?)
_glad_glFramebufferTexture2D DD 01H DUP (?)
_glad_glFramebufferTexture3D DD 01H DUP (?)
_glad_glFramebufferRenderbuffer DD 01H DUP (?)
_glad_glGetFramebufferAttachmentParameteriv DD 01H DUP (?)
_glad_glGenerateMipmap DD 01H DUP (?)
_glad_glBlitFramebuffer DD 01H DUP (?)
_glad_glRenderbufferStorageMultisample DD 01H DUP (?)
_glad_glFramebufferTextureLayer DD 01H DUP (?)
_glad_glMapBufferRange DD 01H DUP (?)
_glad_glFlushMappedBufferRange DD 01H DUP (?)
_glad_glBindVertexArray DD 01H DUP (?)
_glad_glDeleteVertexArrays DD 01H DUP (?)
_glad_glGenVertexArrays DD 01H DUP (?)
_glad_glIsVertexArray DD 01H DUP (?)
_GLAD_GL_VERSION_3_1 DD 01H DUP (?)
_glad_glDrawArraysInstanced DD 01H DUP (?)
_glad_glDrawElementsInstanced DD 01H DUP (?)
_glad_glTexBuffer DD 01H DUP (?)
_glad_glPrimitiveRestartIndex DD 01H DUP (?)
_glad_glCopyBufferSubData DD 01H DUP (?)
_glad_glGetUniformIndices DD 01H DUP (?)
_glad_glGetActiveUniformsiv DD 01H DUP (?)
_glad_glGetActiveUniformName DD 01H DUP (?)
_glad_glGetUniformBlockIndex DD 01H DUP (?)
_glad_glGetActiveUniformBlockiv DD 01H DUP (?)
_glad_glGetActiveUniformBlockName DD 01H DUP (?)
_glad_glUniformBlockBinding DD 01H DUP (?)
_GLAD_GL_VERSION_3_2 DD 01H DUP (?)
_glad_glDrawElementsBaseVertex DD 01H DUP (?)
_glad_glDrawRangeElementsBaseVertex DD 01H DUP (?)
_glad_glDrawElementsInstancedBaseVertex DD 01H DUP (?)
_glad_glMultiDrawElementsBaseVertex DD 01H DUP (?)
_glad_glProvokingVertex DD 01H DUP (?)
_glad_glFenceSync DD 01H DUP (?)
_glad_glIsSync DD 01H DUP (?)
_glad_glDeleteSync DD 01H DUP (?)
_glad_glClientWaitSync DD 01H DUP (?)
_glad_glWaitSync DD 01H DUP (?)
_glad_glGetInteger64v DD 01H DUP (?)
_glad_glGetSynciv DD 01H DUP (?)
_glad_glGetInteger64i_v DD 01H DUP (?)
_glad_glGetBufferParameteri64v DD 01H DUP (?)
_glad_glFramebufferTexture DD 01H DUP (?)
_glad_glTexImage2DMultisample DD 01H DUP (?)
_glad_glTexImage3DMultisample DD 01H DUP (?)
_glad_glGetMultisamplefv DD 01H DUP (?)
_glad_glSampleMaski DD 01H DUP (?)
_GLAD_GL_VERSION_3_3 DD 01H DUP (?)
_glad_glBindFragDataLocationIndexed DD 01H DUP (?)
_glad_glGetFragDataIndex DD 01H DUP (?)
_glad_glGenSamplers DD 01H DUP (?)
_glad_glDeleteSamplers DD 01H DUP (?)
_glad_glIsSampler DD 01H DUP (?)
_glad_glBindSampler DD 01H DUP (?)
_glad_glSamplerParameteri DD 01H DUP (?)
_glad_glSamplerParameteriv DD 01H DUP (?)
_glad_glSamplerParameterf DD 01H DUP (?)
_glad_glSamplerParameterfv DD 01H DUP (?)
_glad_glSamplerParameterIiv DD 01H DUP (?)
_glad_glSamplerParameterIuiv DD 01H DUP (?)
_glad_glGetSamplerParameteriv DD 01H DUP (?)
_glad_glGetSamplerParameterIiv DD 01H DUP (?)
_glad_glGetSamplerParameterfv DD 01H DUP (?)
_glad_glGetSamplerParameterIuiv DD 01H DUP (?)
_glad_glQueryCounter DD 01H DUP (?)
_glad_glGetQueryObjecti64v DD 01H DUP (?)
_glad_glGetQueryObjectui64v DD 01H DUP (?)
_glad_glVertexAttribDivisor DD 01H DUP (?)
_glad_glVertexAttribP1ui DD 01H DUP (?)
_glad_glVertexAttribP1uiv DD 01H DUP (?)
_glad_glVertexAttribP2ui DD 01H DUP (?)
_glad_glVertexAttribP2uiv DD 01H DUP (?)
_glad_glVertexAttribP3ui DD 01H DUP (?)
_glad_glVertexAttribP3uiv DD 01H DUP (?)
_glad_glVertexAttribP4ui DD 01H DUP (?)
_glad_glVertexAttribP4uiv DD 01H DUP (?)
_glad_glVertexP2ui DD 01H DUP (?)
_glad_glVertexP2uiv DD 01H DUP (?)
_glad_glVertexP3ui DD 01H DUP (?)
_glad_glVertexP3uiv DD 01H DUP (?)
_glad_glVertexP4ui DD 01H DUP (?)
_glad_glVertexP4uiv DD 01H DUP (?)
_glad_glTexCoordP1ui DD 01H DUP (?)
_glad_glTexCoordP1uiv DD 01H DUP (?)
_glad_glTexCoordP2ui DD 01H DUP (?)
_glad_glTexCoordP2uiv DD 01H DUP (?)
_glad_glTexCoordP3ui DD 01H DUP (?)
_glad_glTexCoordP3uiv DD 01H DUP (?)
_glad_glTexCoordP4ui DD 01H DUP (?)
_glad_glTexCoordP4uiv DD 01H DUP (?)
_glad_glMultiTexCoordP1ui DD 01H DUP (?)
_glad_glMultiTexCoordP1uiv DD 01H DUP (?)
_glad_glMultiTexCoordP2ui DD 01H DUP (?)
_glad_glMultiTexCoordP2uiv DD 01H DUP (?)
_glad_glMultiTexCoordP3ui DD 01H DUP (?)
_glad_glMultiTexCoordP3uiv DD 01H DUP (?)
_glad_glMultiTexCoordP4ui DD 01H DUP (?)
_glad_glMultiTexCoordP4uiv DD 01H DUP (?)
_glad_glNormalP3ui DD 01H DUP (?)
_glad_glNormalP3uiv DD 01H DUP (?)
_glad_glColorP3ui DD 01H DUP (?)
_glad_glColorP3uiv DD 01H DUP (?)
_glad_glColorP4ui DD 01H DUP (?)
_glad_glColorP4uiv DD 01H DUP (?)
_glad_glSecondaryColorP3ui DD 01H DUP (?)
_glad_glSecondaryColorP3uiv DD 01H DUP (?)
_BSS	ENDS
msvcjmc	SEGMENT
__F66CEB67_corecrt_stdio_config@h DB 01H
__101834BA_corecrt_wstdio@h DB 01H
__AD6A91B7_stdio@h DB 01H
__367CC694_corecrt_memcpy_s@h DB 01H
__DC9673E3_corecrt_wstring@h DB 01H
__A29A7DFB_string@h DB 01H
__7242C389_ctype@h DB 01H
__90A1F774_basetsd@h DB 01H
__AF541008_winnt@h DB 01H
__0D001789_processthreadsapi@h DB 01H
__F972325D_memoryapi@h DB 01H
__76CD430D_winerror@h DB 01H
__737D49DB_winbase@h DB 01H
__376EBCA0_winioctl@h DB 01H
__0396F1A5_stralign@h DB 01H
__550F0BDD_glad@c DB 01H
msvcjmc	ENDS
PUBLIC	___local_stdio_scanf_options
PUBLIC	__vsscanf_s_l
PUBLIC	_vsscanf_s
PUBLIC	_sscanf_s
PUBLIC	_gladLoadGL
PUBLIC	_gladLoadGLLoader
PUBLIC	__JustMyCode_Default
PUBLIC	??_C@_1BK@LCODAJLO@?$AAo?$AAp?$AAe?$AAn?$AAg?$AAl?$AA3?$AA2?$AA?4?$AAd?$AAl?$AAl@ ; `string'
PUBLIC	??_C@_0BC@FFKMKEGM@wglGetProcAddress@		; `string'
PUBLIC	??_C@_0L@BAPBLHME@glCullFace@			; `string'
PUBLIC	??_C@_0M@ILBMDJDA@glFrontFace@			; `string'
PUBLIC	??_C@_06HEADGMBC@glHint@			; `string'
PUBLIC	??_C@_0M@CFLGNFPG@glLineWidth@			; `string'
PUBLIC	??_C@_0M@EEAPMMNM@glPointSize@			; `string'
PUBLIC	??_C@_0O@DKMNBFMB@glPolygonMode@		; `string'
PUBLIC	??_C@_09ECGPAEPL@glScissor@			; `string'
PUBLIC	??_C@_0BA@INKFIMGP@glTexParameterf@		; `string'
PUBLIC	??_C@_0BB@KEOFAHDF@glTexParameterfv@		; `string'
PUBLIC	??_C@_0BA@KDNJAKA@glTexParameteri@		; `string'
PUBLIC	??_C@_0BB@KPLJEAAI@glTexParameteriv@		; `string'
PUBLIC	??_C@_0N@JDMMMFHL@glTexImage1D@			; `string'
PUBLIC	??_C@_0N@JBIKHLCC@glTexImage2D@			; `string'
PUBLIC	??_C@_0N@EKCLGPL@glDrawBuffer@			; `string'
PUBLIC	??_C@_07IBAPPAHJ@glClear@			; `string'
PUBLIC	??_C@_0N@OGLMDNKC@glClearColor@			; `string'
PUBLIC	??_C@_0P@KBLPBBFP@glClearStencil@		; `string'
PUBLIC	??_C@_0N@LJIELNG@glClearDepth@			; `string'
PUBLIC	??_C@_0O@DJFHPFEP@glStencilMask@		; `string'
PUBLIC	??_C@_0M@DLGOAHPH@glColorMask@			; `string'
PUBLIC	??_C@_0M@KABMFLLN@glDepthMask@			; `string'
PUBLIC	??_C@_09MHGMIMKN@glDisable@			; `string'
PUBLIC	??_C@_08OOEHEKOP@glEnable@			; `string'
PUBLIC	??_C@_08DFCPOKBK@glFinish@			; `string'
PUBLIC	??_C@_07COFELLJA@glFlush@			; `string'
PUBLIC	??_C@_0M@PFBKOKOH@glBlendFunc@			; `string'
PUBLIC	??_C@_09GKGMNAKG@glLogicOp@			; `string'
PUBLIC	??_C@_0O@ENNLLOLN@glStencilFunc@		; `string'
PUBLIC	??_C@_0M@BILBNGF@glStencilOp@			; `string'
PUBLIC	??_C@_0M@NEJABAEP@glDepthFunc@			; `string'
PUBLIC	??_C@_0O@BFLAHHCK@glPixelStoref@		; `string'
PUBLIC	??_C@_0O@JCCIGLOF@glPixelStorei@		; `string'
PUBLIC	??_C@_0N@HFKHBECK@glReadBuffer@			; `string'
PUBLIC	??_C@_0N@CKFNNHOO@glReadPixels@			; `string'
PUBLIC	??_C@_0O@NLMELLCJ@glGetBooleanv@		; `string'
PUBLIC	??_C@_0N@OFBMMCDH@glGetDoublev@			; `string'
PUBLIC	??_C@_0L@FPKAMKHB@glGetError@			; `string'
PUBLIC	??_C@_0M@CKCOBONE@glGetFloatv@			; `string'
PUBLIC	??_C@_0O@DHHDCCLF@glGetIntegerv@		; `string'
PUBLIC	??_C@_0M@OPOBFDCB@glGetString@			; `string'
PUBLIC	??_C@_0O@DOIIJLAD@glGetTexImage@		; `string'
PUBLIC	??_C@_0BE@DNHBPKMC@glGetTexParameterfv@		; `string'
PUBLIC	??_C@_0BE@DGCNLNPP@glGetTexParameteriv@		; `string'
PUBLIC	??_C@_0BJ@GAMLGIFF@glGetTexLevelParameterfv@	; `string'
PUBLIC	??_C@_0BJ@GLJHCPGI@glGetTexLevelParameteriv@	; `string'
PUBLIC	??_C@_0M@INHMIHKC@glIsEnabled@			; `string'
PUBLIC	??_C@_0N@PEBDIKOA@glDepthRange@			; `string'
PUBLIC	??_C@_0L@KBLIPDFH@glViewport@			; `string'
PUBLIC	??_C@_09KAGOBDOO@glNewList@			; `string'
PUBLIC	??_C@_09HKEBCLHH@glEndList@			; `string'
PUBLIC	??_C@_0L@CIPLDIDL@glCallList@			; `string'
PUBLIC	??_C@_0M@LFDBDICJ@glCallLists@			; `string'
PUBLIC	??_C@_0O@KPJIJAFM@glDeleteLists@		; `string'
PUBLIC	??_C@_0L@BNOFOEBP@glGenLists@			; `string'
PUBLIC	??_C@_0L@HDOJDFBA@glListBase@			; `string'
PUBLIC	??_C@_07FCOIFMD@glBegin@			; `string'
PUBLIC	??_C@_08PJOLDJDK@glBitmap@			; `string'
PUBLIC	??_C@_09JLHBBGHE@glColor3b@			; `string'
PUBLIC	??_C@_0L@COJGBKED@glColor3bv@			; `string'
PUBLIC	??_C@_09MNCLLBPC@glColor3d@			; `string'
PUBLIC	??_C@_0L@CKBLGGPB@glColor3dv@			; `string'
PUBLIC	??_C@_09PPBNNDHA@glColor3f@			; `string'
PUBLIC	??_C@_0L@CJJPLCJP@glColor3fv@			; `string'
PUBLIC	??_C@_09HIIFMPLP@glColor3i@			; `string'
PUBLIC	??_C@_0L@CCMDPFKC@glColor3iv@			; `string'
PUBLIC	??_C@_09MIKIDFGE@glColor3s@			; `string'
PUBLIC	??_C@_0L@DDHCNDAE@glColor3sv@			; `string'
PUBLIC	??_C@_0L@BJFBHIOD@glColor3ub@			; `string'
PUBLIC	??_C@_0M@EAHPDMMK@glColor3ubv@			; `string'
PUBLIC	??_C@_0L@PKKFKBCI@glColor3ui@			; `string'
PUBLIC	??_C@_0M@EMCKNDCL@glColor3uiv@			; `string'
PUBLIC	??_C@_0L@EKIIFLPD@glColor3us@			; `string'
PUBLIC	??_C@_0M@FNJLPFIN@glColor3usv@			; `string'
PUBLIC	??_C@_09JODOAAPB@glColor4b@			; `string'
PUBLIC	??_C@_0L@LDEBCCPK@glColor4bv@			; `string'
PUBLIC	??_C@_09MIGEKHHH@glColor4d@			; `string'
PUBLIC	??_C@_0L@LHMMFOEI@glColor4dv@			; `string'
PUBLIC	??_C@_09PKFCMFPF@glColor4f@			; `string'
PUBLIC	??_C@_0L@LEEIIKCG@glColor4fv@			; `string'
PUBLIC	??_C@_09HNMKNJDK@glColor4i@			; `string'
PUBLIC	??_C@_0L@LPBEMNBL@glColor4iv@			; `string'
PUBLIC	??_C@_09MNOHCDOB@glColor4s@			; `string'
PUBLIC	??_C@_0L@KOKFOLLN@glColor4sv@			; `string'
PUBLIC	??_C@_0L@IEIGEAFK@glColor4ub@			; `string'
PUBLIC	??_C@_0M@PCFPOANK@glColor4ubv@			; `string'
PUBLIC	??_C@_0L@GHHCJJJB@glColor4ui@			; `string'
PUBLIC	??_C@_0M@POAKAPDL@glColor4uiv@			; `string'
PUBLIC	??_C@_0L@NHFPGDEK@glColor4us@			; `string'
PUBLIC	??_C@_0M@OPLLCJJN@glColor4usv@			; `string'
PUBLIC	??_C@_0L@DFCKJEPI@glEdgeFlag@			; `string'
PUBLIC	??_C@_0M@MKDGIOMK@glEdgeFlagv@			; `string'
PUBLIC	??_C@_05OIBMBLHE@glEnd@				; `string'
PUBLIC	??_C@_08HOOEKNLP@glIndexd@			; `string'
PUBLIC	??_C@_09CCMFJEMA@glIndexdv@			; `string'
PUBLIC	??_C@_08EMNCMPDN@glIndexf@			; `string'
PUBLIC	??_C@_09CBEBEAKO@glIndexfv@			; `string'
PUBLIC	??_C@_08MLEKNDPC@glIndexi@			; `string'
PUBLIC	??_C@_09CKBNAHJD@glIndexiv@			; `string'
PUBLIC	??_C@_08HLGHCJCJ@glIndexs@			; `string'
PUBLIC	??_C@_09DLKMCBDF@glIndexsv@			; `string'
PUBLIC	??_C@_0L@FCAONKPI@glNormal3b@			; `string'
PUBLIC	??_C@_0M@MKFBKKIE@glNormal3bv@			; `string'
PUBLIC	??_C@_0L@EFEHNHO@glNormal3d@			; `string'
PUBLIC	??_C@_0M@MONMNGDG@glNormal3dv@			; `string'
PUBLIC	??_C@_0L@DGGCBPPM@glNormal3f@			; `string'
PUBLIC	??_C@_0M@MNFIACFI@glNormal3fv@			; `string'
PUBLIC	??_C@_0L@LBPKADDD@glNormal3i@			; `string'
PUBLIC	??_C@_0M@MGAEEFGF@glNormal3iv@			; `string'
PUBLIC	??_C@_0L@BNHPJOI@glNormal3s@			; `string'
PUBLIC	??_C@_0M@NHLFGDMD@glNormal3sv@			; `string'
PUBLIC	??_C@_0O@JNCPGME@glRasterPos2d@			; `string'
PUBLIC	??_C@_0P@OFGFAKCP@glRasterPos2dv@		; `string'
PUBLIC	??_C@_0O@DLOEJEEG@glRasterPos2f@		; `string'
PUBLIC	??_C@_0P@OGOBNOEB@glRasterPos2fv@		; `string'
PUBLIC	??_C@_0O@LMHMIIIJ@glRasterPos2i@		; `string'
PUBLIC	??_C@_0P@ONLNJJHM@glRasterPos2iv@		; `string'
PUBLIC	??_C@_0O@MFBHCFC@glRasterPos2s@			; `string'
PUBLIC	??_C@_0P@PMAMLPNK@glRasterPos2sv@		; `string'
PUBLIC	??_C@_0O@IBAJMPD@glRasterPos3d@			; `string'
PUBLIC	??_C@_0P@FNNJGNEK@glRasterPos3dv@		; `string'
PUBLIC	??_C@_0O@DKCGPOHB@glRasterPos3f@		; `string'
PUBLIC	??_C@_0P@FOFNLJCE@glRasterPos3fv@		; `string'
PUBLIC	??_C@_0O@LNLOOCLO@glRasterPos3i@		; `string'
PUBLIC	??_C@_0P@FFABPOBJ@glRasterPos3iv@		; `string'
PUBLIC	??_C@_0O@NJDBIGF@glRasterPos3s@			; `string'
PUBLIC	??_C@_0P@EELANILP@glRasterPos3sv@		; `string'
PUBLIC	??_C@_0O@NFPIKHG@glRasterPos4d@			; `string'
PUBLIC	??_C@_0P@MAAOFFPD@glRasterPos4dv@		; `string'
PUBLIC	??_C@_0O@DPGJOIPE@glRasterPos4f@		; `string'
PUBLIC	??_C@_0P@MDIKIBJN@glRasterPos4fv@		; `string'
PUBLIC	??_C@_0O@LIPBPEDL@glRasterPos4i@		; `string'
PUBLIC	??_C@_0P@MINGMGKA@glRasterPos4iv@		; `string'
PUBLIC	??_C@_0O@INMAOOA@glRasterPos4s@			; `string'
PUBLIC	??_C@_0P@NJGHOAAG@glRasterPos4sv@		; `string'
PUBLIC	??_C@_07GHILMIKG@glRectd@			; `string'
PUBLIC	??_C@_08EGLHFDGF@glRectdv@			; `string'
PUBLIC	??_C@_07FFLNKKCE@glRectf@			; `string'
PUBLIC	??_C@_08EFDDIHAL@glRectfv@			; `string'
PUBLIC	??_C@_07NCCFLGOL@glRecti@			; `string'
PUBLIC	??_C@_08EOGPMADG@glRectiv@			; `string'
PUBLIC	??_C@_07GCAIEMDA@glRects@			; `string'
PUBLIC	??_C@_08FPNOOGJA@glRectsv@			; `string'
PUBLIC	??_C@_0N@CKKBPCNP@glTexCoord1d@			; `string'
PUBLIC	??_C@_0O@GPCDLAMH@glTexCoord1dv@		; `string'
PUBLIC	??_C@_0N@BIJHJAFN@glTexCoord1f@			; `string'
PUBLIC	??_C@_0O@GMKHGEKJ@glTexCoord1fv@		; `string'
PUBLIC	??_C@_0N@JPAPIMJC@glTexCoord1i@			; `string'
PUBLIC	??_C@_0O@GHPLCDJE@glTexCoord1iv@		; `string'
PUBLIC	??_C@_0N@CPCCHGEJ@glTexCoord1s@			; `string'
PUBLIC	??_C@_0O@HGEKAFDC@glTexCoord1sv@		; `string'
PUBLIC	??_C@_0N@CIOHEMIG@glTexCoord2d@			; `string'
PUBLIC	??_C@_0O@HNJGBPCJ@glTexCoord2dv@		; `string'
PUBLIC	??_C@_0N@BKNBCOAE@glTexCoord2f@			; `string'
PUBLIC	??_C@_0O@HOBCMLEH@glTexCoord2fv@		; `string'
PUBLIC	??_C@_0N@JNEJDCML@glTexCoord2i@			; `string'
PUBLIC	??_C@_0O@HFEOIMHK@glTexCoord2iv@		; `string'
PUBLIC	??_C@_0N@CNGEMIBA@glTexCoord2s@			; `string'
PUBLIC	??_C@_0O@GEPPKKNM@glTexCoord2sv@		; `string'
PUBLIC	??_C@_0N@CJCFCGLB@glTexCoord3d@			; `string'
PUBLIC	??_C@_0O@MFCKHIEM@glTexCoord3dv@		; `string'
PUBLIC	??_C@_0N@BLBDEEDD@glTexCoord3f@			; `string'
PUBLIC	??_C@_0O@MGKOKMCC@glTexCoord3fv@		; `string'
PUBLIC	??_C@_0N@JMILFIPM@glTexCoord3i@			; `string'
PUBLIC	??_C@_0O@MNPCOLBP@glTexCoord3iv@		; `string'
PUBLIC	??_C@_0N@CMKGKCCH@glTexCoord3s@			; `string'
PUBLIC	??_C@_0O@NMEDMNLJ@glTexCoord3sv@		; `string'
PUBLIC	??_C@_0N@CMGKDADE@glTexCoord4d@			; `string'
PUBLIC	??_C@_0O@FIPNEAPF@glTexCoord4dv@		; `string'
PUBLIC	??_C@_0N@BOFMFCLG@glTexCoord4f@			; `string'
PUBLIC	??_C@_0O@FLHJJEJL@glTexCoord4fv@		; `string'
PUBLIC	??_C@_0N@JJMEEOHJ@glTexCoord4i@			; `string'
PUBLIC	??_C@_0O@FACFNDKG@glTexCoord4iv@		; `string'
PUBLIC	??_C@_0N@CJOJLEKC@glTexCoord4s@			; `string'
PUBLIC	??_C@_0O@EBJEPFAA@glTexCoord4sv@		; `string'
PUBLIC	??_C@_0L@INGMNOLD@glVertex2d@			; `string'
PUBLIC	??_C@_0M@CLIAFAJI@glVertex2dv@			; `string'
PUBLIC	??_C@_0L@LPFKLMDB@glVertex2f@			; `string'
PUBLIC	??_C@_0M@CIAEIEPG@glVertex2fv@			; `string'
PUBLIC	??_C@_0L@DIMCKAPO@glVertex2i@			; `string'
PUBLIC	??_C@_0M@CDFIMDML@glVertex2iv@			; `string'
PUBLIC	??_C@_0L@IIOPFKCF@glVertex2s@			; `string'
PUBLIC	??_C@_0M@DCOJOFGN@glVertex2sv@			; `string'
PUBLIC	??_C@_0L@IMKOLEIE@glVertex3d@			; `string'
PUBLIC	??_C@_0M@JDDMDHPN@glVertex3dv@			; `string'
PUBLIC	??_C@_0L@LOJINGAG@glVertex3f@			; `string'
PUBLIC	??_C@_0M@JALIODJD@glVertex3fv@			; `string'
PUBLIC	??_C@_0L@DJAAMKMJ@glVertex3i@			; `string'
PUBLIC	??_C@_0M@JLOEKEKO@glVertex3iv@			; `string'
PUBLIC	??_C@_0L@IJCNDABC@glVertex3s@			; `string'
PUBLIC	??_C@_0M@IKFFICAI@glVertex3sv@			; `string'
PUBLIC	??_C@_0L@IJOBKCAB@glVertex4d@			; `string'
PUBLIC	??_C@_0M@OOLAPEE@glVertex4dv@			; `string'
PUBLIC	??_C@_0L@LLNHMAID@glVertex4f@			; `string'
PUBLIC	??_C@_0M@NGPNLCK@glVertex4fv@			; `string'
PUBLIC	??_C@_0L@DMEPNMEM@glVertex4i@			; `string'
PUBLIC	??_C@_0M@GDDJMBH@glVertex4iv@			; `string'
PUBLIC	??_C@_0L@IMGCCGJH@glVertex4s@			; `string'
PUBLIC	??_C@_0M@BHICLKLB@glVertex4sv@			; `string'
PUBLIC	??_C@_0M@OHCNGGFF@glClipPlane@			; `string'
PUBLIC	??_C@_0BA@OOEHEGPC@glColorMaterial@		; `string'
PUBLIC	??_C@_06JJHNMGPD@glFogf@			; `string'
PUBLIC	??_C@_07FNEIAABA@glFogfv@			; `string'
PUBLIC	??_C@_06BOOFNKDM@glFogi@			; `string'
PUBLIC	??_C@_07FGBEEHCN@glFogiv@			; `string'
PUBLIC	??_C@_08LPDPILEL@glLightf@			; `string'
PUBLIC	??_C@_09JINEHJOD@glLightfv@			; `string'
PUBLIC	??_C@_08DIKHJHIE@glLighti@			; `string'
PUBLIC	??_C@_09JDIIDONO@glLightiv@			; `string'
PUBLIC	??_C@_0O@HPCJLAII@glLightModelf@		; `string'
PUBLIC	??_C@_0P@JKHJPMNC@glLightModelfv@		; `string'
PUBLIC	??_C@_0O@PILBKMEH@glLightModeli@		; `string'
PUBLIC	??_C@_0P@JBCFLLOP@glLightModeliv@		; `string'
PUBLIC	??_C@_0O@LDOINBOK@glLineStipple@		; `string'
PUBLIC	??_C@_0M@HANOIKMC@glMaterialf@			; `string'
PUBLIC	??_C@_0N@MHPKDGG@glMaterialfv@			; `string'
PUBLIC	??_C@_0M@PHEGJGAN@glMateriali@			; `string'
PUBLIC	??_C@_0N@HCDOEFL@glMaterialiv@			; `string'
PUBLIC	??_C@_0BB@GIADEJGP@glPolygonStipple@		; `string'
PUBLIC	??_C@_0N@NALMFHKN@glShadeModel@			; `string'
PUBLIC	??_C@_09FCLLGECI@glTexEnvf@			; `string'
PUBLIC	??_C@_0L@EMICMNOO@glTexEnvfv@			; `string'
PUBLIC	??_C@_09NFCDHIOH@glTexEnvi@			; `string'
PUBLIC	??_C@_0L@EHNOIKND@glTexEnviv@			; `string'
PUBLIC	??_C@_09NPHJCAAD@glTexGend@			; `string'
PUBLIC	??_C@_0L@OALDPGOK@glTexGendv@			; `string'
PUBLIC	??_C@_09ONEPECIB@glTexGenf@			; `string'
PUBLIC	??_C@_0L@ODDHCCIE@glTexGenfv@			; `string'
PUBLIC	??_C@_09GKNHFOEO@glTexGeni@			; `string'
PUBLIC	??_C@_0L@OIGLGFLJ@glTexGeniv@			; `string'
PUBLIC	??_C@_0BB@COFAIKCN@glFeedbackBuffer@		; `string'
PUBLIC	??_C@_0P@KACPMBCN@glSelectBuffer@		; `string'
PUBLIC	??_C@_0N@HCFJFDGP@glRenderMode@			; `string'
PUBLIC	??_C@_0M@LBOBLINN@glInitNames@			; `string'
PUBLIC	??_C@_0L@JFFJNAJA@glLoadName@			; `string'
PUBLIC	??_C@_0O@KCIMMNEH@glPassThrough@		; `string'
PUBLIC	??_C@_09IKDPIJOE@glPopName@			; `string'
PUBLIC	??_C@_0L@LFFFABIK@glPushName@			; `string'
PUBLIC	??_C@_0N@OKAMEJMG@glClearAccum@			; `string'
PUBLIC	??_C@_0N@EIILHCMH@glClearIndex@			; `string'
PUBLIC	??_C@_0M@ONDJOEOA@glIndexMask@			; `string'
PUBLIC	??_C@_07LNIJJMEN@glAccum@			; `string'
PUBLIC	??_C@_0M@LLNGAHMN@glPopAttrib@			; `string'
PUBLIC	??_C@_0N@KDMLHFJM@glPushAttrib@			; `string'
PUBLIC	??_C@_07FEHGGJHC@glMap1d@			; `string'
PUBLIC	??_C@_07GGEAALPA@glMap1f@			; `string'
PUBLIC	??_C@_07FGDANHCL@glMap2d@			; `string'
PUBLIC	??_C@_07GEAGLFKJ@glMap2f@			; `string'
PUBLIC	??_C@_0M@MNDKIDNO@glMapGrid1d@			; `string'
PUBLIC	??_C@_0M@PPAMOBFM@glMapGrid1f@			; `string'
PUBLIC	??_C@_0M@MPHMDNIH@glMapGrid2d@			; `string'
PUBLIC	??_C@_0M@PNEKFPAF@glMapGrid2f@			; `string'
PUBLIC	??_C@_0O@FJBIDDKI@glEvalCoord1d@		; `string'
PUBLIC	??_C@_0P@KBDBONJJ@glEvalCoord1dv@		; `string'
PUBLIC	??_C@_0O@GLCOFBCK@glEvalCoord1f@		; `string'
PUBLIC	??_C@_0P@KCLFDJPH@glEvalCoord1fv@		; `string'
PUBLIC	??_C@_0O@FLFOINPB@glEvalCoord2d@		; `string'
PUBLIC	??_C@_0P@LDIEECHH@glEvalCoord2dv@		; `string'
PUBLIC	??_C@_0O@GJGIOPHD@glEvalCoord2f@		; `string'
PUBLIC	??_C@_0P@LAAAJGBJ@glEvalCoord2fv@		; `string'
PUBLIC	??_C@_0M@DCFEDLDA@glEvalMesh1@			; `string'
PUBLIC	??_C@_0N@DOEOCCJJ@glEvalPoint1@			; `string'
PUBLIC	??_C@_0M@BJHJGIPD@glEvalMesh2@			; `string'
PUBLIC	??_C@_0N@BFGDHBFK@glEvalPoint2@			; `string'
PUBLIC	??_C@_0M@BJGLMKCC@glAlphaFunc@			; `string'
PUBLIC	??_C@_0M@JAMJIGNB@glPixelZoom@			; `string'
PUBLIC	??_C@_0BB@HFCIPEN@glPixelTransferf@		; `string'
PUBLIC	??_C@_0BB@IAMKJDIC@glPixelTransferi@		; `string'
PUBLIC	??_C@_0N@CNONNBNO@glPixelMapfv@			; `string'
PUBLIC	??_C@_0O@ENPFNAEO@glPixelMapuiv@		; `string'
PUBLIC	??_C@_0O@FMEEPGOI@glPixelMapusv@		; `string'
PUBLIC	??_C@_0N@OACCOOE@glCopyPixels@			; `string'
PUBLIC	??_C@_0N@FLFIHFDP@glDrawPixels@			; `string'
PUBLIC	??_C@_0P@MMMNLMC@glGetClipPlane@		; `string'
PUBLIC	??_C@_0N@MGGMJGKA@glGetLightfv@			; `string'
PUBLIC	??_C@_0N@MNDANBJN@glGetLightiv@			; `string'
PUBLIC	??_C@_0L@FGIDEHCA@glGetMapdv@			; `string'
PUBLIC	??_C@_0L@FFAHJDEO@glGetMapfv@			; `string'
PUBLIC	??_C@_0L@FOFLNEHD@glGetMapiv@			; `string'
PUBLIC	??_C@_0BA@GCPPEEDM@glGetMaterialfv@		; `string'
PUBLIC	??_C@_0BA@GJKDADAB@glGetMaterialiv@		; `string'
PUBLIC	??_C@_0BA@EDGNDGIE@glGetPixelMapfv@		; `string'
PUBLIC	??_C@_0BB@MGCFOIED@glGetPixelMapuiv@		; `string'
PUBLIC	??_C@_0BB@NHJEMOOF@glGetPixelMapusv@		; `string'
PUBLIC	??_C@_0BE@PBJHLEJI@glGetPolygonStipple@		; `string'
PUBLIC	??_C@_0O@KDAJGFCL@glGetTexEnvfv@		; `string'
PUBLIC	??_C@_0O@KIFFCCBG@glGetTexEnviv@		; `string'
PUBLIC	??_C@_0O@PDIFOCP@glGetTexGendv@			; `string'
PUBLIC	??_C@_0O@MLMIKEB@glGetTexGenfv@			; `string'
PUBLIC	??_C@_0O@HOAMNHM@glGetTexGeniv@			; `string'
PUBLIC	??_C@_08DMFMJKDH@glIsList@			; `string'
PUBLIC	??_C@_09ICLFHOKP@glFrustum@			; `string'
PUBLIC	??_C@_0P@EJAFHEPO@glLoadIdentity@		; `string'
PUBLIC	??_C@_0O@DJGBMGEI@glLoadMatrixf@		; `string'
PUBLIC	??_C@_0O@LFHKEMK@glLoadMatrixd@			; `string'
PUBLIC	??_C@_0N@KDLNHKEJ@glMatrixMode@			; `string'
PUBLIC	??_C@_0O@LHKDNPKJ@glMultMatrixf@		; `string'
PUBLIC	??_C@_0O@IFJFLNCL@glMultMatrixd@		; `string'
PUBLIC	??_C@_07DBAFHOII@glOrtho@			; `string'
PUBLIC	??_C@_0M@JPEAAEEK@glPopMatrix@			; `string'
PUBLIC	??_C@_0N@IHFNHGBL@glPushMatrix@			; `string'
PUBLIC	??_C@_09GANFLDAO@glRotated@			; `string'
PUBLIC	??_C@_09FCODNBIM@glRotatef@			; `string'
PUBLIC	??_C@_08KAMCINDI@glScaled@			; `string'
PUBLIC	??_C@_08JCPEOPLK@glScalef@			; `string'
PUBLIC	??_C@_0N@LHMFFDFG@glTranslated@			; `string'
PUBLIC	??_C@_0N@IFPDDBNE@glTranslatef@			; `string'
PUBLIC	??_C@_0N@CMNPPOHA@glDrawArrays@			; `string'
PUBLIC	??_C@_0P@MENFIFGE@glDrawElements@		; `string'
PUBLIC	??_C@_0O@LADEDGJO@glGetPointerv@		; `string'
PUBLIC	??_C@_0BA@FFBJGNC@glPolygonOffset@		; `string'
PUBLIC	??_C@_0BB@MEEDBHPL@glCopyTexImage1D@		; `string'
PUBLIC	??_C@_0BB@MGAFKJKC@glCopyTexImage2D@		; `string'
PUBLIC	??_C@_0BE@PKNCAIGI@glCopyTexSubImage1D@		; `string'
PUBLIC	??_C@_0BE@PIJELGDB@glCopyTexSubImage2D@		; `string'
PUBLIC	??_C@_0BA@NFOOCKJD@glTexSubImage1D@		; `string'
PUBLIC	??_C@_0BA@NHKIJEMK@glTexSubImage2D@		; `string'
PUBLIC	??_C@_0O@JKKCIBGC@glBindTexture@		; `string'
PUBLIC	??_C@_0BB@KMPLFJIC@glDeleteTextures@		; `string'
PUBLIC	??_C@_0O@LLMANLNK@glGenTextures@		; `string'
PUBLIC	??_C@_0M@NJHAEPDN@glIsTexture@			; `string'
PUBLIC	??_C@_0P@CKCIJELG@glArrayElement@		; `string'
PUBLIC	??_C@_0P@DPKEGLKI@glColorPointer@		; `string'
PUBLIC	??_C@_0BF@LJDHBNBP@glDisableClientState@	; `string'
PUBLIC	??_C@_0BC@LILGCNN@glEdgeFlagPointer@		; `string'
PUBLIC	??_C@_0BE@KECPKGNE@glEnableClientState@		; `string'
PUBLIC	??_C@_0P@KGJBLKPD@glIndexPointer@		; `string'
PUBLIC	??_C@_0BE@EDEDCKLI@glInterleavedArrays@		; `string'
PUBLIC	??_C@_0BA@DCLMCEOP@glNormalPointer@		; `string'
PUBLIC	??_C@_0BC@DAOMILMO@glTexCoordPointer@		; `string'
PUBLIC	??_C@_0BA@HAHECJNK@glVertexPointer@		; `string'
PUBLIC	??_C@_0BG@DHOKJLEP@glAreTexturesResident@	; `string'
PUBLIC	??_C@_0BF@FFCGNNIA@glPrioritizeTextures@	; `string'
PUBLIC	??_C@_09BBIPIKNC@glIndexub@			; `string'
PUBLIC	??_C@_0L@BBKJOCAC@glIndexubv@			; `string'
PUBLIC	??_C@_0BC@GOOJKIDH@glPopClientAttrib@		; `string'
PUBLIC	??_C@_0BD@JKGPLNEA@glPushClientAttrib@		; `string'
PUBLIC	??_C@_0BE@IHNAGJGJ@glDrawRangeElements@		; `string'
PUBLIC	??_C@_0N@JAEIBBBF@glTexImage3D@			; `string'
PUBLIC	??_C@_0BA@NGGKPOPN@glTexSubImage3D@		; `string'
PUBLIC	??_C@_0BE@PJFGNMAG@glCopyTexSubImage3D@		; `string'
PUBLIC	??_C@_0BA@KOBBIKOF@glActiveTexture@		; `string'
PUBLIC	??_C@_0BB@BJGIPMOA@glSampleCoverage@		; `string'
PUBLIC	??_C@_0BH@GGHNMAGP@glCompressedTexImage3D@	; `string'
PUBLIC	??_C@_0BH@GHLPKKFI@glCompressedTexImage2D@	; `string'
PUBLIC	??_C@_0BH@GFPJBEAB@glCompressedTexImage1D@	; `string'
PUBLIC	??_C@_0BK@EBJMCDPA@glCompressedTexSubImage3D@	; `string'
PUBLIC	??_C@_0BK@EAFOEJMH@glCompressedTexSubImage2D@	; `string'
PUBLIC	??_C@_0BK@ECBIPHJO@glCompressedTexSubImage1D@	; `string'
PUBLIC	??_C@_0BI@MPANLPPL@glGetCompressedTexImage@	; `string'
PUBLIC	??_C@_0BG@EGKOMLFO@glClientActiveTexture@	; `string'
PUBLIC	??_C@_0BC@IHHPPFPP@glMultiTexCoord1d@		; `string'
PUBLIC	??_C@_0BD@FEOAEOAI@glMultiTexCoord1dv@		; `string'
PUBLIC	??_C@_0BC@LFEJJHHN@glMultiTexCoord1f@		; `string'
PUBLIC	??_C@_0BD@FHGEJKGG@glMultiTexCoord1fv@		; `string'
PUBLIC	??_C@_0BC@DCNBILLC@glMultiTexCoord1i@		; `string'
PUBLIC	??_C@_0BD@FMDINNFL@glMultiTexCoord1iv@		; `string'
PUBLIC	??_C@_0BC@ICPMHBGJ@glMultiTexCoord1s@		; `string'
PUBLIC	??_C@_0BD@ENIJPLPN@glMultiTexCoord1sv@		; `string'
PUBLIC	??_C@_0BC@IFDJELKG@glMultiTexCoord2d@		; `string'
PUBLIC	??_C@_0BD@EGFFOBOG@glMultiTexCoord2dv@		; `string'
PUBLIC	??_C@_0BC@LHAPCJCE@glMultiTexCoord2f@		; `string'
PUBLIC	??_C@_0BD@EFNBDFII@glMultiTexCoord2fv@		; `string'
PUBLIC	??_C@_0BC@DAJHDFOL@glMultiTexCoord2i@		; `string'
PUBLIC	??_C@_0BD@EOINHCLF@glMultiTexCoord2iv@		; `string'
PUBLIC	??_C@_0BC@IALKMPDA@glMultiTexCoord2s@		; `string'
PUBLIC	??_C@_0BD@FPDMFEBD@glMultiTexCoord2sv@		; `string'
PUBLIC	??_C@_0BC@IEPLCBJB@glMultiTexCoord3d@		; `string'
PUBLIC	??_C@_0BD@POOJIGID@glMultiTexCoord3dv@		; `string'
PUBLIC	??_C@_0BC@LGMNEDBD@glMultiTexCoord3f@		; `string'
PUBLIC	??_C@_0BD@PNGNFCON@glMultiTexCoord3fv@		; `string'
PUBLIC	??_C@_0BC@DBFFFPNM@glMultiTexCoord3i@		; `string'
PUBLIC	??_C@_0BD@PGDBBFNA@glMultiTexCoord3iv@		; `string'
PUBLIC	??_C@_0BC@IBHIKFAH@glMultiTexCoord3s@		; `string'
PUBLIC	??_C@_0BD@OHIADDHG@glMultiTexCoord3sv@		; `string'
PUBLIC	??_C@_0BC@IBLEDHBE@glMultiTexCoord4d@		; `string'
PUBLIC	??_C@_0BD@GDDOLODK@glMultiTexCoord4dv@		; `string'
PUBLIC	??_C@_0BC@LDICFFJG@glMultiTexCoord4f@		; `string'
PUBLIC	??_C@_0BD@GALKGKFE@glMultiTexCoord4fv@		; `string'
PUBLIC	??_C@_0BC@DEBKEJFJ@glMultiTexCoord4i@		; `string'
PUBLIC	??_C@_0BD@GLOGCNGJ@glMultiTexCoord4iv@		; `string'
PUBLIC	??_C@_0BC@IEDHLDIC@glMultiTexCoord4s@		; `string'
PUBLIC	??_C@_0BD@HKFHALMP@glMultiTexCoord4sv@		; `string'
PUBLIC	??_C@_0BH@OJNLGHA@glLoadTransposeMatrixf@	; `string'
PUBLIC	??_C@_0BH@DMKLNEPC@glLoadTransposeMatrixd@	; `string'
PUBLIC	??_C@_0BH@DPBMPCNC@glMultTransposeMatrixf@	; `string'
PUBLIC	??_C@_0BH@NCKJAFA@glMultTransposeMatrixd@	; `string'
PUBLIC	??_C@_0BE@LLLCIIOO@glBlendFuncSeparate@		; `string'
PUBLIC	??_C@_0BC@IBABPJFA@glMultiDrawArrays@		; `string'
PUBLIC	??_C@_0BE@MPDFJJLL@glMultiDrawElements@		; `string'
PUBLIC	??_C@_0BC@FGOOEDO@glPointParameterf@		; `string'
PUBLIC	??_C@_0BD@LIABKNDP@glPointParameterfv@		; `string'
PUBLIC	??_C@_0BC@ICPGPIPB@glPointParameteri@		; `string'
PUBLIC	??_C@_0BD@LDFNOKAC@glPointParameteriv@		; `string'
PUBLIC	??_C@_0M@GCBCNNOF@glFogCoordf@			; `string'
PUBLIC	??_C@_0N@KJGHNKFK@glFogCoordfv@			; `string'
PUBLIC	??_C@_0M@FACELPGH@glFogCoordd@			; `string'
PUBLIC	??_C@_0N@KKODAODE@glFogCoorddv@			; `string'
PUBLIC	??_C@_0BC@GECGFLP@glFogCoordPointer@		; `string'
PUBLIC	??_C@_0BD@MCCHHBGK@glSecondaryColor3b@		; `string'
PUBLIC	??_C@_0BE@NEMAHBEH@glSecondaryColor3bv@		; `string'
PUBLIC	??_C@_0BD@JEHNNGOM@glSecondaryColor3d@		; `string'
PUBLIC	??_C@_0BE@NAENANPF@glSecondaryColor3dv@		; `string'
PUBLIC	??_C@_0BD@KGELLEGO@glSecondaryColor3f@		; `string'
PUBLIC	??_C@_0BE@NDMJNJJL@glSecondaryColor3fv@		; `string'
PUBLIC	??_C@_0BD@CBNDKIKB@glSecondaryColor3i@		; `string'
PUBLIC	??_C@_0BE@NIJFJOKG@glSecondaryColor3iv@		; `string'
PUBLIC	??_C@_0BD@JBPOFCHK@glSecondaryColor3s@		; `string'
PUBLIC	??_C@_0BE@MJCELIAA@glSecondaryColor3sv@		; `string'
PUBLIC	??_C@_0BE@ODAHBDOH@glSecondaryColor3ub@		; `string'
PUBLIC	??_C@_0BF@EHOIKOLI@glSecondaryColor3ubv@	; `string'
PUBLIC	??_C@_0BE@PDMKCM@glSecondaryColor3ui@		; `string'
PUBLIC	??_C@_0BF@ELLNEBFJ@glSecondaryColor3uiv@	; `string'
PUBLIC	??_C@_0BE@LANODAPH@glSecondaryColor3us@		; `string'
PUBLIC	??_C@_0BF@FKAMGHPP@glSecondaryColor3usv@	; `string'
PUBLIC	??_C@_0BI@EFMNDJOO@glSecondaryColorPointer@	; `string'
PUBLIC	??_C@_0O@JGNKBLNH@glWindowPos2d@		; `string'
PUBLIC	??_C@_0P@GBEEEDBM@glWindowPos2dv@		; `string'
PUBLIC	??_C@_0O@KEOMHJFF@glWindowPos2f@		; `string'
PUBLIC	??_C@_0P@GCMAJHHC@glWindowPos2fv@		; `string'
PUBLIC	??_C@_0O@CDHEGFJK@glWindowPos2i@		; `string'
PUBLIC	??_C@_0P@GJJMNAEP@glWindowPos2iv@		; `string'
PUBLIC	??_C@_0O@JDFJJPEB@glWindowPos2s@		; `string'
PUBLIC	??_C@_0P@HICNPGOJ@glWindowPos2sv@		; `string'
PUBLIC	??_C@_0O@JHBIHBOA@glWindowPos3d@		; `string'
PUBLIC	??_C@_0P@NJPICEHJ@glWindowPos3dv@		; `string'
PUBLIC	??_C@_0O@KFCOBDGC@glWindowPos3f@		; `string'
PUBLIC	??_C@_0P@NKHMPABH@glWindowPos3fv@		; `string'
PUBLIC	??_C@_0O@CCLGAPKN@glWindowPos3i@		; `string'
PUBLIC	??_C@_0P@NBCALHCK@glWindowPos3iv@		; `string'
PUBLIC	??_C@_0O@JCJLPFHG@glWindowPos3s@		; `string'
PUBLIC	??_C@_0P@MAJBJBIM@glWindowPos3sv@		; `string'
PUBLIC	??_C@_0N@PKBMFJDK@glBlendColor@			; `string'
PUBLIC	??_C@_0BA@PFHILPAN@glBlendEquation@		; `string'
PUBLIC	??_C@_0N@CJIGHHJ@glGenQueries@			; `string'
PUBLIC	??_C@_0BA@IOKEHMOH@glDeleteQueries@		; `string'
PUBLIC	??_C@_09CNNLCEBN@glIsQuery@			; `string'
PUBLIC	??_C@_0N@GIAGIGPA@glBeginQuery@			; `string'
PUBLIC	??_C@_0L@FLEBHIDM@glEndQuery@			; `string'
PUBLIC	??_C@_0N@BPACPFCI@glGetQueryiv@			; `string'
PUBLIC	??_C@_0BD@KMBBCJID@glGetQueryObjectiv@		; `string'
PUBLIC	??_C@_0BE@MNBBKJ@glGetQueryObjectuiv@		; `string'
PUBLIC	??_C@_0N@BONEPPLO@glBindBuffer@			; `string'
PUBLIC	??_C@_0BA@DMNLADIO@glDeleteBuffers@		; `string'
PUBLIC	??_C@_0N@LAOHBIBA@glGenBuffers@			; `string'
PUBLIC	??_C@_0L@KFPDMKNG@glIsBuffer@			; `string'
PUBLIC	??_C@_0N@JHHJMABP@glBufferData@			; `string'
PUBLIC	??_C@_0BA@GAJMDBBN@glBufferSubData@		; `string'
PUBLIC	??_C@_0BD@PNDAHMBO@glGetBufferSubData@		; `string'
PUBLIC	??_C@_0M@NNHDPACA@glMapBuffer@			; `string'
PUBLIC	??_C@_0O@OFGHBLEO@glUnmapBuffer@		; `string'
PUBLIC	??_C@_0BH@BMIEIFJP@glGetBufferParameteriv@	; `string'
PUBLIC	??_C@_0BE@KNJEIFMC@glGetBufferPointerv@		; `string'
PUBLIC	??_C@_0BI@JNHDNJAG@glBlendEquationSeparate@	; `string'
PUBLIC	??_C@_0O@COHJKDBH@glDrawBuffers@		; `string'
PUBLIC	??_C@_0BE@GAPLDNGF@glStencilOpSeparate@		; `string'
PUBLIC	??_C@_0BG@FCMNCEIA@glStencilFuncSeparate@	; `string'
PUBLIC	??_C@_0BG@MMKPIEJI@glStencilMaskSeparate@	; `string'
PUBLIC	??_C@_0P@LDMLEABL@glAttachShader@		; `string'
PUBLIC	??_C@_0BF@MHKEFIHM@glBindAttribLocation@	; `string'
PUBLIC	??_C@_0BA@DGIEGONF@glCompileShader@		; `string'
PUBLIC	??_C@_0BA@FLKLHNKP@glCreateProgram@		; `string'
PUBLIC	??_C@_0P@HGHBNC@glCreateShader@			; `string'
PUBLIC	??_C@_0BA@NKGCDOPO@glDeleteProgram@		; `string'
PUBLIC	??_C@_0P@HHCDONAG@glDeleteShader@		; `string'
PUBLIC	??_C@_0P@DJFJFCJL@glDetachShader@		; `string'
PUBLIC	??_C@_0BL@NKHLOFFF@glDisableVertexAttribArray@	; `string'
PUBLIC	??_C@_0BK@EHBAHNHE@glEnableVertexAttribArray@	; `string'
PUBLIC	??_C@_0BC@MBALAOHF@glGetActiveAttrib@		; `string'
PUBLIC	??_C@_0BD@NIMHLLKN@glGetActiveUniform@		; `string'
PUBLIC	??_C@_0BF@GHMDGFEM@glGetAttachedShaders@	; `string'
PUBLIC	??_C@_0BE@BEPGJDMM@glGetAttribLocation@		; `string'
PUBLIC	??_C@_0P@FMMDFLCO@glGetProgramiv@		; `string'
PUBLIC	??_C@_0BE@DHGHAJFL@glGetProgramInfoLog@		; `string'
PUBLIC	??_C@_0O@JBDFPDMG@glGetShaderiv@		; `string'
PUBLIC	??_C@_0BD@GIABBCMO@glGetShaderInfoLog@		; `string'
PUBLIC	??_C@_0BC@ELEIFJEL@glGetShaderSource@		; `string'
PUBLIC	??_C@_0BF@KIOPGICP@glGetUniformLocation@	; `string'
PUBLIC	??_C@_0P@DFCJIBG@glGetUniformfv@		; `string'
PUBLIC	??_C@_0P@IAONPCL@glGetUniformiv@		; `string'
PUBLIC	??_C@_0BE@HDPMJMIN@glGetVertexAttribdv@		; `string'
PUBLIC	??_C@_0BE@HAHIEIOD@glGetVertexAttribfv@		; `string'
PUBLIC	??_C@_0BE@HLCEAPNO@glGetVertexAttribiv@		; `string'
PUBLIC	??_C@_0BK@DOJMENLD@glGetVertexAttribPointerv@	; `string'
PUBLIC	??_C@_0M@INLOJDGO@glIsProgram@			; `string'
PUBLIC	??_C@_0L@MDDLFIHC@glIsShader@			; `string'
PUBLIC	??_C@_0O@PIOEEBPO@glLinkProgram@		; `string'
PUBLIC	??_C@_0P@DFHCPFMO@glShaderSource@		; `string'
PUBLIC	??_C@_0N@ICBDHBI@glUseProgram@			; `string'
PUBLIC	??_C@_0M@MLICAPOF@glUniform1f@			; `string'
PUBLIC	??_C@_0M@MJMELBLM@glUniform2f@			; `string'
PUBLIC	??_C@_0M@MIAGNLIL@glUniform3f@			; `string'
PUBLIC	??_C@_0M@MNEJMNAO@glUniform4f@			; `string'
PUBLIC	??_C@_0M@EMBKBDCK@glUniform1i@			; `string'
PUBLIC	??_C@_0M@EOFMKNHD@glUniform2i@			; `string'
PUBLIC	??_C@_0M@EPJOMHEE@glUniform3i@			; `string'
PUBLIC	??_C@_0M@EKNBNBMB@glUniform4i@			; `string'
PUBLIC	??_C@_0N@KJMOEKII@glUniform1fv@			; `string'
PUBLIC	??_C@_0N@LLHLOFGG@glUniform2fv@			; `string'
PUBLIC	??_C@_0N@DMHICAD@glUniform3fv@			; `string'
PUBLIC	??_C@_0N@JOBALKLK@glUniform4fv@			; `string'
PUBLIC	??_C@_0N@KCJCANLF@glUniform1iv@			; `string'
PUBLIC	??_C@_0N@LACHKCFL@glUniform2iv@			; `string'
PUBLIC	??_C@_0N@IJLMFDO@glUniform3iv@			; `string'
PUBLIC	??_C@_0N@JFEMPNIH@glUniform4iv@			; `string'
PUBLIC	??_C@_0BD@JIBJELHD@glUniformMatrix2fv@		; `string'
PUBLIC	??_C@_0BD@CAKFCMBG@glUniformMatrix3fv@		; `string'
PUBLIC	??_C@_0BD@LNHCBEKP@glUniformMatrix4fv@		; `string'
PUBLIC	??_C@_0BC@MAPGDLJK@glValidateProgram@		; `string'
PUBLIC	??_C@_0BB@PIOLPNPC@glVertexAttrib1d@		; `string'
PUBLIC	??_C@_0BC@CKCOKGLN@glVertexAttrib1dv@		; `string'
PUBLIC	??_C@_0BB@MKNNJPHA@glVertexAttrib1f@		; `string'
PUBLIC	??_C@_0BC@CJKKHCND@glVertexAttrib1fv@		; `string'
PUBLIC	??_C@_0BB@PNGIHJGE@glVertexAttrib1s@		; `string'
PUBLIC	??_C@_0BC@DDEHBDEI@glVertexAttrib1sv@		; `string'
PUBLIC	??_C@_0BB@PKKNEDKL@glVertexAttrib2d@		; `string'
PUBLIC	??_C@_0BC@DIJLAJFD@glVertexAttrib2dv@		; `string'
PUBLIC	??_C@_0BB@MIJLCBCJ@glVertexAttrib2f@		; `string'
PUBLIC	??_C@_0BC@DLBPNNDN@glVertexAttrib2fv@		; `string'
PUBLIC	??_C@_0BB@PPCOMHDN@glVertexAttrib2s@		; `string'
PUBLIC	??_C@_0BC@CBPCLMKG@glVertexAttrib2sv@		; `string'
PUBLIC	??_C@_0BB@PLGPCJJM@glVertexAttrib3d@		; `string'
PUBLIC	??_C@_0BC@IACHGODG@glVertexAttrib3dv@		; `string'
PUBLIC	??_C@_0BB@MJFJELBO@glVertexAttrib3f@		; `string'
PUBLIC	??_C@_0BC@IDKDLKFI@glVertexAttrib3fv@		; `string'
PUBLIC	??_C@_0BB@POOMKNAK@glVertexAttrib3s@		; `string'
PUBLIC	??_C@_0BC@JJEONLMD@glVertexAttrib3sv@		; `string'
PUBLIC	??_C@_0BD@NANPPEGB@glVertexAttrib4Nbv@		; `string'
PUBLIC	??_C@_0BD@NMIKBLIA@glVertexAttrib4Niv@		; `string'
PUBLIC	??_C@_0BD@MNDLDNCG@glVertexAttrib4Nsv@		; `string'
PUBLIC	??_C@_0BD@OHBIJGMB@glVertexAttrib4Nub@		; `string'
PUBLIC	??_C@_0BE@JFOBDEMA@glVertexAttrib4Nubv@		; `string'
PUBLIC	??_C@_0BE@JJLENLCB@glVertexAttrib4Nuiv@		; `string'
PUBLIC	??_C@_0BE@IIAFPNIH@glVertexAttrib4Nusv@		; `string'
PUBLIC	??_C@_0BC@BJHNCKDN@glVertexAttrib4bv@		; `string'
PUBLIC	??_C@_0BB@POCADPBJ@glVertexAttrib4d@		; `string'
PUBLIC	??_C@_0BC@BNPAFGIP@glVertexAttrib4dv@		; `string'
PUBLIC	??_C@_0BB@MMBGFNJL@glVertexAttrib4f@		; `string'
PUBLIC	??_C@_0BC@BOHEICOB@glVertexAttrib4fv@		; `string'
PUBLIC	??_C@_0BC@BFCIMFNM@glVertexAttrib4iv@		; `string'
PUBLIC	??_C@_0BB@PLKDLLIP@glVertexAttrib4s@		; `string'
PUBLIC	??_C@_0BC@EJJODHK@glVertexAttrib4sv@		; `string'
PUBLIC	??_C@_0BD@PHPFILMB@glVertexAttrib4ubv@		; `string'
PUBLIC	??_C@_0BD@PLKAGECA@glVertexAttrib4uiv@		; `string'
PUBLIC	??_C@_0BD@OKBBECIG@glVertexAttrib4usv@		; `string'
PUBLIC	??_C@_0BG@JPNNNPKG@glVertexAttribPointer@	; `string'
PUBLIC	??_C@_0BF@KDDJMCDK@glUniformMatrix2x3fv@	; `string'
PUBLIC	??_C@_0BF@NANJHGPK@glUniformMatrix3x2fv@	; `string'
PUBLIC	??_C@_0BF@DOOOPKID@glUniformMatrix2x4fv@	; `string'
PUBLIC	??_C@_0BF@MNNMEGEC@glUniformMatrix4x2fv@	; `string'
PUBLIC	??_C@_0BF@PFLCCJCG@glUniformMatrix3x4fv@	; `string'
PUBLIC	??_C@_0BF@HFGACBCH@glUniformMatrix4x3fv@	; `string'
PUBLIC	??_C@_0N@JHNNNJFG@glColorMaski@			; `string'
PUBLIC	??_C@_0BA@OAKNOBP@glGetBooleani_v@		; `string'
PUBLIC	??_C@_0BA@FKCNNMFO@glGetIntegeri_v@		; `string'
PUBLIC	??_C@_09IEGEGIEN@glEnablei@			; `string'
PUBLIC	??_C@_0L@BMJPGDDH@glDisablei@			; `string'
PUBLIC	??_C@_0N@IMGKGOKN@glIsEnabledi@			; `string'
PUBLIC	??_C@_0BJ@FHJKOECC@glBeginTransformFeedback@	; `string'
PUBLIC	??_C@_0BH@LCFLNNBH@glEndTransformFeedback@	; `string'
PUBLIC	??_C@_0BC@EEMMCHMB@glBindBufferRange@		; `string'
PUBLIC	??_C@_0BB@LDPKOCJI@glBindBufferBase@		; `string'
PUBLIC	??_C@_0BM@IJFAKBEF@glTransformFeedbackVaryings@	; `string'
PUBLIC	??_C@_0BO@ODFLPNG@glGetTransformFeedbackVarying@ ; `string'
PUBLIC	??_C@_0N@HLGAGIMI@glClampColor@			; `string'
PUBLIC	??_C@_0BJ@EHEPIEPF@glBeginConditionalRender@	; `string'
PUBLIC	??_C@_0BH@KCIOLNMA@glEndConditionalRender@	; `string'
PUBLIC	??_C@_0BH@NLOEHKCD@glVertexAttribIPointer@	; `string'
PUBLIC	??_C@_0BF@KPDNEONP@glGetVertexAttribIiv@	; `string'
PUBLIC	??_C@_0BG@GCBDCABB@glGetVertexAttribIuiv@	; `string'
PUBLIC	??_C@_0BC@CDIIMMAL@glVertexAttribI1i@		; `string'
PUBLIC	??_C@_0BC@CBMOHCFC@glVertexAttribI2i@		; `string'
PUBLIC	??_C@_0BC@CAAMBIGF@glVertexAttribI3i@		; `string'
PUBLIC	??_C@_0BC@CFEDAOOA@glVertexAttribI4i@		; `string'
PUBLIC	??_C@_0BD@DGPCNLLO@glVertexAttribI1ui@		; `string'
PUBLIC	??_C@_0BD@CEEHHEFA@glVertexAttribI2ui@		; `string'
PUBLIC	??_C@_0BD@JMPLBDDF@glVertexAttribI3ui@		; `string'
PUBLIC	??_C@_0BD@BCMCLIM@glVertexAttribI4ui@		; `string'
PUBLIC	??_C@_0BD@OOJEIPDE@glVertexAttribI1iv@		; `string'
PUBLIC	??_C@_0BD@PMCBCANK@glVertexAttribI2iv@		; `string'
PUBLIC	??_C@_0BD@EEJNEHLP@glVertexAttribI3iv@		; `string'
PUBLIC	??_C@_0BD@NJEKHPAG@glVertexAttribI4iv@		; `string'
PUBLIC	??_C@_0BE@FFIKLCCA@glVertexAttribI1uiv@		; `string'
PUBLIC	??_C@_0BE@BCCKMIPA@glVertexAttribI2uiv@		; `string'
PUBLIC	??_C@_0BE@CPEKOBEA@glVertexAttribI3uiv@		; `string'
PUBLIC	??_C@_0BE@JNGKDNFA@glVertexAttribI4uiv@		; `string'
PUBLIC	??_C@_0BD@NFBPJAOH@glVertexAttribI4bv@		; `string'
PUBLIC	??_C@_0BD@MIPLFJKA@glVertexAttribI4sv@		; `string'
PUBLIC	??_C@_0BE@JBDPNCLB@glVertexAttribI4ubv@		; `string'
PUBLIC	??_C@_0BE@IMNLBLPG@glVertexAttribI4usv@		; `string'
PUBLIC	??_C@_0BA@NIGECFIF@glGetUniformuiv@		; `string'
PUBLIC	??_C@_0BH@DLJLAGBA@glBindFragDataLocation@	; `string'
PUBLIC	??_C@_0BG@NDOIGAMC@glGetFragDataLocation@	; `string'
PUBLIC	??_C@_0N@HKPEFJDP@glUniform1ui@			; `string'
PUBLIC	??_C@_0N@GIEBPGNB@glUniform2ui@			; `string'
PUBLIC	??_C@_0N@NAPNJBLE@glUniform3ui@			; `string'
PUBLIC	??_C@_0N@ENCKKJAN@glUniform4ui@			; `string'
PUBLIC	??_C@_0O@MPHJAHBE@glUniform1uiv@		; `string'
PUBLIC	??_C@_0O@IINJHNME@glUniform2uiv@		; `string'
PUBLIC	??_C@_0O@LFLJFEHE@glUniform3uiv@		; `string'
PUBLIC	??_C@_0O@HJJIIGE@glUniform4uiv@			; `string'
PUBLIC	??_C@_0BC@MAFJKEHB@glTexParameterIiv@		; `string'
PUBLIC	??_C@_0BD@FDBCMKBE@glTexParameterIuiv@		; `string'
PUBLIC	??_C@_0BF@ODBJFHDD@glGetTexParameterIiv@	; `string'
PUBLIC	??_C@_0BG@MLODKKFL@glGetTexParameterIuiv@	; `string'
PUBLIC	??_C@_0BA@CGCJAEIN@glClearBufferiv@		; `string'
PUBLIC	??_C@_0BB@OHPPAEID@glClearBufferuiv@		; `string'
PUBLIC	??_C@_0BA@CNHFEDLA@glClearBufferfv@		; `string'
PUBLIC	??_C@_0BA@OACPENCO@glClearBufferfi@		; `string'
PUBLIC	??_C@_0N@PILJCBOD@glGetStringi@			; `string'
PUBLIC	??_C@_0BB@DGGHKKOH@glIsRenderbuffer@		; `string'
PUBLIC	??_C@_0BD@EPOPJGFA@glBindRenderbuffer@		; `string'
PUBLIC	??_C@_0BG@KKOKEJDE@glDeleteRenderbuffers@	; `string'
PUBLIC	??_C@_0BD@MIGEDNGJ@glGenRenderbuffers@		; `string'
PUBLIC	??_C@_0BG@EOIILGMJ@glRenderbufferStorage@	; `string'
PUBLIC	??_C@_0BN@FGKAECKO@glGetRenderbufferParameteriv@ ; `string'
PUBLIC	??_C@_0BA@FGBIJCNH@glIsFramebuffer@		; `string'
PUBLIC	??_C@_0BC@CJMIBNO@glBindFramebuffer@		; `string'
PUBLIC	??_C@_0BF@DJNJENP@glDeleteFramebuffers@		; `string'
PUBLIC	??_C@_0BC@FAPEBGID@glGenFramebuffers@		; `string'
PUBLIC	??_C@_0BJ@GIOLHEAD@glCheckFramebufferStatus@	; `string'
PUBLIC	??_C@_0BH@JAMDNNBM@glFramebufferTexture1D@	; `string'
PUBLIC	??_C@_0BH@JCIFGDEF@glFramebufferTexture2D@	; `string'
PUBLIC	??_C@_0BH@JDEHAJHC@glFramebufferTexture3D@	; `string'
PUBLIC	??_C@_0BK@OJDINAOA@glFramebufferRenderbuffer@	; `string'
PUBLIC	??_C@_0CG@KLDGJEON@glGetFramebufferAttachmentParam@ ; `string'
PUBLIC	??_C@_0BB@BHNIMGDM@glGenerateMipmap@		; `string'
PUBLIC	??_C@_0BC@OANBDDEP@glBlitFramebuffer@		; `string'
PUBLIC	??_C@_0CB@HNONLGJE@glRenderbufferStorageMultisampl@ ; `string'
PUBLIC	??_C@_0BK@NIHIDBBO@glFramebufferTextureLayer@	; `string'
PUBLIC	??_C@_0BB@EOHJGBIO@glMapBufferRange@		; `string'
PUBLIC	??_C@_0BJ@NCDMGHKF@glFlushMappedBufferRange@	; `string'
PUBLIC	??_C@_0BC@LHBAHFAN@glBindVertexArray@		; `string'
PUBLIC	??_C@_0BF@BMPCJLEF@glDeleteVertexArrays@	; `string'
PUBLIC	??_C@_0BC@EPJLBJBJ@glGenVertexArrays@		; `string'
PUBLIC	??_C@_0BA@ODJEGGAE@glIsVertexArray@		; `string'
PUBLIC	??_C@_0BG@HIOFINAN@glDrawArraysInstanced@	; `string'
PUBLIC	??_C@_0BI@CGJENFBH@glDrawElementsInstanced@	; `string'
PUBLIC	??_C@_0M@IIMBBALL@glTexBuffer@			; `string'
PUBLIC	??_C@_0BI@LJDLNGAF@glPrimitiveRestartIndex@	; `string'
PUBLIC	??_C@_0BE@EPKABDOG@glCopyBufferSubData@		; `string'
PUBLIC	??_C@_0BE@MDPMIDEE@glGetUniformIndices@		; `string'
PUBLIC	??_C@_0BG@JEHIMPCG@glGetActiveUniformsiv@	; `string'
PUBLIC	??_C@_0BH@EGGFHKJJ@glGetActiveUniformName@	; `string'
PUBLIC	??_C@_0BH@CBDIMHHE@glGetUniformBlockIndex@	; `string'
PUBLIC	??_C@_0BK@DMHOPJGL@glGetActiveUniformBlockiv@	; `string'
PUBLIC	??_C@_0BM@KEMCJPAJ@glGetActiveUniformBlockName@	; `string'
PUBLIC	??_C@_0BG@BOLEKKCP@glUniformBlockBinding@	; `string'
PUBLIC	??_C@_0BJ@LFMMIAHA@glDrawElementsBaseVertex@	; `string'
PUBLIC	??_C@_0BO@KBDDBILP@glDrawRangeElementsBaseVertex@ ; `string'
PUBLIC	??_C@_0CC@KLOIIKNA@glDrawElementsInstancedBaseVert@ ; `string'
PUBLIC	??_C@_0BO@NAPFJEEK@glMultiDrawElementsBaseVertex@ ; `string'
PUBLIC	??_C@_0BC@ECOAPEBI@glProvokingVertex@		; `string'
PUBLIC	??_C@_0M@EFGFPFLP@glFenceSync@			; `string'
PUBLIC	??_C@_08JPIIHJEO@glIsSync@			; `string'
PUBLIC	??_C@_0N@PIFDNDFG@glDeleteSync@			; `string'
PUBLIC	??_C@_0BB@KDMPGJAC@glClientWaitSync@		; `string'
PUBLIC	??_C@_0L@MHLOGHGO@glWaitSync@			; `string'
PUBLIC	??_C@_0BA@INMBOHGL@glGetInteger64v@		; `string'
PUBLIC	??_C@_0M@MPEEOPIN@glGetSynciv@			; `string'
PUBLIC	??_C@_0BC@KOJILIEC@glGetInteger64i_v@		; `string'
PUBLIC	??_C@_0BJ@KKBIDGPP@glGetBufferParameteri64v@	; `string'
PUBLIC	??_C@_0BF@ENLMLILA@glFramebufferTexture@	; `string'
PUBLIC	??_C@_0BI@FHDFLFA@glTexImage2DMultisample@	; `string'
PUBLIC	??_C@_0BI@JIHMLKCG@glTexImage3DMultisample@	; `string'
PUBLIC	??_C@_0BD@DHLIMGN@glGetMultisamplefv@		; `string'
PUBLIC	??_C@_0O@JNHBCHMB@glSampleMaski@		; `string'
PUBLIC	??_C@_0BO@POJBGCGG@glBindFragDataLocationIndexed@ ; `string'
PUBLIC	??_C@_0BD@COCJFEOH@glGetFragDataIndex@		; `string'
PUBLIC	??_C@_0O@EMMLGGLG@glGenSamplers@		; `string'
PUBLIC	??_C@_0BB@FLPAOEOO@glDeleteSamplers@		; `string'
PUBLIC	??_C@_0M@LAJKHOKJ@glIsSampler@			; `string'
PUBLIC	??_C@_0O@PDEILAPG@glBindSampler@		; `string'
PUBLIC	??_C@_0BE@KBCBMPJO@glSamplerParameteri@		; `string'
PUBLIC	??_C@_0BF@GOHDEBPM@glSamplerParameteriv@	; `string'
PUBLIC	??_C@_0BE@CGLJNDFB@glSamplerParameterf@		; `string'
PUBLIC	??_C@_0BF@GFCPAGMB@glSamplerParameterfv@	; `string'
PUBLIC	??_C@_0BG@HKEIFIHF@glSamplerParameterIiv@	; `string'
PUBLIC	??_C@_0BH@FEMFBPPB@glSamplerParameterIuiv@	; `string'
PUBLIC	??_C@_0BI@FECAOLJP@glGetSamplerParameteriv@	; `string'
PUBLIC	??_C@_0BJ@KOMJDLDN@glGetSamplerParameterIiv@	; `string'
PUBLIC	??_C@_0BI@FPHMKMKC@glGetSamplerParameterfv@	; `string'
PUBLIC	??_C@_0BK@CMBGFHDA@glGetSamplerParameterIuiv@	; `string'
PUBLIC	??_C@_0P@KALICDIM@glQueryCounter@		; `string'
PUBLIC	??_C@_0BF@JDAPDEPE@glGetQueryObjecti64v@	; `string'
PUBLIC	??_C@_0BG@NEGGOMJO@glGetQueryObjectui64v@	; `string'
PUBLIC	??_C@_0BG@NEBMAEHM@glVertexAttribDivisor@	; `string'
PUBLIC	??_C@_0BD@FLACCOEN@glVertexAttribP1ui@		; `string'
PUBLIC	??_C@_0BE@HBFDOBHD@glVertexAttribP1uiv@		; `string'
PUBLIC	??_C@_0BD@EJLHIBKD@glVertexAttribP2ui@		; `string'
PUBLIC	??_C@_0BE@DGPDJLKD@glVertexAttribP2uiv@		; `string'
PUBLIC	??_C@_0BD@PBALOGMG@glVertexAttribP3ui@		; `string'
PUBLIC	??_C@_0BE@LJDLCBD@glVertexAttribP3uiv@		; `string'
PUBLIC	??_C@_0BD@GMNMNOHP@glVertexAttribP4ui@		; `string'
PUBLIC	??_C@_0BE@LJLDGOAD@glVertexAttribP4uiv@		; `string'
PUBLIC	??_C@_0N@EFBCIBMC@glVertexP2ui@			; `string'
PUBLIC	??_C@_0O@MEKGPGN@glVertexP2uiv@			; `string'
PUBLIC	??_C@_0N@PNKOOGKH@glVertexP3ui@			; `string'
PUBLIC	??_C@_0O@DBCKEGNN@glVertexP3uiv@		; `string'
PUBLIC	??_C@_0N@GAHJNOBO@glVertexP4ui@			; `string'
PUBLIC	??_C@_0O@IDAKJKMN@glVertexP4uiv@		; `string'
PUBLIC	??_C@_0P@OLJHLLHJ@glTexCoordP1ui@		; `string'
PUBLIC	??_C@_0BA@FAFHIAFD@glTexCoordP1uiv@		; `string'
PUBLIC	??_C@_0P@PJCCBEJH@glTexCoordP2ui@		; `string'
PUBLIC	??_C@_0BA@BHPHPKID@glTexCoordP2uiv@		; `string'
PUBLIC	??_C@_0P@EBJOHDPC@glTexCoordP3ui@		; `string'
PUBLIC	??_C@_0BA@CKJHNDDD@glTexCoordP3uiv@		; `string'
PUBLIC	??_C@_0P@NMEJELEL@glTexCoordP4ui@		; `string'
PUBLIC	??_C@_0BA@JILHAPCD@glTexCoordP4uiv@		; `string'
PUBLIC	??_C@_0BE@OAHHKHKG@glMultiTexCoordP1ui@		; `string'
PUBLIC	??_C@_0BF@EGDAKPAK@glMultiTexCoordP1uiv@	; `string'
PUBLIC	??_C@_0BE@PCMCAIEI@glMultiTexCoordP2ui@		; `string'
PUBLIC	??_C@_0BF@BJANFNK@glMultiTexCoordP2uiv@		; `string'
PUBLIC	??_C@_0BE@EKHOGPCN@glMultiTexCoordP3ui@		; `string'
PUBLIC	??_C@_0BF@DMPAPMGK@glMultiTexCoordP3uiv@	; `string'
PUBLIC	??_C@_0BE@NHKJFHJE@glMultiTexCoordP4ui@		; `string'
PUBLIC	??_C@_0BF@IONACAHK@glMultiTexCoordP4uiv@	; `string'
PUBLIC	??_C@_0N@PBEFBNHO@glNormalP3ui@			; `string'
PUBLIC	??_C@_0O@MOCJMHFG@glNormalP3uiv@		; `string'
PUBLIC	??_C@_0M@PEKBINNN@glColorP3ui@			; `string'
PUBLIC	??_C@_0N@IBPDNBJE@glColorP3uiv@			; `string'
PUBLIC	??_C@_0M@GJHGLFGE@glColorP4ui@			; `string'
PUBLIC	??_C@_0N@DDNDANIE@glColorP4uiv@			; `string'
PUBLIC	??_C@_0BF@PDDGBPKP@glSecondaryColorP3ui@	; `string'
PUBLIC	??_C@_0BG@DPPPFGBG@glSecondaryColorP3uiv@	; `string'
PUBLIC	??_C@_0O@ENGHJHNB@OpenGL?5ES?9CM?5@		; `string'
PUBLIC	??_C@_0O@EMKFPNOG@OpenGL?5ES?9CL?5@		; `string'
PUBLIC	??_C@_0L@JLFHOCGA@OpenGL?5ES?5@			; `string'
PUBLIC	??_C@_05KBEOJPB@?$CFd?4?$CFd@			; `string'
EXTRN	__imp____stdio_common_vsscanf:PROC
EXTRN	__imp__free:PROC
EXTRN	__imp__malloc:PROC
EXTRN	_memcpy:PROC
EXTRN	_strlen:PROC
EXTRN	__imp__strncmp:PROC
EXTRN	__imp__FreeLibrary@4:PROC
EXTRN	__imp__GetProcAddress@8:PROC
EXTRN	__imp__LoadLibraryW@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__CheckForDebuggerJustMyCode@4:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___security_cookie:DWORD
_DATA	SEGMENT
COMM	?_OptionsStorage@?1??__local_stdio_scanf_options@@9@9:QWORD							; `__local_stdio_scanf_options'::`2'::_OptionsStorage
_DATA	ENDS
_BSS	SEGMENT
_libGL	DD	01H DUP (?)
_gladGetProcAddressPtr DD 01H DUP (?)
_max_loaded_major DD 01H DUP (?)
_max_loaded_minor DD 01H DUP (?)
_exts	DD	01H DUP (?)
_num_exts_i DD	01H DUP (?)
_exts_i	DD	01H DUP (?)
_BSS	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_C@_05KBEOJPB@?$CFd?4?$CFd@
CONST	SEGMENT
??_C@_05KBEOJPB@?$CFd?4?$CFd@ DB '%d.%d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@JLFHOCGA@OpenGL?5ES?5@
CONST	SEGMENT
??_C@_0L@JLFHOCGA@OpenGL?5ES?5@ DB 'OpenGL ES ', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@EMKFPNOG@OpenGL?5ES?9CL?5@
CONST	SEGMENT
??_C@_0O@EMKFPNOG@OpenGL?5ES?9CL?5@ DB 'OpenGL ES-CL ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@ENGHJHNB@OpenGL?5ES?9CM?5@
CONST	SEGMENT
??_C@_0O@ENGHJHNB@OpenGL?5ES?9CM?5@ DB 'OpenGL ES-CM ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@DPPPFGBG@glSecondaryColorP3uiv@
CONST	SEGMENT
??_C@_0BG@DPPPFGBG@glSecondaryColorP3uiv@ DB 'glSecondaryColorP3uiv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@PDDGBPKP@glSecondaryColorP3ui@
CONST	SEGMENT
??_C@_0BF@PDDGBPKP@glSecondaryColorP3ui@ DB 'glSecondaryColorP3ui', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@DDNDANIE@glColorP4uiv@
CONST	SEGMENT
??_C@_0N@DDNDANIE@glColorP4uiv@ DB 'glColorP4uiv', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@GJHGLFGE@glColorP4ui@
CONST	SEGMENT
??_C@_0M@GJHGLFGE@glColorP4ui@ DB 'glColorP4ui', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@IBPDNBJE@glColorP3uiv@
CONST	SEGMENT
??_C@_0N@IBPDNBJE@glColorP3uiv@ DB 'glColorP3uiv', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@PEKBINNN@glColorP3ui@
CONST	SEGMENT
??_C@_0M@PEKBINNN@glColorP3ui@ DB 'glColorP3ui', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@MOCJMHFG@glNormalP3uiv@
CONST	SEGMENT
??_C@_0O@MOCJMHFG@glNormalP3uiv@ DB 'glNormalP3uiv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@PBEFBNHO@glNormalP3ui@
CONST	SEGMENT
??_C@_0N@PBEFBNHO@glNormalP3ui@ DB 'glNormalP3ui', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@IONACAHK@glMultiTexCoordP4uiv@
CONST	SEGMENT
??_C@_0BF@IONACAHK@glMultiTexCoordP4uiv@ DB 'glMultiTexCoordP4uiv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@NHKJFHJE@glMultiTexCoordP4ui@
CONST	SEGMENT
??_C@_0BE@NHKJFHJE@glMultiTexCoordP4ui@ DB 'glMultiTexCoordP4ui', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@DMPAPMGK@glMultiTexCoordP3uiv@
CONST	SEGMENT
??_C@_0BF@DMPAPMGK@glMultiTexCoordP3uiv@ DB 'glMultiTexCoordP3uiv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@EKHOGPCN@glMultiTexCoordP3ui@
CONST	SEGMENT
??_C@_0BE@EKHOGPCN@glMultiTexCoordP3ui@ DB 'glMultiTexCoordP3ui', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@BJANFNK@glMultiTexCoordP2uiv@
CONST	SEGMENT
??_C@_0BF@BJANFNK@glMultiTexCoordP2uiv@ DB 'glMultiTexCoordP2uiv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@PCMCAIEI@glMultiTexCoordP2ui@
CONST	SEGMENT
??_C@_0BE@PCMCAIEI@glMultiTexCoordP2ui@ DB 'glMultiTexCoordP2ui', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@EGDAKPAK@glMultiTexCoordP1uiv@
CONST	SEGMENT
??_C@_0BF@EGDAKPAK@glMultiTexCoordP1uiv@ DB 'glMultiTexCoordP1uiv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@OAHHKHKG@glMultiTexCoordP1ui@
CONST	SEGMENT
??_C@_0BE@OAHHKHKG@glMultiTexCoordP1ui@ DB 'glMultiTexCoordP1ui', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JILHAPCD@glTexCoordP4uiv@
CONST	SEGMENT
??_C@_0BA@JILHAPCD@glTexCoordP4uiv@ DB 'glTexCoordP4uiv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@NMEJELEL@glTexCoordP4ui@
CONST	SEGMENT
??_C@_0P@NMEJELEL@glTexCoordP4ui@ DB 'glTexCoordP4ui', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@CKJHNDDD@glTexCoordP3uiv@
CONST	SEGMENT
??_C@_0BA@CKJHNDDD@glTexCoordP3uiv@ DB 'glTexCoordP3uiv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@EBJOHDPC@glTexCoordP3ui@
CONST	SEGMENT
??_C@_0P@EBJOHDPC@glTexCoordP3ui@ DB 'glTexCoordP3ui', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@BHPHPKID@glTexCoordP2uiv@
CONST	SEGMENT
??_C@_0BA@BHPHPKID@glTexCoordP2uiv@ DB 'glTexCoordP2uiv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@PJCCBEJH@glTexCoordP2ui@
CONST	SEGMENT
??_C@_0P@PJCCBEJH@glTexCoordP2ui@ DB 'glTexCoordP2ui', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@FAFHIAFD@glTexCoordP1uiv@
CONST	SEGMENT
??_C@_0BA@FAFHIAFD@glTexCoordP1uiv@ DB 'glTexCoordP1uiv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@OLJHLLHJ@glTexCoordP1ui@
CONST	SEGMENT
??_C@_0P@OLJHLLHJ@glTexCoordP1ui@ DB 'glTexCoordP1ui', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@IDAKJKMN@glVertexP4uiv@
CONST	SEGMENT
??_C@_0O@IDAKJKMN@glVertexP4uiv@ DB 'glVertexP4uiv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@GAHJNOBO@glVertexP4ui@
CONST	SEGMENT
??_C@_0N@GAHJNOBO@glVertexP4ui@ DB 'glVertexP4ui', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@DBCKEGNN@glVertexP3uiv@
CONST	SEGMENT
??_C@_0O@DBCKEGNN@glVertexP3uiv@ DB 'glVertexP3uiv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@PNKOOGKH@glVertexP3ui@
CONST	SEGMENT
??_C@_0N@PNKOOGKH@glVertexP3ui@ DB 'glVertexP3ui', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@MEKGPGN@glVertexP2uiv@
CONST	SEGMENT
??_C@_0O@MEKGPGN@glVertexP2uiv@ DB 'glVertexP2uiv', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@EFBCIBMC@glVertexP2ui@
CONST	SEGMENT
??_C@_0N@EFBCIBMC@glVertexP2ui@ DB 'glVertexP2ui', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@LJLDGOAD@glVertexAttribP4uiv@
CONST	SEGMENT
??_C@_0BE@LJLDGOAD@glVertexAttribP4uiv@ DB 'glVertexAttribP4uiv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@GMNMNOHP@glVertexAttribP4ui@
CONST	SEGMENT
??_C@_0BD@GMNMNOHP@glVertexAttribP4ui@ DB 'glVertexAttribP4ui', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@LJDLCBD@glVertexAttribP3uiv@
CONST	SEGMENT
??_C@_0BE@LJDLCBD@glVertexAttribP3uiv@ DB 'glVertexAttribP3uiv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@PBALOGMG@glVertexAttribP3ui@
CONST	SEGMENT
??_C@_0BD@PBALOGMG@glVertexAttribP3ui@ DB 'glVertexAttribP3ui', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@DGPDJLKD@glVertexAttribP2uiv@
CONST	SEGMENT
??_C@_0BE@DGPDJLKD@glVertexAttribP2uiv@ DB 'glVertexAttribP2uiv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@EJLHIBKD@glVertexAttribP2ui@
CONST	SEGMENT
??_C@_0BD@EJLHIBKD@glVertexAttribP2ui@ DB 'glVertexAttribP2ui', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@HBFDOBHD@glVertexAttribP1uiv@
CONST	SEGMENT
??_C@_0BE@HBFDOBHD@glVertexAttribP1uiv@ DB 'glVertexAttribP1uiv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FLACCOEN@glVertexAttribP1ui@
CONST	SEGMENT
??_C@_0BD@FLACCOEN@glVertexAttribP1ui@ DB 'glVertexAttribP1ui', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@NEBMAEHM@glVertexAttribDivisor@
CONST	SEGMENT
??_C@_0BG@NEBMAEHM@glVertexAttribDivisor@ DB 'glVertexAttribDivisor', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@NEGGOMJO@glGetQueryObjectui64v@
CONST	SEGMENT
??_C@_0BG@NEGGOMJO@glGetQueryObjectui64v@ DB 'glGetQueryObjectui64v', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@JDAPDEPE@glGetQueryObjecti64v@
CONST	SEGMENT
??_C@_0BF@JDAPDEPE@glGetQueryObjecti64v@ DB 'glGetQueryObjecti64v', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@KALICDIM@glQueryCounter@
CONST	SEGMENT
??_C@_0P@KALICDIM@glQueryCounter@ DB 'glQueryCounter', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@CMBGFHDA@glGetSamplerParameterIuiv@
CONST	SEGMENT
??_C@_0BK@CMBGFHDA@glGetSamplerParameterIuiv@ DB 'glGetSamplerParameterIu'
	DB	'iv', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@FPHMKMKC@glGetSamplerParameterfv@
CONST	SEGMENT
??_C@_0BI@FPHMKMKC@glGetSamplerParameterfv@ DB 'glGetSamplerParameterfv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@KOMJDLDN@glGetSamplerParameterIiv@
CONST	SEGMENT
??_C@_0BJ@KOMJDLDN@glGetSamplerParameterIiv@ DB 'glGetSamplerParameterIiv'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@FECAOLJP@glGetSamplerParameteriv@
CONST	SEGMENT
??_C@_0BI@FECAOLJP@glGetSamplerParameteriv@ DB 'glGetSamplerParameteriv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@FEMFBPPB@glSamplerParameterIuiv@
CONST	SEGMENT
??_C@_0BH@FEMFBPPB@glSamplerParameterIuiv@ DB 'glSamplerParameterIuiv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@HKEIFIHF@glSamplerParameterIiv@
CONST	SEGMENT
??_C@_0BG@HKEIFIHF@glSamplerParameterIiv@ DB 'glSamplerParameterIiv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@GFCPAGMB@glSamplerParameterfv@
CONST	SEGMENT
??_C@_0BF@GFCPAGMB@glSamplerParameterfv@ DB 'glSamplerParameterfv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@CGLJNDFB@glSamplerParameterf@
CONST	SEGMENT
??_C@_0BE@CGLJNDFB@glSamplerParameterf@ DB 'glSamplerParameterf', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@GOHDEBPM@glSamplerParameteriv@
CONST	SEGMENT
??_C@_0BF@GOHDEBPM@glSamplerParameteriv@ DB 'glSamplerParameteriv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@KBCBMPJO@glSamplerParameteri@
CONST	SEGMENT
??_C@_0BE@KBCBMPJO@glSamplerParameteri@ DB 'glSamplerParameteri', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@PDEILAPG@glBindSampler@
CONST	SEGMENT
??_C@_0O@PDEILAPG@glBindSampler@ DB 'glBindSampler', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@LAJKHOKJ@glIsSampler@
CONST	SEGMENT
??_C@_0M@LAJKHOKJ@glIsSampler@ DB 'glIsSampler', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FLPAOEOO@glDeleteSamplers@
CONST	SEGMENT
??_C@_0BB@FLPAOEOO@glDeleteSamplers@ DB 'glDeleteSamplers', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@EMMLGGLG@glGenSamplers@
CONST	SEGMENT
??_C@_0O@EMMLGGLG@glGenSamplers@ DB 'glGenSamplers', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@COCJFEOH@glGetFragDataIndex@
CONST	SEGMENT
??_C@_0BD@COCJFEOH@glGetFragDataIndex@ DB 'glGetFragDataIndex', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@POJBGCGG@glBindFragDataLocationIndexed@
CONST	SEGMENT
??_C@_0BO@POJBGCGG@glBindFragDataLocationIndexed@ DB 'glBindFragDataLocat'
	DB	'ionIndexed', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@JNHBCHMB@glSampleMaski@
CONST	SEGMENT
??_C@_0O@JNHBCHMB@glSampleMaski@ DB 'glSampleMaski', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@DHLIMGN@glGetMultisamplefv@
CONST	SEGMENT
??_C@_0BD@DHLIMGN@glGetMultisamplefv@ DB 'glGetMultisamplefv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@JIHMLKCG@glTexImage3DMultisample@
CONST	SEGMENT
??_C@_0BI@JIHMLKCG@glTexImage3DMultisample@ DB 'glTexImage3DMultisample', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@FHDFLFA@glTexImage2DMultisample@
CONST	SEGMENT
??_C@_0BI@FHDFLFA@glTexImage2DMultisample@ DB 'glTexImage2DMultisample', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@ENLMLILA@glFramebufferTexture@
CONST	SEGMENT
??_C@_0BF@ENLMLILA@glFramebufferTexture@ DB 'glFramebufferTexture', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@KKBIDGPP@glGetBufferParameteri64v@
CONST	SEGMENT
??_C@_0BJ@KKBIDGPP@glGetBufferParameteri64v@ DB 'glGetBufferParameteri64v'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@KOJILIEC@glGetInteger64i_v@
CONST	SEGMENT
??_C@_0BC@KOJILIEC@glGetInteger64i_v@ DB 'glGetInteger64i_v', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MPEEOPIN@glGetSynciv@
CONST	SEGMENT
??_C@_0M@MPEEOPIN@glGetSynciv@ DB 'glGetSynciv', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@INMBOHGL@glGetInteger64v@
CONST	SEGMENT
??_C@_0BA@INMBOHGL@glGetInteger64v@ DB 'glGetInteger64v', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@MHLOGHGO@glWaitSync@
CONST	SEGMENT
??_C@_0L@MHLOGHGO@glWaitSync@ DB 'glWaitSync', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@KDMPGJAC@glClientWaitSync@
CONST	SEGMENT
??_C@_0BB@KDMPGJAC@glClientWaitSync@ DB 'glClientWaitSync', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@PIFDNDFG@glDeleteSync@
CONST	SEGMENT
??_C@_0N@PIFDNDFG@glDeleteSync@ DB 'glDeleteSync', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08JPIIHJEO@glIsSync@
CONST	SEGMENT
??_C@_08JPIIHJEO@glIsSync@ DB 'glIsSync', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@EFGFPFLP@glFenceSync@
CONST	SEGMENT
??_C@_0M@EFGFPFLP@glFenceSync@ DB 'glFenceSync', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@ECOAPEBI@glProvokingVertex@
CONST	SEGMENT
??_C@_0BC@ECOAPEBI@glProvokingVertex@ DB 'glProvokingVertex', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@NAPFJEEK@glMultiDrawElementsBaseVertex@
CONST	SEGMENT
??_C@_0BO@NAPFJEEK@glMultiDrawElementsBaseVertex@ DB 'glMultiDrawElements'
	DB	'BaseVertex', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@KLOIIKNA@glDrawElementsInstancedBaseVert@
CONST	SEGMENT
??_C@_0CC@KLOIIKNA@glDrawElementsInstancedBaseVert@ DB 'glDrawElementsIns'
	DB	'tancedBaseVertex', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@KBDDBILP@glDrawRangeElementsBaseVertex@
CONST	SEGMENT
??_C@_0BO@KBDDBILP@glDrawRangeElementsBaseVertex@ DB 'glDrawRangeElements'
	DB	'BaseVertex', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@LFMMIAHA@glDrawElementsBaseVertex@
CONST	SEGMENT
??_C@_0BJ@LFMMIAHA@glDrawElementsBaseVertex@ DB 'glDrawElementsBaseVertex'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@BOLEKKCP@glUniformBlockBinding@
CONST	SEGMENT
??_C@_0BG@BOLEKKCP@glUniformBlockBinding@ DB 'glUniformBlockBinding', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@KEMCJPAJ@glGetActiveUniformBlockName@
CONST	SEGMENT
??_C@_0BM@KEMCJPAJ@glGetActiveUniformBlockName@ DB 'glGetActiveUniformBlo'
	DB	'ckName', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@DMHOPJGL@glGetActiveUniformBlockiv@
CONST	SEGMENT
??_C@_0BK@DMHOPJGL@glGetActiveUniformBlockiv@ DB 'glGetActiveUniformBlock'
	DB	'iv', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@CBDIMHHE@glGetUniformBlockIndex@
CONST	SEGMENT
??_C@_0BH@CBDIMHHE@glGetUniformBlockIndex@ DB 'glGetUniformBlockIndex', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@EGGFHKJJ@glGetActiveUniformName@
CONST	SEGMENT
??_C@_0BH@EGGFHKJJ@glGetActiveUniformName@ DB 'glGetActiveUniformName', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@JEHIMPCG@glGetActiveUniformsiv@
CONST	SEGMENT
??_C@_0BG@JEHIMPCG@glGetActiveUniformsiv@ DB 'glGetActiveUniformsiv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@MDPMIDEE@glGetUniformIndices@
CONST	SEGMENT
??_C@_0BE@MDPMIDEE@glGetUniformIndices@ DB 'glGetUniformIndices', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@EPKABDOG@glCopyBufferSubData@
CONST	SEGMENT
??_C@_0BE@EPKABDOG@glCopyBufferSubData@ DB 'glCopyBufferSubData', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@LJDLNGAF@glPrimitiveRestartIndex@
CONST	SEGMENT
??_C@_0BI@LJDLNGAF@glPrimitiveRestartIndex@ DB 'glPrimitiveRestartIndex', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@IIMBBALL@glTexBuffer@
CONST	SEGMENT
??_C@_0M@IIMBBALL@glTexBuffer@ DB 'glTexBuffer', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CGJENFBH@glDrawElementsInstanced@
CONST	SEGMENT
??_C@_0BI@CGJENFBH@glDrawElementsInstanced@ DB 'glDrawElementsInstanced', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@HIOFINAN@glDrawArraysInstanced@
CONST	SEGMENT
??_C@_0BG@HIOFINAN@glDrawArraysInstanced@ DB 'glDrawArraysInstanced', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@ODJEGGAE@glIsVertexArray@
CONST	SEGMENT
??_C@_0BA@ODJEGGAE@glIsVertexArray@ DB 'glIsVertexArray', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@EPJLBJBJ@glGenVertexArrays@
CONST	SEGMENT
??_C@_0BC@EPJLBJBJ@glGenVertexArrays@ DB 'glGenVertexArrays', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@BMPCJLEF@glDeleteVertexArrays@
CONST	SEGMENT
??_C@_0BF@BMPCJLEF@glDeleteVertexArrays@ DB 'glDeleteVertexArrays', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@LHBAHFAN@glBindVertexArray@
CONST	SEGMENT
??_C@_0BC@LHBAHFAN@glBindVertexArray@ DB 'glBindVertexArray', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@NCDMGHKF@glFlushMappedBufferRange@
CONST	SEGMENT
??_C@_0BJ@NCDMGHKF@glFlushMappedBufferRange@ DB 'glFlushMappedBufferRange'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@EOHJGBIO@glMapBufferRange@
CONST	SEGMENT
??_C@_0BB@EOHJGBIO@glMapBufferRange@ DB 'glMapBufferRange', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@NIHIDBBO@glFramebufferTextureLayer@
CONST	SEGMENT
??_C@_0BK@NIHIDBBO@glFramebufferTextureLayer@ DB 'glFramebufferTextureLay'
	DB	'er', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@HNONLGJE@glRenderbufferStorageMultisampl@
CONST	SEGMENT
??_C@_0CB@HNONLGJE@glRenderbufferStorageMultisampl@ DB 'glRenderbufferSto'
	DB	'rageMultisample', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@OANBDDEP@glBlitFramebuffer@
CONST	SEGMENT
??_C@_0BC@OANBDDEP@glBlitFramebuffer@ DB 'glBlitFramebuffer', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@BHNIMGDM@glGenerateMipmap@
CONST	SEGMENT
??_C@_0BB@BHNIMGDM@glGenerateMipmap@ DB 'glGenerateMipmap', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@KLDGJEON@glGetFramebufferAttachmentParam@
CONST	SEGMENT
??_C@_0CG@KLDGJEON@glGetFramebufferAttachmentParam@ DB 'glGetFramebufferA'
	DB	'ttachmentParameteriv', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@OJDINAOA@glFramebufferRenderbuffer@
CONST	SEGMENT
??_C@_0BK@OJDINAOA@glFramebufferRenderbuffer@ DB 'glFramebufferRenderbuff'
	DB	'er', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@JDEHAJHC@glFramebufferTexture3D@
CONST	SEGMENT
??_C@_0BH@JDEHAJHC@glFramebufferTexture3D@ DB 'glFramebufferTexture3D', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@JCIFGDEF@glFramebufferTexture2D@
CONST	SEGMENT
??_C@_0BH@JCIFGDEF@glFramebufferTexture2D@ DB 'glFramebufferTexture2D', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@JAMDNNBM@glFramebufferTexture1D@
CONST	SEGMENT
??_C@_0BH@JAMDNNBM@glFramebufferTexture1D@ DB 'glFramebufferTexture1D', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@GIOLHEAD@glCheckFramebufferStatus@
CONST	SEGMENT
??_C@_0BJ@GIOLHEAD@glCheckFramebufferStatus@ DB 'glCheckFramebufferStatus'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@FAPEBGID@glGenFramebuffers@
CONST	SEGMENT
??_C@_0BC@FAPEBGID@glGenFramebuffers@ DB 'glGenFramebuffers', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@DJNJENP@glDeleteFramebuffers@
CONST	SEGMENT
??_C@_0BF@DJNJENP@glDeleteFramebuffers@ DB 'glDeleteFramebuffers', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@CJMIBNO@glBindFramebuffer@
CONST	SEGMENT
??_C@_0BC@CJMIBNO@glBindFramebuffer@ DB 'glBindFramebuffer', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@FGBIJCNH@glIsFramebuffer@
CONST	SEGMENT
??_C@_0BA@FGBIJCNH@glIsFramebuffer@ DB 'glIsFramebuffer', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@FGKAECKO@glGetRenderbufferParameteriv@
CONST	SEGMENT
??_C@_0BN@FGKAECKO@glGetRenderbufferParameteriv@ DB 'glGetRenderbufferPar'
	DB	'ameteriv', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@EOIILGMJ@glRenderbufferStorage@
CONST	SEGMENT
??_C@_0BG@EOIILGMJ@glRenderbufferStorage@ DB 'glRenderbufferStorage', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@MIGEDNGJ@glGenRenderbuffers@
CONST	SEGMENT
??_C@_0BD@MIGEDNGJ@glGenRenderbuffers@ DB 'glGenRenderbuffers', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@KKOKEJDE@glDeleteRenderbuffers@
CONST	SEGMENT
??_C@_0BG@KKOKEJDE@glDeleteRenderbuffers@ DB 'glDeleteRenderbuffers', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@EPOPJGFA@glBindRenderbuffer@
CONST	SEGMENT
??_C@_0BD@EPOPJGFA@glBindRenderbuffer@ DB 'glBindRenderbuffer', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@DGGHKKOH@glIsRenderbuffer@
CONST	SEGMENT
??_C@_0BB@DGGHKKOH@glIsRenderbuffer@ DB 'glIsRenderbuffer', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@PILJCBOD@glGetStringi@
CONST	SEGMENT
??_C@_0N@PILJCBOD@glGetStringi@ DB 'glGetStringi', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@OACPENCO@glClearBufferfi@
CONST	SEGMENT
??_C@_0BA@OACPENCO@glClearBufferfi@ DB 'glClearBufferfi', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@CNHFEDLA@glClearBufferfv@
CONST	SEGMENT
??_C@_0BA@CNHFEDLA@glClearBufferfv@ DB 'glClearBufferfv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@OHPPAEID@glClearBufferuiv@
CONST	SEGMENT
??_C@_0BB@OHPPAEID@glClearBufferuiv@ DB 'glClearBufferuiv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@CGCJAEIN@glClearBufferiv@
CONST	SEGMENT
??_C@_0BA@CGCJAEIN@glClearBufferiv@ DB 'glClearBufferiv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@MLODKKFL@glGetTexParameterIuiv@
CONST	SEGMENT
??_C@_0BG@MLODKKFL@glGetTexParameterIuiv@ DB 'glGetTexParameterIuiv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@ODBJFHDD@glGetTexParameterIiv@
CONST	SEGMENT
??_C@_0BF@ODBJFHDD@glGetTexParameterIiv@ DB 'glGetTexParameterIiv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FDBCMKBE@glTexParameterIuiv@
CONST	SEGMENT
??_C@_0BD@FDBCMKBE@glTexParameterIuiv@ DB 'glTexParameterIuiv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@MAFJKEHB@glTexParameterIiv@
CONST	SEGMENT
??_C@_0BC@MAFJKEHB@glTexParameterIiv@ DB 'glTexParameterIiv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HJJIIGE@glUniform4uiv@
CONST	SEGMENT
??_C@_0O@HJJIIGE@glUniform4uiv@ DB 'glUniform4uiv', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@LFLJFEHE@glUniform3uiv@
CONST	SEGMENT
??_C@_0O@LFLJFEHE@glUniform3uiv@ DB 'glUniform3uiv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@IINJHNME@glUniform2uiv@
CONST	SEGMENT
??_C@_0O@IINJHNME@glUniform2uiv@ DB 'glUniform2uiv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@MPHJAHBE@glUniform1uiv@
CONST	SEGMENT
??_C@_0O@MPHJAHBE@glUniform1uiv@ DB 'glUniform1uiv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@ENCKKJAN@glUniform4ui@
CONST	SEGMENT
??_C@_0N@ENCKKJAN@glUniform4ui@ DB 'glUniform4ui', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NAPNJBLE@glUniform3ui@
CONST	SEGMENT
??_C@_0N@NAPNJBLE@glUniform3ui@ DB 'glUniform3ui', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@GIEBPGNB@glUniform2ui@
CONST	SEGMENT
??_C@_0N@GIEBPGNB@glUniform2ui@ DB 'glUniform2ui', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@HKPEFJDP@glUniform1ui@
CONST	SEGMENT
??_C@_0N@HKPEFJDP@glUniform1ui@ DB 'glUniform1ui', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@NDOIGAMC@glGetFragDataLocation@
CONST	SEGMENT
??_C@_0BG@NDOIGAMC@glGetFragDataLocation@ DB 'glGetFragDataLocation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@DLJLAGBA@glBindFragDataLocation@
CONST	SEGMENT
??_C@_0BH@DLJLAGBA@glBindFragDataLocation@ DB 'glBindFragDataLocation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@NIGECFIF@glGetUniformuiv@
CONST	SEGMENT
??_C@_0BA@NIGECFIF@glGetUniformuiv@ DB 'glGetUniformuiv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@IMNLBLPG@glVertexAttribI4usv@
CONST	SEGMENT
??_C@_0BE@IMNLBLPG@glVertexAttribI4usv@ DB 'glVertexAttribI4usv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@JBDPNCLB@glVertexAttribI4ubv@
CONST	SEGMENT
??_C@_0BE@JBDPNCLB@glVertexAttribI4ubv@ DB 'glVertexAttribI4ubv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@MIPLFJKA@glVertexAttribI4sv@
CONST	SEGMENT
??_C@_0BD@MIPLFJKA@glVertexAttribI4sv@ DB 'glVertexAttribI4sv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NFBPJAOH@glVertexAttribI4bv@
CONST	SEGMENT
??_C@_0BD@NFBPJAOH@glVertexAttribI4bv@ DB 'glVertexAttribI4bv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@JNGKDNFA@glVertexAttribI4uiv@
CONST	SEGMENT
??_C@_0BE@JNGKDNFA@glVertexAttribI4uiv@ DB 'glVertexAttribI4uiv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@CPEKOBEA@glVertexAttribI3uiv@
CONST	SEGMENT
??_C@_0BE@CPEKOBEA@glVertexAttribI3uiv@ DB 'glVertexAttribI3uiv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@BCCKMIPA@glVertexAttribI2uiv@
CONST	SEGMENT
??_C@_0BE@BCCKMIPA@glVertexAttribI2uiv@ DB 'glVertexAttribI2uiv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@FFIKLCCA@glVertexAttribI1uiv@
CONST	SEGMENT
??_C@_0BE@FFIKLCCA@glVertexAttribI1uiv@ DB 'glVertexAttribI1uiv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NJEKHPAG@glVertexAttribI4iv@
CONST	SEGMENT
??_C@_0BD@NJEKHPAG@glVertexAttribI4iv@ DB 'glVertexAttribI4iv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@EEJNEHLP@glVertexAttribI3iv@
CONST	SEGMENT
??_C@_0BD@EEJNEHLP@glVertexAttribI3iv@ DB 'glVertexAttribI3iv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@PMCBCANK@glVertexAttribI2iv@
CONST	SEGMENT
??_C@_0BD@PMCBCANK@glVertexAttribI2iv@ DB 'glVertexAttribI2iv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OOJEIPDE@glVertexAttribI1iv@
CONST	SEGMENT
??_C@_0BD@OOJEIPDE@glVertexAttribI1iv@ DB 'glVertexAttribI1iv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@BCMCLIM@glVertexAttribI4ui@
CONST	SEGMENT
??_C@_0BD@BCMCLIM@glVertexAttribI4ui@ DB 'glVertexAttribI4ui', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@JMPLBDDF@glVertexAttribI3ui@
CONST	SEGMENT
??_C@_0BD@JMPLBDDF@glVertexAttribI3ui@ DB 'glVertexAttribI3ui', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@CEEHHEFA@glVertexAttribI2ui@
CONST	SEGMENT
??_C@_0BD@CEEHHEFA@glVertexAttribI2ui@ DB 'glVertexAttribI2ui', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@DGPCNLLO@glVertexAttribI1ui@
CONST	SEGMENT
??_C@_0BD@DGPCNLLO@glVertexAttribI1ui@ DB 'glVertexAttribI1ui', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@CFEDAOOA@glVertexAttribI4i@
CONST	SEGMENT
??_C@_0BC@CFEDAOOA@glVertexAttribI4i@ DB 'glVertexAttribI4i', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@CAAMBIGF@glVertexAttribI3i@
CONST	SEGMENT
??_C@_0BC@CAAMBIGF@glVertexAttribI3i@ DB 'glVertexAttribI3i', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@CBMOHCFC@glVertexAttribI2i@
CONST	SEGMENT
??_C@_0BC@CBMOHCFC@glVertexAttribI2i@ DB 'glVertexAttribI2i', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@CDIIMMAL@glVertexAttribI1i@
CONST	SEGMENT
??_C@_0BC@CDIIMMAL@glVertexAttribI1i@ DB 'glVertexAttribI1i', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@GCBDCABB@glGetVertexAttribIuiv@
CONST	SEGMENT
??_C@_0BG@GCBDCABB@glGetVertexAttribIuiv@ DB 'glGetVertexAttribIuiv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@KPDNEONP@glGetVertexAttribIiv@
CONST	SEGMENT
??_C@_0BF@KPDNEONP@glGetVertexAttribIiv@ DB 'glGetVertexAttribIiv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@NLOEHKCD@glVertexAttribIPointer@
CONST	SEGMENT
??_C@_0BH@NLOEHKCD@glVertexAttribIPointer@ DB 'glVertexAttribIPointer', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@KCIOLNMA@glEndConditionalRender@
CONST	SEGMENT
??_C@_0BH@KCIOLNMA@glEndConditionalRender@ DB 'glEndConditionalRender', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@EHEPIEPF@glBeginConditionalRender@
CONST	SEGMENT
??_C@_0BJ@EHEPIEPF@glBeginConditionalRender@ DB 'glBeginConditionalRender'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@HLGAGIMI@glClampColor@
CONST	SEGMENT
??_C@_0N@HLGAGIMI@glClampColor@ DB 'glClampColor', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@ODFLPNG@glGetTransformFeedbackVarying@
CONST	SEGMENT
??_C@_0BO@ODFLPNG@glGetTransformFeedbackVarying@ DB 'glGetTransformFeedba'
	DB	'ckVarying', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@IJFAKBEF@glTransformFeedbackVaryings@
CONST	SEGMENT
??_C@_0BM@IJFAKBEF@glTransformFeedbackVaryings@ DB 'glTransformFeedbackVa'
	DB	'ryings', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@LDPKOCJI@glBindBufferBase@
CONST	SEGMENT
??_C@_0BB@LDPKOCJI@glBindBufferBase@ DB 'glBindBufferBase', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@EEMMCHMB@glBindBufferRange@
CONST	SEGMENT
??_C@_0BC@EEMMCHMB@glBindBufferRange@ DB 'glBindBufferRange', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@LCFLNNBH@glEndTransformFeedback@
CONST	SEGMENT
??_C@_0BH@LCFLNNBH@glEndTransformFeedback@ DB 'glEndTransformFeedback', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@FHJKOECC@glBeginTransformFeedback@
CONST	SEGMENT
??_C@_0BJ@FHJKOECC@glBeginTransformFeedback@ DB 'glBeginTransformFeedback'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@IMGKGOKN@glIsEnabledi@
CONST	SEGMENT
??_C@_0N@IMGKGOKN@glIsEnabledi@ DB 'glIsEnabledi', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@BMJPGDDH@glDisablei@
CONST	SEGMENT
??_C@_0L@BMJPGDDH@glDisablei@ DB 'glDisablei', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09IEGEGIEN@glEnablei@
CONST	SEGMENT
??_C@_09IEGEGIEN@glEnablei@ DB 'glEnablei', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@FKCNNMFO@glGetIntegeri_v@
CONST	SEGMENT
??_C@_0BA@FKCNNMFO@glGetIntegeri_v@ DB 'glGetIntegeri_v', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@OAKNOBP@glGetBooleani_v@
CONST	SEGMENT
??_C@_0BA@OAKNOBP@glGetBooleani_v@ DB 'glGetBooleani_v', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JHNNNJFG@glColorMaski@
CONST	SEGMENT
??_C@_0N@JHNNNJFG@glColorMaski@ DB 'glColorMaski', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@HFGACBCH@glUniformMatrix4x3fv@
CONST	SEGMENT
??_C@_0BF@HFGACBCH@glUniformMatrix4x3fv@ DB 'glUniformMatrix4x3fv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@PFLCCJCG@glUniformMatrix3x4fv@
CONST	SEGMENT
??_C@_0BF@PFLCCJCG@glUniformMatrix3x4fv@ DB 'glUniformMatrix3x4fv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@MNNMEGEC@glUniformMatrix4x2fv@
CONST	SEGMENT
??_C@_0BF@MNNMEGEC@glUniformMatrix4x2fv@ DB 'glUniformMatrix4x2fv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@DOOOPKID@glUniformMatrix2x4fv@
CONST	SEGMENT
??_C@_0BF@DOOOPKID@glUniformMatrix2x4fv@ DB 'glUniformMatrix2x4fv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@NANJHGPK@glUniformMatrix3x2fv@
CONST	SEGMENT
??_C@_0BF@NANJHGPK@glUniformMatrix3x2fv@ DB 'glUniformMatrix3x2fv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@KDDJMCDK@glUniformMatrix2x3fv@
CONST	SEGMENT
??_C@_0BF@KDDJMCDK@glUniformMatrix2x3fv@ DB 'glUniformMatrix2x3fv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@JPNNNPKG@glVertexAttribPointer@
CONST	SEGMENT
??_C@_0BG@JPNNNPKG@glVertexAttribPointer@ DB 'glVertexAttribPointer', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OKBBECIG@glVertexAttrib4usv@
CONST	SEGMENT
??_C@_0BD@OKBBECIG@glVertexAttrib4usv@ DB 'glVertexAttrib4usv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@PLKAGECA@glVertexAttrib4uiv@
CONST	SEGMENT
??_C@_0BD@PLKAGECA@glVertexAttrib4uiv@ DB 'glVertexAttrib4uiv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@PHPFILMB@glVertexAttrib4ubv@
CONST	SEGMENT
??_C@_0BD@PHPFILMB@glVertexAttrib4ubv@ DB 'glVertexAttrib4ubv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@EJJODHK@glVertexAttrib4sv@
CONST	SEGMENT
??_C@_0BC@EJJODHK@glVertexAttrib4sv@ DB 'glVertexAttrib4sv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@PLKDLLIP@glVertexAttrib4s@
CONST	SEGMENT
??_C@_0BB@PLKDLLIP@glVertexAttrib4s@ DB 'glVertexAttrib4s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@BFCIMFNM@glVertexAttrib4iv@
CONST	SEGMENT
??_C@_0BC@BFCIMFNM@glVertexAttrib4iv@ DB 'glVertexAttrib4iv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@BOHEICOB@glVertexAttrib4fv@
CONST	SEGMENT
??_C@_0BC@BOHEICOB@glVertexAttrib4fv@ DB 'glVertexAttrib4fv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@MMBGFNJL@glVertexAttrib4f@
CONST	SEGMENT
??_C@_0BB@MMBGFNJL@glVertexAttrib4f@ DB 'glVertexAttrib4f', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@BNPAFGIP@glVertexAttrib4dv@
CONST	SEGMENT
??_C@_0BC@BNPAFGIP@glVertexAttrib4dv@ DB 'glVertexAttrib4dv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@POCADPBJ@glVertexAttrib4d@
CONST	SEGMENT
??_C@_0BB@POCADPBJ@glVertexAttrib4d@ DB 'glVertexAttrib4d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@BJHNCKDN@glVertexAttrib4bv@
CONST	SEGMENT
??_C@_0BC@BJHNCKDN@glVertexAttrib4bv@ DB 'glVertexAttrib4bv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@IIAFPNIH@glVertexAttrib4Nusv@
CONST	SEGMENT
??_C@_0BE@IIAFPNIH@glVertexAttrib4Nusv@ DB 'glVertexAttrib4Nusv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@JJLENLCB@glVertexAttrib4Nuiv@
CONST	SEGMENT
??_C@_0BE@JJLENLCB@glVertexAttrib4Nuiv@ DB 'glVertexAttrib4Nuiv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@JFOBDEMA@glVertexAttrib4Nubv@
CONST	SEGMENT
??_C@_0BE@JFOBDEMA@glVertexAttrib4Nubv@ DB 'glVertexAttrib4Nubv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OHBIJGMB@glVertexAttrib4Nub@
CONST	SEGMENT
??_C@_0BD@OHBIJGMB@glVertexAttrib4Nub@ DB 'glVertexAttrib4Nub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@MNDLDNCG@glVertexAttrib4Nsv@
CONST	SEGMENT
??_C@_0BD@MNDLDNCG@glVertexAttrib4Nsv@ DB 'glVertexAttrib4Nsv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NMIKBLIA@glVertexAttrib4Niv@
CONST	SEGMENT
??_C@_0BD@NMIKBLIA@glVertexAttrib4Niv@ DB 'glVertexAttrib4Niv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NANPPEGB@glVertexAttrib4Nbv@
CONST	SEGMENT
??_C@_0BD@NANPPEGB@glVertexAttrib4Nbv@ DB 'glVertexAttrib4Nbv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@JJEONLMD@glVertexAttrib3sv@
CONST	SEGMENT
??_C@_0BC@JJEONLMD@glVertexAttrib3sv@ DB 'glVertexAttrib3sv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@POOMKNAK@glVertexAttrib3s@
CONST	SEGMENT
??_C@_0BB@POOMKNAK@glVertexAttrib3s@ DB 'glVertexAttrib3s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@IDKDLKFI@glVertexAttrib3fv@
CONST	SEGMENT
??_C@_0BC@IDKDLKFI@glVertexAttrib3fv@ DB 'glVertexAttrib3fv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@MJFJELBO@glVertexAttrib3f@
CONST	SEGMENT
??_C@_0BB@MJFJELBO@glVertexAttrib3f@ DB 'glVertexAttrib3f', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@IACHGODG@glVertexAttrib3dv@
CONST	SEGMENT
??_C@_0BC@IACHGODG@glVertexAttrib3dv@ DB 'glVertexAttrib3dv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@PLGPCJJM@glVertexAttrib3d@
CONST	SEGMENT
??_C@_0BB@PLGPCJJM@glVertexAttrib3d@ DB 'glVertexAttrib3d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@CBPCLMKG@glVertexAttrib2sv@
CONST	SEGMENT
??_C@_0BC@CBPCLMKG@glVertexAttrib2sv@ DB 'glVertexAttrib2sv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@PPCOMHDN@glVertexAttrib2s@
CONST	SEGMENT
??_C@_0BB@PPCOMHDN@glVertexAttrib2s@ DB 'glVertexAttrib2s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@DLBPNNDN@glVertexAttrib2fv@
CONST	SEGMENT
??_C@_0BC@DLBPNNDN@glVertexAttrib2fv@ DB 'glVertexAttrib2fv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@MIJLCBCJ@glVertexAttrib2f@
CONST	SEGMENT
??_C@_0BB@MIJLCBCJ@glVertexAttrib2f@ DB 'glVertexAttrib2f', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@DIJLAJFD@glVertexAttrib2dv@
CONST	SEGMENT
??_C@_0BC@DIJLAJFD@glVertexAttrib2dv@ DB 'glVertexAttrib2dv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@PKKNEDKL@glVertexAttrib2d@
CONST	SEGMENT
??_C@_0BB@PKKNEDKL@glVertexAttrib2d@ DB 'glVertexAttrib2d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@DDEHBDEI@glVertexAttrib1sv@
CONST	SEGMENT
??_C@_0BC@DDEHBDEI@glVertexAttrib1sv@ DB 'glVertexAttrib1sv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@PNGIHJGE@glVertexAttrib1s@
CONST	SEGMENT
??_C@_0BB@PNGIHJGE@glVertexAttrib1s@ DB 'glVertexAttrib1s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@CJKKHCND@glVertexAttrib1fv@
CONST	SEGMENT
??_C@_0BC@CJKKHCND@glVertexAttrib1fv@ DB 'glVertexAttrib1fv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@MKNNJPHA@glVertexAttrib1f@
CONST	SEGMENT
??_C@_0BB@MKNNJPHA@glVertexAttrib1f@ DB 'glVertexAttrib1f', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@CKCOKGLN@glVertexAttrib1dv@
CONST	SEGMENT
??_C@_0BC@CKCOKGLN@glVertexAttrib1dv@ DB 'glVertexAttrib1dv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@PIOLPNPC@glVertexAttrib1d@
CONST	SEGMENT
??_C@_0BB@PIOLPNPC@glVertexAttrib1d@ DB 'glVertexAttrib1d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@MAPGDLJK@glValidateProgram@
CONST	SEGMENT
??_C@_0BC@MAPGDLJK@glValidateProgram@ DB 'glValidateProgram', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@LNHCBEKP@glUniformMatrix4fv@
CONST	SEGMENT
??_C@_0BD@LNHCBEKP@glUniformMatrix4fv@ DB 'glUniformMatrix4fv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@CAKFCMBG@glUniformMatrix3fv@
CONST	SEGMENT
??_C@_0BD@CAKFCMBG@glUniformMatrix3fv@ DB 'glUniformMatrix3fv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@JIBJELHD@glUniformMatrix2fv@
CONST	SEGMENT
??_C@_0BD@JIBJELHD@glUniformMatrix2fv@ DB 'glUniformMatrix2fv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JFEMPNIH@glUniform4iv@
CONST	SEGMENT
??_C@_0N@JFEMPNIH@glUniform4iv@ DB 'glUniform4iv', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@IJLMFDO@glUniform3iv@
CONST	SEGMENT
??_C@_0N@IJLMFDO@glUniform3iv@ DB 'glUniform3iv', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LACHKCFL@glUniform2iv@
CONST	SEGMENT
??_C@_0N@LACHKCFL@glUniform2iv@ DB 'glUniform2iv', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@KCJCANLF@glUniform1iv@
CONST	SEGMENT
??_C@_0N@KCJCANLF@glUniform1iv@ DB 'glUniform1iv', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JOBALKLK@glUniform4fv@
CONST	SEGMENT
??_C@_0N@JOBALKLK@glUniform4fv@ DB 'glUniform4fv', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@DMHICAD@glUniform3fv@
CONST	SEGMENT
??_C@_0N@DMHICAD@glUniform3fv@ DB 'glUniform3fv', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LLHLOFGG@glUniform2fv@
CONST	SEGMENT
??_C@_0N@LLHLOFGG@glUniform2fv@ DB 'glUniform2fv', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@KJMOEKII@glUniform1fv@
CONST	SEGMENT
??_C@_0N@KJMOEKII@glUniform1fv@ DB 'glUniform1fv', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@EKNBNBMB@glUniform4i@
CONST	SEGMENT
??_C@_0M@EKNBNBMB@glUniform4i@ DB 'glUniform4i', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@EPJOMHEE@glUniform3i@
CONST	SEGMENT
??_C@_0M@EPJOMHEE@glUniform3i@ DB 'glUniform3i', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@EOFMKNHD@glUniform2i@
CONST	SEGMENT
??_C@_0M@EOFMKNHD@glUniform2i@ DB 'glUniform2i', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@EMBKBDCK@glUniform1i@
CONST	SEGMENT
??_C@_0M@EMBKBDCK@glUniform1i@ DB 'glUniform1i', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MNEJMNAO@glUniform4f@
CONST	SEGMENT
??_C@_0M@MNEJMNAO@glUniform4f@ DB 'glUniform4f', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MIAGNLIL@glUniform3f@
CONST	SEGMENT
??_C@_0M@MIAGNLIL@glUniform3f@ DB 'glUniform3f', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MJMELBLM@glUniform2f@
CONST	SEGMENT
??_C@_0M@MJMELBLM@glUniform2f@ DB 'glUniform2f', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MLICAPOF@glUniform1f@
CONST	SEGMENT
??_C@_0M@MLICAPOF@glUniform1f@ DB 'glUniform1f', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@ICBDHBI@glUseProgram@
CONST	SEGMENT
??_C@_0N@ICBDHBI@glUseProgram@ DB 'glUseProgram', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@DFHCPFMO@glShaderSource@
CONST	SEGMENT
??_C@_0P@DFHCPFMO@glShaderSource@ DB 'glShaderSource', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@PIOEEBPO@glLinkProgram@
CONST	SEGMENT
??_C@_0O@PIOEEBPO@glLinkProgram@ DB 'glLinkProgram', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@MDDLFIHC@glIsShader@
CONST	SEGMENT
??_C@_0L@MDDLFIHC@glIsShader@ DB 'glIsShader', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@INLOJDGO@glIsProgram@
CONST	SEGMENT
??_C@_0M@INLOJDGO@glIsProgram@ DB 'glIsProgram', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@DOJMENLD@glGetVertexAttribPointerv@
CONST	SEGMENT
??_C@_0BK@DOJMENLD@glGetVertexAttribPointerv@ DB 'glGetVertexAttribPointe'
	DB	'rv', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@HLCEAPNO@glGetVertexAttribiv@
CONST	SEGMENT
??_C@_0BE@HLCEAPNO@glGetVertexAttribiv@ DB 'glGetVertexAttribiv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@HAHIEIOD@glGetVertexAttribfv@
CONST	SEGMENT
??_C@_0BE@HAHIEIOD@glGetVertexAttribfv@ DB 'glGetVertexAttribfv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@HDPMJMIN@glGetVertexAttribdv@
CONST	SEGMENT
??_C@_0BE@HDPMJMIN@glGetVertexAttribdv@ DB 'glGetVertexAttribdv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@IAONPCL@glGetUniformiv@
CONST	SEGMENT
??_C@_0P@IAONPCL@glGetUniformiv@ DB 'glGetUniformiv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@DFCJIBG@glGetUniformfv@
CONST	SEGMENT
??_C@_0P@DFCJIBG@glGetUniformfv@ DB 'glGetUniformfv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@KIOPGICP@glGetUniformLocation@
CONST	SEGMENT
??_C@_0BF@KIOPGICP@glGetUniformLocation@ DB 'glGetUniformLocation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@ELEIFJEL@glGetShaderSource@
CONST	SEGMENT
??_C@_0BC@ELEIFJEL@glGetShaderSource@ DB 'glGetShaderSource', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@GIABBCMO@glGetShaderInfoLog@
CONST	SEGMENT
??_C@_0BD@GIABBCMO@glGetShaderInfoLog@ DB 'glGetShaderInfoLog', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@JBDFPDMG@glGetShaderiv@
CONST	SEGMENT
??_C@_0O@JBDFPDMG@glGetShaderiv@ DB 'glGetShaderiv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@DHGHAJFL@glGetProgramInfoLog@
CONST	SEGMENT
??_C@_0BE@DHGHAJFL@glGetProgramInfoLog@ DB 'glGetProgramInfoLog', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@FMMDFLCO@glGetProgramiv@
CONST	SEGMENT
??_C@_0P@FMMDFLCO@glGetProgramiv@ DB 'glGetProgramiv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@BEPGJDMM@glGetAttribLocation@
CONST	SEGMENT
??_C@_0BE@BEPGJDMM@glGetAttribLocation@ DB 'glGetAttribLocation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@GHMDGFEM@glGetAttachedShaders@
CONST	SEGMENT
??_C@_0BF@GHMDGFEM@glGetAttachedShaders@ DB 'glGetAttachedShaders', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@NIMHLLKN@glGetActiveUniform@
CONST	SEGMENT
??_C@_0BD@NIMHLLKN@glGetActiveUniform@ DB 'glGetActiveUniform', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@MBALAOHF@glGetActiveAttrib@
CONST	SEGMENT
??_C@_0BC@MBALAOHF@glGetActiveAttrib@ DB 'glGetActiveAttrib', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@EHBAHNHE@glEnableVertexAttribArray@
CONST	SEGMENT
??_C@_0BK@EHBAHNHE@glEnableVertexAttribArray@ DB 'glEnableVertexAttribArr'
	DB	'ay', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@NKHLOFFF@glDisableVertexAttribArray@
CONST	SEGMENT
??_C@_0BL@NKHLOFFF@glDisableVertexAttribArray@ DB 'glDisableVertexAttribA'
	DB	'rray', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@DJFJFCJL@glDetachShader@
CONST	SEGMENT
??_C@_0P@DJFJFCJL@glDetachShader@ DB 'glDetachShader', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@HHCDONAG@glDeleteShader@
CONST	SEGMENT
??_C@_0P@HHCDONAG@glDeleteShader@ DB 'glDeleteShader', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@NKGCDOPO@glDeleteProgram@
CONST	SEGMENT
??_C@_0BA@NKGCDOPO@glDeleteProgram@ DB 'glDeleteProgram', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@HGHBNC@glCreateShader@
CONST	SEGMENT
??_C@_0P@HGHBNC@glCreateShader@ DB 'glCreateShader', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@FLKLHNKP@glCreateProgram@
CONST	SEGMENT
??_C@_0BA@FLKLHNKP@glCreateProgram@ DB 'glCreateProgram', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@DGIEGONF@glCompileShader@
CONST	SEGMENT
??_C@_0BA@DGIEGONF@glCompileShader@ DB 'glCompileShader', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@MHKEFIHM@glBindAttribLocation@
CONST	SEGMENT
??_C@_0BF@MHKEFIHM@glBindAttribLocation@ DB 'glBindAttribLocation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@LDMLEABL@glAttachShader@
CONST	SEGMENT
??_C@_0P@LDMLEABL@glAttachShader@ DB 'glAttachShader', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@MMKPIEJI@glStencilMaskSeparate@
CONST	SEGMENT
??_C@_0BG@MMKPIEJI@glStencilMaskSeparate@ DB 'glStencilMaskSeparate', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@FCMNCEIA@glStencilFuncSeparate@
CONST	SEGMENT
??_C@_0BG@FCMNCEIA@glStencilFuncSeparate@ DB 'glStencilFuncSeparate', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@GAPLDNGF@glStencilOpSeparate@
CONST	SEGMENT
??_C@_0BE@GAPLDNGF@glStencilOpSeparate@ DB 'glStencilOpSeparate', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@COHJKDBH@glDrawBuffers@
CONST	SEGMENT
??_C@_0O@COHJKDBH@glDrawBuffers@ DB 'glDrawBuffers', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@JNHDNJAG@glBlendEquationSeparate@
CONST	SEGMENT
??_C@_0BI@JNHDNJAG@glBlendEquationSeparate@ DB 'glBlendEquationSeparate', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@KNJEIFMC@glGetBufferPointerv@
CONST	SEGMENT
??_C@_0BE@KNJEIFMC@glGetBufferPointerv@ DB 'glGetBufferPointerv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@BMIEIFJP@glGetBufferParameteriv@
CONST	SEGMENT
??_C@_0BH@BMIEIFJP@glGetBufferParameteriv@ DB 'glGetBufferParameteriv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@OFGHBLEO@glUnmapBuffer@
CONST	SEGMENT
??_C@_0O@OFGHBLEO@glUnmapBuffer@ DB 'glUnmapBuffer', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NNHDPACA@glMapBuffer@
CONST	SEGMENT
??_C@_0M@NNHDPACA@glMapBuffer@ DB 'glMapBuffer', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@PNDAHMBO@glGetBufferSubData@
CONST	SEGMENT
??_C@_0BD@PNDAHMBO@glGetBufferSubData@ DB 'glGetBufferSubData', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@GAJMDBBN@glBufferSubData@
CONST	SEGMENT
??_C@_0BA@GAJMDBBN@glBufferSubData@ DB 'glBufferSubData', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JHHJMABP@glBufferData@
CONST	SEGMENT
??_C@_0N@JHHJMABP@glBufferData@ DB 'glBufferData', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@KFPDMKNG@glIsBuffer@
CONST	SEGMENT
??_C@_0L@KFPDMKNG@glIsBuffer@ DB 'glIsBuffer', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LAOHBIBA@glGenBuffers@
CONST	SEGMENT
??_C@_0N@LAOHBIBA@glGenBuffers@ DB 'glGenBuffers', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@DMNLADIO@glDeleteBuffers@
CONST	SEGMENT
??_C@_0BA@DMNLADIO@glDeleteBuffers@ DB 'glDeleteBuffers', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BONEPPLO@glBindBuffer@
CONST	SEGMENT
??_C@_0N@BONEPPLO@glBindBuffer@ DB 'glBindBuffer', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@MNBBKJ@glGetQueryObjectuiv@
CONST	SEGMENT
??_C@_0BE@MNBBKJ@glGetQueryObjectuiv@ DB 'glGetQueryObjectuiv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KMBBCJID@glGetQueryObjectiv@
CONST	SEGMENT
??_C@_0BD@KMBBCJID@glGetQueryObjectiv@ DB 'glGetQueryObjectiv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BPACPFCI@glGetQueryiv@
CONST	SEGMENT
??_C@_0N@BPACPFCI@glGetQueryiv@ DB 'glGetQueryiv', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FLEBHIDM@glEndQuery@
CONST	SEGMENT
??_C@_0L@FLEBHIDM@glEndQuery@ DB 'glEndQuery', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@GIAGIGPA@glBeginQuery@
CONST	SEGMENT
??_C@_0N@GIAGIGPA@glBeginQuery@ DB 'glBeginQuery', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09CNNLCEBN@glIsQuery@
CONST	SEGMENT
??_C@_09CNNLCEBN@glIsQuery@ DB 'glIsQuery', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@IOKEHMOH@glDeleteQueries@
CONST	SEGMENT
??_C@_0BA@IOKEHMOH@glDeleteQueries@ DB 'glDeleteQueries', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CJIGHHJ@glGenQueries@
CONST	SEGMENT
??_C@_0N@CJIGHHJ@glGenQueries@ DB 'glGenQueries', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@PFHILPAN@glBlendEquation@
CONST	SEGMENT
??_C@_0BA@PFHILPAN@glBlendEquation@ DB 'glBlendEquation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@PKBMFJDK@glBlendColor@
CONST	SEGMENT
??_C@_0N@PKBMFJDK@glBlendColor@ DB 'glBlendColor', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MAJBJBIM@glWindowPos3sv@
CONST	SEGMENT
??_C@_0P@MAJBJBIM@glWindowPos3sv@ DB 'glWindowPos3sv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@JCJLPFHG@glWindowPos3s@
CONST	SEGMENT
??_C@_0O@JCJLPFHG@glWindowPos3s@ DB 'glWindowPos3s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@NBCALHCK@glWindowPos3iv@
CONST	SEGMENT
??_C@_0P@NBCALHCK@glWindowPos3iv@ DB 'glWindowPos3iv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@CCLGAPKN@glWindowPos3i@
CONST	SEGMENT
??_C@_0O@CCLGAPKN@glWindowPos3i@ DB 'glWindowPos3i', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@NKHMPABH@glWindowPos3fv@
CONST	SEGMENT
??_C@_0P@NKHMPABH@glWindowPos3fv@ DB 'glWindowPos3fv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@KFCOBDGC@glWindowPos3f@
CONST	SEGMENT
??_C@_0O@KFCOBDGC@glWindowPos3f@ DB 'glWindowPos3f', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@NJPICEHJ@glWindowPos3dv@
CONST	SEGMENT
??_C@_0P@NJPICEHJ@glWindowPos3dv@ DB 'glWindowPos3dv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@JHBIHBOA@glWindowPos3d@
CONST	SEGMENT
??_C@_0O@JHBIHBOA@glWindowPos3d@ DB 'glWindowPos3d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@HICNPGOJ@glWindowPos2sv@
CONST	SEGMENT
??_C@_0P@HICNPGOJ@glWindowPos2sv@ DB 'glWindowPos2sv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@JDFJJPEB@glWindowPos2s@
CONST	SEGMENT
??_C@_0O@JDFJJPEB@glWindowPos2s@ DB 'glWindowPos2s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@GJJMNAEP@glWindowPos2iv@
CONST	SEGMENT
??_C@_0P@GJJMNAEP@glWindowPos2iv@ DB 'glWindowPos2iv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@CDHEGFJK@glWindowPos2i@
CONST	SEGMENT
??_C@_0O@CDHEGFJK@glWindowPos2i@ DB 'glWindowPos2i', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@GCMAJHHC@glWindowPos2fv@
CONST	SEGMENT
??_C@_0P@GCMAJHHC@glWindowPos2fv@ DB 'glWindowPos2fv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@KEOMHJFF@glWindowPos2f@
CONST	SEGMENT
??_C@_0O@KEOMHJFF@glWindowPos2f@ DB 'glWindowPos2f', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@GBEEEDBM@glWindowPos2dv@
CONST	SEGMENT
??_C@_0P@GBEEEDBM@glWindowPos2dv@ DB 'glWindowPos2dv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@JGNKBLNH@glWindowPos2d@
CONST	SEGMENT
??_C@_0O@JGNKBLNH@glWindowPos2d@ DB 'glWindowPos2d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@EFMNDJOO@glSecondaryColorPointer@
CONST	SEGMENT
??_C@_0BI@EFMNDJOO@glSecondaryColorPointer@ DB 'glSecondaryColorPointer', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@FKAMGHPP@glSecondaryColor3usv@
CONST	SEGMENT
??_C@_0BF@FKAMGHPP@glSecondaryColor3usv@ DB 'glSecondaryColor3usv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@LANODAPH@glSecondaryColor3us@
CONST	SEGMENT
??_C@_0BE@LANODAPH@glSecondaryColor3us@ DB 'glSecondaryColor3us', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@ELLNEBFJ@glSecondaryColor3uiv@
CONST	SEGMENT
??_C@_0BF@ELLNEBFJ@glSecondaryColor3uiv@ DB 'glSecondaryColor3uiv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@PDMKCM@glSecondaryColor3ui@
CONST	SEGMENT
??_C@_0BE@PDMKCM@glSecondaryColor3ui@ DB 'glSecondaryColor3ui', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@EHOIKOLI@glSecondaryColor3ubv@
CONST	SEGMENT
??_C@_0BF@EHOIKOLI@glSecondaryColor3ubv@ DB 'glSecondaryColor3ubv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@ODAHBDOH@glSecondaryColor3ub@
CONST	SEGMENT
??_C@_0BE@ODAHBDOH@glSecondaryColor3ub@ DB 'glSecondaryColor3ub', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@MJCELIAA@glSecondaryColor3sv@
CONST	SEGMENT
??_C@_0BE@MJCELIAA@glSecondaryColor3sv@ DB 'glSecondaryColor3sv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@JBPOFCHK@glSecondaryColor3s@
CONST	SEGMENT
??_C@_0BD@JBPOFCHK@glSecondaryColor3s@ DB 'glSecondaryColor3s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@NIJFJOKG@glSecondaryColor3iv@
CONST	SEGMENT
??_C@_0BE@NIJFJOKG@glSecondaryColor3iv@ DB 'glSecondaryColor3iv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@CBNDKIKB@glSecondaryColor3i@
CONST	SEGMENT
??_C@_0BD@CBNDKIKB@glSecondaryColor3i@ DB 'glSecondaryColor3i', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@NDMJNJJL@glSecondaryColor3fv@
CONST	SEGMENT
??_C@_0BE@NDMJNJJL@glSecondaryColor3fv@ DB 'glSecondaryColor3fv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KGELLEGO@glSecondaryColor3f@
CONST	SEGMENT
??_C@_0BD@KGELLEGO@glSecondaryColor3f@ DB 'glSecondaryColor3f', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@NAENANPF@glSecondaryColor3dv@
CONST	SEGMENT
??_C@_0BE@NAENANPF@glSecondaryColor3dv@ DB 'glSecondaryColor3dv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@JEHNNGOM@glSecondaryColor3d@
CONST	SEGMENT
??_C@_0BD@JEHNNGOM@glSecondaryColor3d@ DB 'glSecondaryColor3d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@NEMAHBEH@glSecondaryColor3bv@
CONST	SEGMENT
??_C@_0BE@NEMAHBEH@glSecondaryColor3bv@ DB 'glSecondaryColor3bv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@MCCHHBGK@glSecondaryColor3b@
CONST	SEGMENT
??_C@_0BD@MCCHHBGK@glSecondaryColor3b@ DB 'glSecondaryColor3b', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@GECGFLP@glFogCoordPointer@
CONST	SEGMENT
??_C@_0BC@GECGFLP@glFogCoordPointer@ DB 'glFogCoordPointer', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@KKODAODE@glFogCoorddv@
CONST	SEGMENT
??_C@_0N@KKODAODE@glFogCoorddv@ DB 'glFogCoorddv', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@FACELPGH@glFogCoordd@
CONST	SEGMENT
??_C@_0M@FACELPGH@glFogCoordd@ DB 'glFogCoordd', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@KJGHNKFK@glFogCoordfv@
CONST	SEGMENT
??_C@_0N@KJGHNKFK@glFogCoordfv@ DB 'glFogCoordfv', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@GCBCNNOF@glFogCoordf@
CONST	SEGMENT
??_C@_0M@GCBCNNOF@glFogCoordf@ DB 'glFogCoordf', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@LDFNOKAC@glPointParameteriv@
CONST	SEGMENT
??_C@_0BD@LDFNOKAC@glPointParameteriv@ DB 'glPointParameteriv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@ICPGPIPB@glPointParameteri@
CONST	SEGMENT
??_C@_0BC@ICPGPIPB@glPointParameteri@ DB 'glPointParameteri', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@LIABKNDP@glPointParameterfv@
CONST	SEGMENT
??_C@_0BD@LIABKNDP@glPointParameterfv@ DB 'glPointParameterfv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@FGOOEDO@glPointParameterf@
CONST	SEGMENT
??_C@_0BC@FGOOEDO@glPointParameterf@ DB 'glPointParameterf', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@MPDFJJLL@glMultiDrawElements@
CONST	SEGMENT
??_C@_0BE@MPDFJJLL@glMultiDrawElements@ DB 'glMultiDrawElements', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@IBABPJFA@glMultiDrawArrays@
CONST	SEGMENT
??_C@_0BC@IBABPJFA@glMultiDrawArrays@ DB 'glMultiDrawArrays', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@LLLCIIOO@glBlendFuncSeparate@
CONST	SEGMENT
??_C@_0BE@LLLCIIOO@glBlendFuncSeparate@ DB 'glBlendFuncSeparate', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@NCKJAFA@glMultTransposeMatrixd@
CONST	SEGMENT
??_C@_0BH@NCKJAFA@glMultTransposeMatrixd@ DB 'glMultTransposeMatrixd', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@DPBMPCNC@glMultTransposeMatrixf@
CONST	SEGMENT
??_C@_0BH@DPBMPCNC@glMultTransposeMatrixf@ DB 'glMultTransposeMatrixf', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@DMKLNEPC@glLoadTransposeMatrixd@
CONST	SEGMENT
??_C@_0BH@DMKLNEPC@glLoadTransposeMatrixd@ DB 'glLoadTransposeMatrixd', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@OJNLGHA@glLoadTransposeMatrixf@
CONST	SEGMENT
??_C@_0BH@OJNLGHA@glLoadTransposeMatrixf@ DB 'glLoadTransposeMatrixf', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@HKFHALMP@glMultiTexCoord4sv@
CONST	SEGMENT
??_C@_0BD@HKFHALMP@glMultiTexCoord4sv@ DB 'glMultiTexCoord4sv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@IEDHLDIC@glMultiTexCoord4s@
CONST	SEGMENT
??_C@_0BC@IEDHLDIC@glMultiTexCoord4s@ DB 'glMultiTexCoord4s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@GLOGCNGJ@glMultiTexCoord4iv@
CONST	SEGMENT
??_C@_0BD@GLOGCNGJ@glMultiTexCoord4iv@ DB 'glMultiTexCoord4iv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@DEBKEJFJ@glMultiTexCoord4i@
CONST	SEGMENT
??_C@_0BC@DEBKEJFJ@glMultiTexCoord4i@ DB 'glMultiTexCoord4i', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@GALKGKFE@glMultiTexCoord4fv@
CONST	SEGMENT
??_C@_0BD@GALKGKFE@glMultiTexCoord4fv@ DB 'glMultiTexCoord4fv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@LDICFFJG@glMultiTexCoord4f@
CONST	SEGMENT
??_C@_0BC@LDICFFJG@glMultiTexCoord4f@ DB 'glMultiTexCoord4f', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@GDDOLODK@glMultiTexCoord4dv@
CONST	SEGMENT
??_C@_0BD@GDDOLODK@glMultiTexCoord4dv@ DB 'glMultiTexCoord4dv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@IBLEDHBE@glMultiTexCoord4d@
CONST	SEGMENT
??_C@_0BC@IBLEDHBE@glMultiTexCoord4d@ DB 'glMultiTexCoord4d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OHIADDHG@glMultiTexCoord3sv@
CONST	SEGMENT
??_C@_0BD@OHIADDHG@glMultiTexCoord3sv@ DB 'glMultiTexCoord3sv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@IBHIKFAH@glMultiTexCoord3s@
CONST	SEGMENT
??_C@_0BC@IBHIKFAH@glMultiTexCoord3s@ DB 'glMultiTexCoord3s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@PGDBBFNA@glMultiTexCoord3iv@
CONST	SEGMENT
??_C@_0BD@PGDBBFNA@glMultiTexCoord3iv@ DB 'glMultiTexCoord3iv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@DBFFFPNM@glMultiTexCoord3i@
CONST	SEGMENT
??_C@_0BC@DBFFFPNM@glMultiTexCoord3i@ DB 'glMultiTexCoord3i', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@PNGNFCON@glMultiTexCoord3fv@
CONST	SEGMENT
??_C@_0BD@PNGNFCON@glMultiTexCoord3fv@ DB 'glMultiTexCoord3fv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@LGMNEDBD@glMultiTexCoord3f@
CONST	SEGMENT
??_C@_0BC@LGMNEDBD@glMultiTexCoord3f@ DB 'glMultiTexCoord3f', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@POOJIGID@glMultiTexCoord3dv@
CONST	SEGMENT
??_C@_0BD@POOJIGID@glMultiTexCoord3dv@ DB 'glMultiTexCoord3dv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@IEPLCBJB@glMultiTexCoord3d@
CONST	SEGMENT
??_C@_0BC@IEPLCBJB@glMultiTexCoord3d@ DB 'glMultiTexCoord3d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FPDMFEBD@glMultiTexCoord2sv@
CONST	SEGMENT
??_C@_0BD@FPDMFEBD@glMultiTexCoord2sv@ DB 'glMultiTexCoord2sv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@IALKMPDA@glMultiTexCoord2s@
CONST	SEGMENT
??_C@_0BC@IALKMPDA@glMultiTexCoord2s@ DB 'glMultiTexCoord2s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@EOINHCLF@glMultiTexCoord2iv@
CONST	SEGMENT
??_C@_0BD@EOINHCLF@glMultiTexCoord2iv@ DB 'glMultiTexCoord2iv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@DAJHDFOL@glMultiTexCoord2i@
CONST	SEGMENT
??_C@_0BC@DAJHDFOL@glMultiTexCoord2i@ DB 'glMultiTexCoord2i', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@EFNBDFII@glMultiTexCoord2fv@
CONST	SEGMENT
??_C@_0BD@EFNBDFII@glMultiTexCoord2fv@ DB 'glMultiTexCoord2fv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@LHAPCJCE@glMultiTexCoord2f@
CONST	SEGMENT
??_C@_0BC@LHAPCJCE@glMultiTexCoord2f@ DB 'glMultiTexCoord2f', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@EGFFOBOG@glMultiTexCoord2dv@
CONST	SEGMENT
??_C@_0BD@EGFFOBOG@glMultiTexCoord2dv@ DB 'glMultiTexCoord2dv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@IFDJELKG@glMultiTexCoord2d@
CONST	SEGMENT
??_C@_0BC@IFDJELKG@glMultiTexCoord2d@ DB 'glMultiTexCoord2d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@ENIJPLPN@glMultiTexCoord1sv@
CONST	SEGMENT
??_C@_0BD@ENIJPLPN@glMultiTexCoord1sv@ DB 'glMultiTexCoord1sv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@ICPMHBGJ@glMultiTexCoord1s@
CONST	SEGMENT
??_C@_0BC@ICPMHBGJ@glMultiTexCoord1s@ DB 'glMultiTexCoord1s', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FMDINNFL@glMultiTexCoord1iv@
CONST	SEGMENT
??_C@_0BD@FMDINNFL@glMultiTexCoord1iv@ DB 'glMultiTexCoord1iv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@DCNBILLC@glMultiTexCoord1i@
CONST	SEGMENT
??_C@_0BC@DCNBILLC@glMultiTexCoord1i@ DB 'glMultiTexCoord1i', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FHGEJKGG@glMultiTexCoord1fv@
CONST	SEGMENT
??_C@_0BD@FHGEJKGG@glMultiTexCoord1fv@ DB 'glMultiTexCoord1fv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@LFEJJHHN@glMultiTexCoord1f@
CONST	SEGMENT
??_C@_0BC@LFEJJHHN@glMultiTexCoord1f@ DB 'glMultiTexCoord1f', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FEOAEOAI@glMultiTexCoord1dv@
CONST	SEGMENT
??_C@_0BD@FEOAEOAI@glMultiTexCoord1dv@ DB 'glMultiTexCoord1dv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@IHHPPFPP@glMultiTexCoord1d@
CONST	SEGMENT
??_C@_0BC@IHHPPFPP@glMultiTexCoord1d@ DB 'glMultiTexCoord1d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@EGKOMLFO@glClientActiveTexture@
CONST	SEGMENT
??_C@_0BG@EGKOMLFO@glClientActiveTexture@ DB 'glClientActiveTexture', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@MPANLPPL@glGetCompressedTexImage@
CONST	SEGMENT
??_C@_0BI@MPANLPPL@glGetCompressedTexImage@ DB 'glGetCompressedTexImage', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@ECBIPHJO@glCompressedTexSubImage1D@
CONST	SEGMENT
??_C@_0BK@ECBIPHJO@glCompressedTexSubImage1D@ DB 'glCompressedTexSubImage'
	DB	'1D', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@EAFOEJMH@glCompressedTexSubImage2D@
CONST	SEGMENT
??_C@_0BK@EAFOEJMH@glCompressedTexSubImage2D@ DB 'glCompressedTexSubImage'
	DB	'2D', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@EBJMCDPA@glCompressedTexSubImage3D@
CONST	SEGMENT
??_C@_0BK@EBJMCDPA@glCompressedTexSubImage3D@ DB 'glCompressedTexSubImage'
	DB	'3D', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@GFPJBEAB@glCompressedTexImage1D@
CONST	SEGMENT
??_C@_0BH@GFPJBEAB@glCompressedTexImage1D@ DB 'glCompressedTexImage1D', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@GHLPKKFI@glCompressedTexImage2D@
CONST	SEGMENT
??_C@_0BH@GHLPKKFI@glCompressedTexImage2D@ DB 'glCompressedTexImage2D', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@GGHNMAGP@glCompressedTexImage3D@
CONST	SEGMENT
??_C@_0BH@GGHNMAGP@glCompressedTexImage3D@ DB 'glCompressedTexImage3D', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@BJGIPMOA@glSampleCoverage@
CONST	SEGMENT
??_C@_0BB@BJGIPMOA@glSampleCoverage@ DB 'glSampleCoverage', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@KOBBIKOF@glActiveTexture@
CONST	SEGMENT
??_C@_0BA@KOBBIKOF@glActiveTexture@ DB 'glActiveTexture', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@PJFGNMAG@glCopyTexSubImage3D@
CONST	SEGMENT
??_C@_0BE@PJFGNMAG@glCopyTexSubImage3D@ DB 'glCopyTexSubImage3D', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@NGGKPOPN@glTexSubImage3D@
CONST	SEGMENT
??_C@_0BA@NGGKPOPN@glTexSubImage3D@ DB 'glTexSubImage3D', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JAEIBBBF@glTexImage3D@
CONST	SEGMENT
??_C@_0N@JAEIBBBF@glTexImage3D@ DB 'glTexImage3D', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@IHNAGJGJ@glDrawRangeElements@
CONST	SEGMENT
??_C@_0BE@IHNAGJGJ@glDrawRangeElements@ DB 'glDrawRangeElements', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@JKGPLNEA@glPushClientAttrib@
CONST	SEGMENT
??_C@_0BD@JKGPLNEA@glPushClientAttrib@ DB 'glPushClientAttrib', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@GOOJKIDH@glPopClientAttrib@
CONST	SEGMENT
??_C@_0BC@GOOJKIDH@glPopClientAttrib@ DB 'glPopClientAttrib', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@BBKJOCAC@glIndexubv@
CONST	SEGMENT
??_C@_0L@BBKJOCAC@glIndexubv@ DB 'glIndexubv', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09BBIPIKNC@glIndexub@
CONST	SEGMENT
??_C@_09BBIPIKNC@glIndexub@ DB 'glIndexub', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@FFCGNNIA@glPrioritizeTextures@
CONST	SEGMENT
??_C@_0BF@FFCGNNIA@glPrioritizeTextures@ DB 'glPrioritizeTextures', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@DHOKJLEP@glAreTexturesResident@
CONST	SEGMENT
??_C@_0BG@DHOKJLEP@glAreTexturesResident@ DB 'glAreTexturesResident', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@HAHECJNK@glVertexPointer@
CONST	SEGMENT
??_C@_0BA@HAHECJNK@glVertexPointer@ DB 'glVertexPointer', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@DAOMILMO@glTexCoordPointer@
CONST	SEGMENT
??_C@_0BC@DAOMILMO@glTexCoordPointer@ DB 'glTexCoordPointer', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@DCLMCEOP@glNormalPointer@
CONST	SEGMENT
??_C@_0BA@DCLMCEOP@glNormalPointer@ DB 'glNormalPointer', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@EDEDCKLI@glInterleavedArrays@
CONST	SEGMENT
??_C@_0BE@EDEDCKLI@glInterleavedArrays@ DB 'glInterleavedArrays', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@KGJBLKPD@glIndexPointer@
CONST	SEGMENT
??_C@_0P@KGJBLKPD@glIndexPointer@ DB 'glIndexPointer', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@KECPKGNE@glEnableClientState@
CONST	SEGMENT
??_C@_0BE@KECPKGNE@glEnableClientState@ DB 'glEnableClientState', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@LILGCNN@glEdgeFlagPointer@
CONST	SEGMENT
??_C@_0BC@LILGCNN@glEdgeFlagPointer@ DB 'glEdgeFlagPointer', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@LJDHBNBP@glDisableClientState@
CONST	SEGMENT
??_C@_0BF@LJDHBNBP@glDisableClientState@ DB 'glDisableClientState', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@DPKEGLKI@glColorPointer@
CONST	SEGMENT
??_C@_0P@DPKEGLKI@glColorPointer@ DB 'glColorPointer', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@CKCIJELG@glArrayElement@
CONST	SEGMENT
??_C@_0P@CKCIJELG@glArrayElement@ DB 'glArrayElement', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NJHAEPDN@glIsTexture@
CONST	SEGMENT
??_C@_0M@NJHAEPDN@glIsTexture@ DB 'glIsTexture', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@LLMANLNK@glGenTextures@
CONST	SEGMENT
??_C@_0O@LLMANLNK@glGenTextures@ DB 'glGenTextures', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@KMPLFJIC@glDeleteTextures@
CONST	SEGMENT
??_C@_0BB@KMPLFJIC@glDeleteTextures@ DB 'glDeleteTextures', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@JKKCIBGC@glBindTexture@
CONST	SEGMENT
??_C@_0O@JKKCIBGC@glBindTexture@ DB 'glBindTexture', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@NHKIJEMK@glTexSubImage2D@
CONST	SEGMENT
??_C@_0BA@NHKIJEMK@glTexSubImage2D@ DB 'glTexSubImage2D', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@NFOOCKJD@glTexSubImage1D@
CONST	SEGMENT
??_C@_0BA@NFOOCKJD@glTexSubImage1D@ DB 'glTexSubImage1D', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@PIJELGDB@glCopyTexSubImage2D@
CONST	SEGMENT
??_C@_0BE@PIJELGDB@glCopyTexSubImage2D@ DB 'glCopyTexSubImage2D', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@PKNCAIGI@glCopyTexSubImage1D@
CONST	SEGMENT
??_C@_0BE@PKNCAIGI@glCopyTexSubImage1D@ DB 'glCopyTexSubImage1D', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@MGAFKJKC@glCopyTexImage2D@
CONST	SEGMENT
??_C@_0BB@MGAFKJKC@glCopyTexImage2D@ DB 'glCopyTexImage2D', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@MEEDBHPL@glCopyTexImage1D@
CONST	SEGMENT
??_C@_0BB@MEEDBHPL@glCopyTexImage1D@ DB 'glCopyTexImage1D', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@FFBJGNC@glPolygonOffset@
CONST	SEGMENT
??_C@_0BA@FFBJGNC@glPolygonOffset@ DB 'glPolygonOffset', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@LADEDGJO@glGetPointerv@
CONST	SEGMENT
??_C@_0O@LADEDGJO@glGetPointerv@ DB 'glGetPointerv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MENFIFGE@glDrawElements@
CONST	SEGMENT
??_C@_0P@MENFIFGE@glDrawElements@ DB 'glDrawElements', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CMNPPOHA@glDrawArrays@
CONST	SEGMENT
??_C@_0N@CMNPPOHA@glDrawArrays@ DB 'glDrawArrays', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@IFPDDBNE@glTranslatef@
CONST	SEGMENT
??_C@_0N@IFPDDBNE@glTranslatef@ DB 'glTranslatef', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LHMFFDFG@glTranslated@
CONST	SEGMENT
??_C@_0N@LHMFFDFG@glTranslated@ DB 'glTranslated', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08JCPEOPLK@glScalef@
CONST	SEGMENT
??_C@_08JCPEOPLK@glScalef@ DB 'glScalef', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08KAMCINDI@glScaled@
CONST	SEGMENT
??_C@_08KAMCINDI@glScaled@ DB 'glScaled', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09FCODNBIM@glRotatef@
CONST	SEGMENT
??_C@_09FCODNBIM@glRotatef@ DB 'glRotatef', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09GANFLDAO@glRotated@
CONST	SEGMENT
??_C@_09GANFLDAO@glRotated@ DB 'glRotated', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@IHFNHGBL@glPushMatrix@
CONST	SEGMENT
??_C@_0N@IHFNHGBL@glPushMatrix@ DB 'glPushMatrix', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@JPEAAEEK@glPopMatrix@
CONST	SEGMENT
??_C@_0M@JPEAAEEK@glPopMatrix@ DB 'glPopMatrix', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07DBAFHOII@glOrtho@
CONST	SEGMENT
??_C@_07DBAFHOII@glOrtho@ DB 'glOrtho', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@IFJFLNCL@glMultMatrixd@
CONST	SEGMENT
??_C@_0O@IFJFLNCL@glMultMatrixd@ DB 'glMultMatrixd', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@LHKDNPKJ@glMultMatrixf@
CONST	SEGMENT
??_C@_0O@LHKDNPKJ@glMultMatrixf@ DB 'glMultMatrixf', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@KDLNHKEJ@glMatrixMode@
CONST	SEGMENT
??_C@_0N@KDLNHKEJ@glMatrixMode@ DB 'glMatrixMode', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@LFHKEMK@glLoadMatrixd@
CONST	SEGMENT
??_C@_0O@LFHKEMK@glLoadMatrixd@ DB 'glLoadMatrixd', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@DJGBMGEI@glLoadMatrixf@
CONST	SEGMENT
??_C@_0O@DJGBMGEI@glLoadMatrixf@ DB 'glLoadMatrixf', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@EJAFHEPO@glLoadIdentity@
CONST	SEGMENT
??_C@_0P@EJAFHEPO@glLoadIdentity@ DB 'glLoadIdentity', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09ICLFHOKP@glFrustum@
CONST	SEGMENT
??_C@_09ICLFHOKP@glFrustum@ DB 'glFrustum', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08DMFMJKDH@glIsList@
CONST	SEGMENT
??_C@_08DMFMJKDH@glIsList@ DB 'glIsList', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HOAMNHM@glGetTexGeniv@
CONST	SEGMENT
??_C@_0O@HOAMNHM@glGetTexGeniv@ DB 'glGetTexGeniv', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@MLMIKEB@glGetTexGenfv@
CONST	SEGMENT
??_C@_0O@MLMIKEB@glGetTexGenfv@ DB 'glGetTexGenfv', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@PDIFOCP@glGetTexGendv@
CONST	SEGMENT
??_C@_0O@PDIFOCP@glGetTexGendv@ DB 'glGetTexGendv', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@KIFFCCBG@glGetTexEnviv@
CONST	SEGMENT
??_C@_0O@KIFFCCBG@glGetTexEnviv@ DB 'glGetTexEnviv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@KDAJGFCL@glGetTexEnvfv@
CONST	SEGMENT
??_C@_0O@KDAJGFCL@glGetTexEnvfv@ DB 'glGetTexEnvfv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@PBJHLEJI@glGetPolygonStipple@
CONST	SEGMENT
??_C@_0BE@PBJHLEJI@glGetPolygonStipple@ DB 'glGetPolygonStipple', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@NHJEMOOF@glGetPixelMapusv@
CONST	SEGMENT
??_C@_0BB@NHJEMOOF@glGetPixelMapusv@ DB 'glGetPixelMapusv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@MGCFOIED@glGetPixelMapuiv@
CONST	SEGMENT
??_C@_0BB@MGCFOIED@glGetPixelMapuiv@ DB 'glGetPixelMapuiv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@EDGNDGIE@glGetPixelMapfv@
CONST	SEGMENT
??_C@_0BA@EDGNDGIE@glGetPixelMapfv@ DB 'glGetPixelMapfv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@GJKDADAB@glGetMaterialiv@
CONST	SEGMENT
??_C@_0BA@GJKDADAB@glGetMaterialiv@ DB 'glGetMaterialiv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@GCPPEEDM@glGetMaterialfv@
CONST	SEGMENT
??_C@_0BA@GCPPEEDM@glGetMaterialfv@ DB 'glGetMaterialfv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FOFLNEHD@glGetMapiv@
CONST	SEGMENT
??_C@_0L@FOFLNEHD@glGetMapiv@ DB 'glGetMapiv', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FFAHJDEO@glGetMapfv@
CONST	SEGMENT
??_C@_0L@FFAHJDEO@glGetMapfv@ DB 'glGetMapfv', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FGIDEHCA@glGetMapdv@
CONST	SEGMENT
??_C@_0L@FGIDEHCA@glGetMapdv@ DB 'glGetMapdv', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@MNDANBJN@glGetLightiv@
CONST	SEGMENT
??_C@_0N@MNDANBJN@glGetLightiv@ DB 'glGetLightiv', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@MGGMJGKA@glGetLightfv@
CONST	SEGMENT
??_C@_0N@MGGMJGKA@glGetLightfv@ DB 'glGetLightfv', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MMMNLMC@glGetClipPlane@
CONST	SEGMENT
??_C@_0P@MMMNLMC@glGetClipPlane@ DB 'glGetClipPlane', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FLFIHFDP@glDrawPixels@
CONST	SEGMENT
??_C@_0N@FLFIHFDP@glDrawPixels@ DB 'glDrawPixels', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OACCOOE@glCopyPixels@
CONST	SEGMENT
??_C@_0N@OACCOOE@glCopyPixels@ DB 'glCopyPixels', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@FMEEPGOI@glPixelMapusv@
CONST	SEGMENT
??_C@_0O@FMEEPGOI@glPixelMapusv@ DB 'glPixelMapusv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@ENPFNAEO@glPixelMapuiv@
CONST	SEGMENT
??_C@_0O@ENPFNAEO@glPixelMapuiv@ DB 'glPixelMapuiv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CNONNBNO@glPixelMapfv@
CONST	SEGMENT
??_C@_0N@CNONNBNO@glPixelMapfv@ DB 'glPixelMapfv', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@IAMKJDIC@glPixelTransferi@
CONST	SEGMENT
??_C@_0BB@IAMKJDIC@glPixelTransferi@ DB 'glPixelTransferi', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@HFCIPEN@glPixelTransferf@
CONST	SEGMENT
??_C@_0BB@HFCIPEN@glPixelTransferf@ DB 'glPixelTransferf', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@JAMJIGNB@glPixelZoom@
CONST	SEGMENT
??_C@_0M@JAMJIGNB@glPixelZoom@ DB 'glPixelZoom', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@BJGLMKCC@glAlphaFunc@
CONST	SEGMENT
??_C@_0M@BJGLMKCC@glAlphaFunc@ DB 'glAlphaFunc', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BFGDHBFK@glEvalPoint2@
CONST	SEGMENT
??_C@_0N@BFGDHBFK@glEvalPoint2@ DB 'glEvalPoint2', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@BJHJGIPD@glEvalMesh2@
CONST	SEGMENT
??_C@_0M@BJHJGIPD@glEvalMesh2@ DB 'glEvalMesh2', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@DOEOCCJJ@glEvalPoint1@
CONST	SEGMENT
??_C@_0N@DOEOCCJJ@glEvalPoint1@ DB 'glEvalPoint1', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DCFEDLDA@glEvalMesh1@
CONST	SEGMENT
??_C@_0M@DCFEDLDA@glEvalMesh1@ DB 'glEvalMesh1', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@LAAAJGBJ@glEvalCoord2fv@
CONST	SEGMENT
??_C@_0P@LAAAJGBJ@glEvalCoord2fv@ DB 'glEvalCoord2fv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@GJGIOPHD@glEvalCoord2f@
CONST	SEGMENT
??_C@_0O@GJGIOPHD@glEvalCoord2f@ DB 'glEvalCoord2f', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@LDIEECHH@glEvalCoord2dv@
CONST	SEGMENT
??_C@_0P@LDIEECHH@glEvalCoord2dv@ DB 'glEvalCoord2dv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@FLFOINPB@glEvalCoord2d@
CONST	SEGMENT
??_C@_0O@FLFOINPB@glEvalCoord2d@ DB 'glEvalCoord2d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@KCLFDJPH@glEvalCoord1fv@
CONST	SEGMENT
??_C@_0P@KCLFDJPH@glEvalCoord1fv@ DB 'glEvalCoord1fv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@GLCOFBCK@glEvalCoord1f@
CONST	SEGMENT
??_C@_0O@GLCOFBCK@glEvalCoord1f@ DB 'glEvalCoord1f', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@KBDBONJJ@glEvalCoord1dv@
CONST	SEGMENT
??_C@_0P@KBDBONJJ@glEvalCoord1dv@ DB 'glEvalCoord1dv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@FJBIDDKI@glEvalCoord1d@
CONST	SEGMENT
??_C@_0O@FJBIDDKI@glEvalCoord1d@ DB 'glEvalCoord1d', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@PNEKFPAF@glMapGrid2f@
CONST	SEGMENT
??_C@_0M@PNEKFPAF@glMapGrid2f@ DB 'glMapGrid2f', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MPHMDNIH@glMapGrid2d@
CONST	SEGMENT
??_C@_0M@MPHMDNIH@glMapGrid2d@ DB 'glMapGrid2d', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@PPAMOBFM@glMapGrid1f@
CONST	SEGMENT
??_C@_0M@PPAMOBFM@glMapGrid1f@ DB 'glMapGrid1f', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MNDKIDNO@glMapGrid1d@
CONST	SEGMENT
??_C@_0M@MNDKIDNO@glMapGrid1d@ DB 'glMapGrid1d', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07GEAGLFKJ@glMap2f@
CONST	SEGMENT
??_C@_07GEAGLFKJ@glMap2f@ DB 'glMap2f', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07FGDANHCL@glMap2d@
CONST	SEGMENT
??_C@_07FGDANHCL@glMap2d@ DB 'glMap2d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07GGEAALPA@glMap1f@
CONST	SEGMENT
??_C@_07GGEAALPA@glMap1f@ DB 'glMap1f', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07FEHGGJHC@glMap1d@
CONST	SEGMENT
??_C@_07FEHGGJHC@glMap1d@ DB 'glMap1d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@KDMLHFJM@glPushAttrib@
CONST	SEGMENT
??_C@_0N@KDMLHFJM@glPushAttrib@ DB 'glPushAttrib', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@LLNGAHMN@glPopAttrib@
CONST	SEGMENT
??_C@_0M@LLNGAHMN@glPopAttrib@ DB 'glPopAttrib', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07LNIJJMEN@glAccum@
CONST	SEGMENT
??_C@_07LNIJJMEN@glAccum@ DB 'glAccum', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@ONDJOEOA@glIndexMask@
CONST	SEGMENT
??_C@_0M@ONDJOEOA@glIndexMask@ DB 'glIndexMask', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@EIILHCMH@glClearIndex@
CONST	SEGMENT
??_C@_0N@EIILHCMH@glClearIndex@ DB 'glClearIndex', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OKAMEJMG@glClearAccum@
CONST	SEGMENT
??_C@_0N@OKAMEJMG@glClearAccum@ DB 'glClearAccum', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@LFFFABIK@glPushName@
CONST	SEGMENT
??_C@_0L@LFFFABIK@glPushName@ DB 'glPushName', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09IKDPIJOE@glPopName@
CONST	SEGMENT
??_C@_09IKDPIJOE@glPopName@ DB 'glPopName', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@KCIMMNEH@glPassThrough@
CONST	SEGMENT
??_C@_0O@KCIMMNEH@glPassThrough@ DB 'glPassThrough', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@JFFJNAJA@glLoadName@
CONST	SEGMENT
??_C@_0L@JFFJNAJA@glLoadName@ DB 'glLoadName', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@LBOBLINN@glInitNames@
CONST	SEGMENT
??_C@_0M@LBOBLINN@glInitNames@ DB 'glInitNames', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@HCFJFDGP@glRenderMode@
CONST	SEGMENT
??_C@_0N@HCFJFDGP@glRenderMode@ DB 'glRenderMode', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@KACPMBCN@glSelectBuffer@
CONST	SEGMENT
??_C@_0P@KACPMBCN@glSelectBuffer@ DB 'glSelectBuffer', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@COFAIKCN@glFeedbackBuffer@
CONST	SEGMENT
??_C@_0BB@COFAIKCN@glFeedbackBuffer@ DB 'glFeedbackBuffer', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@OIGLGFLJ@glTexGeniv@
CONST	SEGMENT
??_C@_0L@OIGLGFLJ@glTexGeniv@ DB 'glTexGeniv', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09GKNHFOEO@glTexGeni@
CONST	SEGMENT
??_C@_09GKNHFOEO@glTexGeni@ DB 'glTexGeni', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@ODDHCCIE@glTexGenfv@
CONST	SEGMENT
??_C@_0L@ODDHCCIE@glTexGenfv@ DB 'glTexGenfv', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09ONEPECIB@glTexGenf@
CONST	SEGMENT
??_C@_09ONEPECIB@glTexGenf@ DB 'glTexGenf', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@OALDPGOK@glTexGendv@
CONST	SEGMENT
??_C@_0L@OALDPGOK@glTexGendv@ DB 'glTexGendv', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09NPHJCAAD@glTexGend@
CONST	SEGMENT
??_C@_09NPHJCAAD@glTexGend@ DB 'glTexGend', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@EHNOIKND@glTexEnviv@
CONST	SEGMENT
??_C@_0L@EHNOIKND@glTexEnviv@ DB 'glTexEnviv', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09NFCDHIOH@glTexEnvi@
CONST	SEGMENT
??_C@_09NFCDHIOH@glTexEnvi@ DB 'glTexEnvi', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@EMICMNOO@glTexEnvfv@
CONST	SEGMENT
??_C@_0L@EMICMNOO@glTexEnvfv@ DB 'glTexEnvfv', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09FCLLGECI@glTexEnvf@
CONST	SEGMENT
??_C@_09FCLLGECI@glTexEnvf@ DB 'glTexEnvf', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NALMFHKN@glShadeModel@
CONST	SEGMENT
??_C@_0N@NALMFHKN@glShadeModel@ DB 'glShadeModel', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GIADEJGP@glPolygonStipple@
CONST	SEGMENT
??_C@_0BB@GIADEJGP@glPolygonStipple@ DB 'glPolygonStipple', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@HCDOEFL@glMaterialiv@
CONST	SEGMENT
??_C@_0N@HCDOEFL@glMaterialiv@ DB 'glMaterialiv', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@PHEGJGAN@glMateriali@
CONST	SEGMENT
??_C@_0M@PHEGJGAN@glMateriali@ DB 'glMateriali', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@MHPKDGG@glMaterialfv@
CONST	SEGMENT
??_C@_0N@MHPKDGG@glMaterialfv@ DB 'glMaterialfv', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HANOIKMC@glMaterialf@
CONST	SEGMENT
??_C@_0M@HANOIKMC@glMaterialf@ DB 'glMaterialf', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@LDOINBOK@glLineStipple@
CONST	SEGMENT
??_C@_0O@LDOINBOK@glLineStipple@ DB 'glLineStipple', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@JBCFLLOP@glLightModeliv@
CONST	SEGMENT
??_C@_0P@JBCFLLOP@glLightModeliv@ DB 'glLightModeliv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@PILBKMEH@glLightModeli@
CONST	SEGMENT
??_C@_0O@PILBKMEH@glLightModeli@ DB 'glLightModeli', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@JKHJPMNC@glLightModelfv@
CONST	SEGMENT
??_C@_0P@JKHJPMNC@glLightModelfv@ DB 'glLightModelfv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HPCJLAII@glLightModelf@
CONST	SEGMENT
??_C@_0O@HPCJLAII@glLightModelf@ DB 'glLightModelf', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09JDIIDONO@glLightiv@
CONST	SEGMENT
??_C@_09JDIIDONO@glLightiv@ DB 'glLightiv', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08DIKHJHIE@glLighti@
CONST	SEGMENT
??_C@_08DIKHJHIE@glLighti@ DB 'glLighti', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09JINEHJOD@glLightfv@
CONST	SEGMENT
??_C@_09JINEHJOD@glLightfv@ DB 'glLightfv', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08LPDPILEL@glLightf@
CONST	SEGMENT
??_C@_08LPDPILEL@glLightf@ DB 'glLightf', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07FGBEEHCN@glFogiv@
CONST	SEGMENT
??_C@_07FGBEEHCN@glFogiv@ DB 'glFogiv', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06BOOFNKDM@glFogi@
CONST	SEGMENT
??_C@_06BOOFNKDM@glFogi@ DB 'glFogi', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07FNEIAABA@glFogfv@
CONST	SEGMENT
??_C@_07FNEIAABA@glFogfv@ DB 'glFogfv', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06JJHNMGPD@glFogf@
CONST	SEGMENT
??_C@_06JJHNMGPD@glFogf@ DB 'glFogf', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@OOEHEGPC@glColorMaterial@
CONST	SEGMENT
??_C@_0BA@OOEHEGPC@glColorMaterial@ DB 'glColorMaterial', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@OHCNGGFF@glClipPlane@
CONST	SEGMENT
??_C@_0M@OHCNGGFF@glClipPlane@ DB 'glClipPlane', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@BHICLKLB@glVertex4sv@
CONST	SEGMENT
??_C@_0M@BHICLKLB@glVertex4sv@ DB 'glVertex4sv', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@IMGCCGJH@glVertex4s@
CONST	SEGMENT
??_C@_0L@IMGCCGJH@glVertex4s@ DB 'glVertex4s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@GDDJMBH@glVertex4iv@
CONST	SEGMENT
??_C@_0M@GDDJMBH@glVertex4iv@ DB 'glVertex4iv', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@DMEPNMEM@glVertex4i@
CONST	SEGMENT
??_C@_0L@DMEPNMEM@glVertex4i@ DB 'glVertex4i', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NGPNLCK@glVertex4fv@
CONST	SEGMENT
??_C@_0M@NGPNLCK@glVertex4fv@ DB 'glVertex4fv', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@LLNHMAID@glVertex4f@
CONST	SEGMENT
??_C@_0L@LLNHMAID@glVertex4f@ DB 'glVertex4f', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@OOLAPEE@glVertex4dv@
CONST	SEGMENT
??_C@_0M@OOLAPEE@glVertex4dv@ DB 'glVertex4dv', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@IJOBKCAB@glVertex4d@
CONST	SEGMENT
??_C@_0L@IJOBKCAB@glVertex4d@ DB 'glVertex4d', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@IKFFICAI@glVertex3sv@
CONST	SEGMENT
??_C@_0M@IKFFICAI@glVertex3sv@ DB 'glVertex3sv', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@IJCNDABC@glVertex3s@
CONST	SEGMENT
??_C@_0L@IJCNDABC@glVertex3s@ DB 'glVertex3s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@JLOEKEKO@glVertex3iv@
CONST	SEGMENT
??_C@_0M@JLOEKEKO@glVertex3iv@ DB 'glVertex3iv', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@DJAAMKMJ@glVertex3i@
CONST	SEGMENT
??_C@_0L@DJAAMKMJ@glVertex3i@ DB 'glVertex3i', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@JALIODJD@glVertex3fv@
CONST	SEGMENT
??_C@_0M@JALIODJD@glVertex3fv@ DB 'glVertex3fv', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@LOJINGAG@glVertex3f@
CONST	SEGMENT
??_C@_0L@LOJINGAG@glVertex3f@ DB 'glVertex3f', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@JDDMDHPN@glVertex3dv@
CONST	SEGMENT
??_C@_0M@JDDMDHPN@glVertex3dv@ DB 'glVertex3dv', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@IMKOLEIE@glVertex3d@
CONST	SEGMENT
??_C@_0L@IMKOLEIE@glVertex3d@ DB 'glVertex3d', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DCOJOFGN@glVertex2sv@
CONST	SEGMENT
??_C@_0M@DCOJOFGN@glVertex2sv@ DB 'glVertex2sv', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@IIOPFKCF@glVertex2s@
CONST	SEGMENT
??_C@_0L@IIOPFKCF@glVertex2s@ DB 'glVertex2s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CDFIMDML@glVertex2iv@
CONST	SEGMENT
??_C@_0M@CDFIMDML@glVertex2iv@ DB 'glVertex2iv', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@DIMCKAPO@glVertex2i@
CONST	SEGMENT
??_C@_0L@DIMCKAPO@glVertex2i@ DB 'glVertex2i', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CIAEIEPG@glVertex2fv@
CONST	SEGMENT
??_C@_0M@CIAEIEPG@glVertex2fv@ DB 'glVertex2fv', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@LPFKLMDB@glVertex2f@
CONST	SEGMENT
??_C@_0L@LPFKLMDB@glVertex2f@ DB 'glVertex2f', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CLIAFAJI@glVertex2dv@
CONST	SEGMENT
??_C@_0M@CLIAFAJI@glVertex2dv@ DB 'glVertex2dv', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@INGMNOLD@glVertex2d@
CONST	SEGMENT
??_C@_0L@INGMNOLD@glVertex2d@ DB 'glVertex2d', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@EBJEPFAA@glTexCoord4sv@
CONST	SEGMENT
??_C@_0O@EBJEPFAA@glTexCoord4sv@ DB 'glTexCoord4sv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CJOJLEKC@glTexCoord4s@
CONST	SEGMENT
??_C@_0N@CJOJLEKC@glTexCoord4s@ DB 'glTexCoord4s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@FACFNDKG@glTexCoord4iv@
CONST	SEGMENT
??_C@_0O@FACFNDKG@glTexCoord4iv@ DB 'glTexCoord4iv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JJMEEOHJ@glTexCoord4i@
CONST	SEGMENT
??_C@_0N@JJMEEOHJ@glTexCoord4i@ DB 'glTexCoord4i', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@FLHJJEJL@glTexCoord4fv@
CONST	SEGMENT
??_C@_0O@FLHJJEJL@glTexCoord4fv@ DB 'glTexCoord4fv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BOFMFCLG@glTexCoord4f@
CONST	SEGMENT
??_C@_0N@BOFMFCLG@glTexCoord4f@ DB 'glTexCoord4f', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@FIPNEAPF@glTexCoord4dv@
CONST	SEGMENT
??_C@_0O@FIPNEAPF@glTexCoord4dv@ DB 'glTexCoord4dv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CMGKDADE@glTexCoord4d@
CONST	SEGMENT
??_C@_0N@CMGKDADE@glTexCoord4d@ DB 'glTexCoord4d', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@NMEDMNLJ@glTexCoord3sv@
CONST	SEGMENT
??_C@_0O@NMEDMNLJ@glTexCoord3sv@ DB 'glTexCoord3sv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CMKGKCCH@glTexCoord3s@
CONST	SEGMENT
??_C@_0N@CMKGKCCH@glTexCoord3s@ DB 'glTexCoord3s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@MNPCOLBP@glTexCoord3iv@
CONST	SEGMENT
??_C@_0O@MNPCOLBP@glTexCoord3iv@ DB 'glTexCoord3iv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JMILFIPM@glTexCoord3i@
CONST	SEGMENT
??_C@_0N@JMILFIPM@glTexCoord3i@ DB 'glTexCoord3i', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@MGKOKMCC@glTexCoord3fv@
CONST	SEGMENT
??_C@_0O@MGKOKMCC@glTexCoord3fv@ DB 'glTexCoord3fv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BLBDEEDD@glTexCoord3f@
CONST	SEGMENT
??_C@_0N@BLBDEEDD@glTexCoord3f@ DB 'glTexCoord3f', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@MFCKHIEM@glTexCoord3dv@
CONST	SEGMENT
??_C@_0O@MFCKHIEM@glTexCoord3dv@ DB 'glTexCoord3dv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CJCFCGLB@glTexCoord3d@
CONST	SEGMENT
??_C@_0N@CJCFCGLB@glTexCoord3d@ DB 'glTexCoord3d', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@GEPPKKNM@glTexCoord2sv@
CONST	SEGMENT
??_C@_0O@GEPPKKNM@glTexCoord2sv@ DB 'glTexCoord2sv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CNGEMIBA@glTexCoord2s@
CONST	SEGMENT
??_C@_0N@CNGEMIBA@glTexCoord2s@ DB 'glTexCoord2s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HFEOIMHK@glTexCoord2iv@
CONST	SEGMENT
??_C@_0O@HFEOIMHK@glTexCoord2iv@ DB 'glTexCoord2iv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JNEJDCML@glTexCoord2i@
CONST	SEGMENT
??_C@_0N@JNEJDCML@glTexCoord2i@ DB 'glTexCoord2i', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HOBCMLEH@glTexCoord2fv@
CONST	SEGMENT
??_C@_0O@HOBCMLEH@glTexCoord2fv@ DB 'glTexCoord2fv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BKNBCOAE@glTexCoord2f@
CONST	SEGMENT
??_C@_0N@BKNBCOAE@glTexCoord2f@ DB 'glTexCoord2f', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HNJGBPCJ@glTexCoord2dv@
CONST	SEGMENT
??_C@_0O@HNJGBPCJ@glTexCoord2dv@ DB 'glTexCoord2dv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CIOHEMIG@glTexCoord2d@
CONST	SEGMENT
??_C@_0N@CIOHEMIG@glTexCoord2d@ DB 'glTexCoord2d', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@HGEKAFDC@glTexCoord1sv@
CONST	SEGMENT
??_C@_0O@HGEKAFDC@glTexCoord1sv@ DB 'glTexCoord1sv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CPCCHGEJ@glTexCoord1s@
CONST	SEGMENT
??_C@_0N@CPCCHGEJ@glTexCoord1s@ DB 'glTexCoord1s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@GHPLCDJE@glTexCoord1iv@
CONST	SEGMENT
??_C@_0O@GHPLCDJE@glTexCoord1iv@ DB 'glTexCoord1iv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JPAPIMJC@glTexCoord1i@
CONST	SEGMENT
??_C@_0N@JPAPIMJC@glTexCoord1i@ DB 'glTexCoord1i', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@GMKHGEKJ@glTexCoord1fv@
CONST	SEGMENT
??_C@_0O@GMKHGEKJ@glTexCoord1fv@ DB 'glTexCoord1fv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BIJHJAFN@glTexCoord1f@
CONST	SEGMENT
??_C@_0N@BIJHJAFN@glTexCoord1f@ DB 'glTexCoord1f', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@GPCDLAMH@glTexCoord1dv@
CONST	SEGMENT
??_C@_0O@GPCDLAMH@glTexCoord1dv@ DB 'glTexCoord1dv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CKKBPCNP@glTexCoord1d@
CONST	SEGMENT
??_C@_0N@CKKBPCNP@glTexCoord1d@ DB 'glTexCoord1d', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08FPNOOGJA@glRectsv@
CONST	SEGMENT
??_C@_08FPNOOGJA@glRectsv@ DB 'glRectsv', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07GCAIEMDA@glRects@
CONST	SEGMENT
??_C@_07GCAIEMDA@glRects@ DB 'glRects', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08EOGPMADG@glRectiv@
CONST	SEGMENT
??_C@_08EOGPMADG@glRectiv@ DB 'glRectiv', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07NCCFLGOL@glRecti@
CONST	SEGMENT
??_C@_07NCCFLGOL@glRecti@ DB 'glRecti', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08EFDDIHAL@glRectfv@
CONST	SEGMENT
??_C@_08EFDDIHAL@glRectfv@ DB 'glRectfv', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07FFLNKKCE@glRectf@
CONST	SEGMENT
??_C@_07FFLNKKCE@glRectf@ DB 'glRectf', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08EGLHFDGF@glRectdv@
CONST	SEGMENT
??_C@_08EGLHFDGF@glRectdv@ DB 'glRectdv', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07GHILMIKG@glRectd@
CONST	SEGMENT
??_C@_07GHILMIKG@glRectd@ DB 'glRectd', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@NJGHOAAG@glRasterPos4sv@
CONST	SEGMENT
??_C@_0P@NJGHOAAG@glRasterPos4sv@ DB 'glRasterPos4sv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@INMAOOA@glRasterPos4s@
CONST	SEGMENT
??_C@_0O@INMAOOA@glRasterPos4s@ DB 'glRasterPos4s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MINGMGKA@glRasterPos4iv@
CONST	SEGMENT
??_C@_0P@MINGMGKA@glRasterPos4iv@ DB 'glRasterPos4iv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@LIPBPEDL@glRasterPos4i@
CONST	SEGMENT
??_C@_0O@LIPBPEDL@glRasterPos4i@ DB 'glRasterPos4i', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MDIKIBJN@glRasterPos4fv@
CONST	SEGMENT
??_C@_0P@MDIKIBJN@glRasterPos4fv@ DB 'glRasterPos4fv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@DPGJOIPE@glRasterPos4f@
CONST	SEGMENT
??_C@_0O@DPGJOIPE@glRasterPos4f@ DB 'glRasterPos4f', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MAAOFFPD@glRasterPos4dv@
CONST	SEGMENT
??_C@_0P@MAAOFFPD@glRasterPos4dv@ DB 'glRasterPos4dv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@NFPIKHG@glRasterPos4d@
CONST	SEGMENT
??_C@_0O@NFPIKHG@glRasterPos4d@ DB 'glRasterPos4d', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@EELANILP@glRasterPos3sv@
CONST	SEGMENT
??_C@_0P@EELANILP@glRasterPos3sv@ DB 'glRasterPos3sv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@NJDBIGF@glRasterPos3s@
CONST	SEGMENT
??_C@_0O@NJDBIGF@glRasterPos3s@ DB 'glRasterPos3s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@FFABPOBJ@glRasterPos3iv@
CONST	SEGMENT
??_C@_0P@FFABPOBJ@glRasterPos3iv@ DB 'glRasterPos3iv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@LNLOOCLO@glRasterPos3i@
CONST	SEGMENT
??_C@_0O@LNLOOCLO@glRasterPos3i@ DB 'glRasterPos3i', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@FOFNLJCE@glRasterPos3fv@
CONST	SEGMENT
??_C@_0P@FOFNLJCE@glRasterPos3fv@ DB 'glRasterPos3fv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@DKCGPOHB@glRasterPos3f@
CONST	SEGMENT
??_C@_0O@DKCGPOHB@glRasterPos3f@ DB 'glRasterPos3f', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@FNNJGNEK@glRasterPos3dv@
CONST	SEGMENT
??_C@_0P@FNNJGNEK@glRasterPos3dv@ DB 'glRasterPos3dv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@IBAJMPD@glRasterPos3d@
CONST	SEGMENT
??_C@_0O@IBAJMPD@glRasterPos3d@ DB 'glRasterPos3d', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@PMAMLPNK@glRasterPos2sv@
CONST	SEGMENT
??_C@_0P@PMAMLPNK@glRasterPos2sv@ DB 'glRasterPos2sv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@MFBHCFC@glRasterPos2s@
CONST	SEGMENT
??_C@_0O@MFBHCFC@glRasterPos2s@ DB 'glRasterPos2s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@ONLNJJHM@glRasterPos2iv@
CONST	SEGMENT
??_C@_0P@ONLNJJHM@glRasterPos2iv@ DB 'glRasterPos2iv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@LMHMIIIJ@glRasterPos2i@
CONST	SEGMENT
??_C@_0O@LMHMIIIJ@glRasterPos2i@ DB 'glRasterPos2i', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@OGOBNOEB@glRasterPos2fv@
CONST	SEGMENT
??_C@_0P@OGOBNOEB@glRasterPos2fv@ DB 'glRasterPos2fv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@DLOEJEEG@glRasterPos2f@
CONST	SEGMENT
??_C@_0O@DLOEJEEG@glRasterPos2f@ DB 'glRasterPos2f', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@OFGFAKCP@glRasterPos2dv@
CONST	SEGMENT
??_C@_0P@OFGFAKCP@glRasterPos2dv@ DB 'glRasterPos2dv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@JNCPGME@glRasterPos2d@
CONST	SEGMENT
??_C@_0O@JNCPGME@glRasterPos2d@ DB 'glRasterPos2d', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NHLFGDMD@glNormal3sv@
CONST	SEGMENT
??_C@_0M@NHLFGDMD@glNormal3sv@ DB 'glNormal3sv', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@BNHPJOI@glNormal3s@
CONST	SEGMENT
??_C@_0L@BNHPJOI@glNormal3s@ DB 'glNormal3s', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MGAEEFGF@glNormal3iv@
CONST	SEGMENT
??_C@_0M@MGAEEFGF@glNormal3iv@ DB 'glNormal3iv', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@LBPKADDD@glNormal3i@
CONST	SEGMENT
??_C@_0L@LBPKADDD@glNormal3i@ DB 'glNormal3i', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MNFIACFI@glNormal3fv@
CONST	SEGMENT
??_C@_0M@MNFIACFI@glNormal3fv@ DB 'glNormal3fv', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@DGGCBPPM@glNormal3f@
CONST	SEGMENT
??_C@_0L@DGGCBPPM@glNormal3f@ DB 'glNormal3f', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MONMNGDG@glNormal3dv@
CONST	SEGMENT
??_C@_0M@MONMNGDG@glNormal3dv@ DB 'glNormal3dv', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@EFEHNHO@glNormal3d@
CONST	SEGMENT
??_C@_0L@EFEHNHO@glNormal3d@ DB 'glNormal3d', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MKFBKKIE@glNormal3bv@
CONST	SEGMENT
??_C@_0M@MKFBKKIE@glNormal3bv@ DB 'glNormal3bv', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FCAONKPI@glNormal3b@
CONST	SEGMENT
??_C@_0L@FCAONKPI@glNormal3b@ DB 'glNormal3b', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09DLKMCBDF@glIndexsv@
CONST	SEGMENT
??_C@_09DLKMCBDF@glIndexsv@ DB 'glIndexsv', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08HLGHCJCJ@glIndexs@
CONST	SEGMENT
??_C@_08HLGHCJCJ@glIndexs@ DB 'glIndexs', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09CKBNAHJD@glIndexiv@
CONST	SEGMENT
??_C@_09CKBNAHJD@glIndexiv@ DB 'glIndexiv', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08MLEKNDPC@glIndexi@
CONST	SEGMENT
??_C@_08MLEKNDPC@glIndexi@ DB 'glIndexi', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09CBEBEAKO@glIndexfv@
CONST	SEGMENT
??_C@_09CBEBEAKO@glIndexfv@ DB 'glIndexfv', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08EMNCMPDN@glIndexf@
CONST	SEGMENT
??_C@_08EMNCMPDN@glIndexf@ DB 'glIndexf', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09CCMFJEMA@glIndexdv@
CONST	SEGMENT
??_C@_09CCMFJEMA@glIndexdv@ DB 'glIndexdv', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08HOOEKNLP@glIndexd@
CONST	SEGMENT
??_C@_08HOOEKNLP@glIndexd@ DB 'glIndexd', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05OIBMBLHE@glEnd@
CONST	SEGMENT
??_C@_05OIBMBLHE@glEnd@ DB 'glEnd', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MKDGIOMK@glEdgeFlagv@
CONST	SEGMENT
??_C@_0M@MKDGIOMK@glEdgeFlagv@ DB 'glEdgeFlagv', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@DFCKJEPI@glEdgeFlag@
CONST	SEGMENT
??_C@_0L@DFCKJEPI@glEdgeFlag@ DB 'glEdgeFlag', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@OPLLCJJN@glColor4usv@
CONST	SEGMENT
??_C@_0M@OPLLCJJN@glColor4usv@ DB 'glColor4usv', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@NHFPGDEK@glColor4us@
CONST	SEGMENT
??_C@_0L@NHFPGDEK@glColor4us@ DB 'glColor4us', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@POAKAPDL@glColor4uiv@
CONST	SEGMENT
??_C@_0M@POAKAPDL@glColor4uiv@ DB 'glColor4uiv', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GHHCJJJB@glColor4ui@
CONST	SEGMENT
??_C@_0L@GHHCJJJB@glColor4ui@ DB 'glColor4ui', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@PCFPOANK@glColor4ubv@
CONST	SEGMENT
??_C@_0M@PCFPOANK@glColor4ubv@ DB 'glColor4ubv', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@IEIGEAFK@glColor4ub@
CONST	SEGMENT
??_C@_0L@IEIGEAFK@glColor4ub@ DB 'glColor4ub', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@KOKFOLLN@glColor4sv@
CONST	SEGMENT
??_C@_0L@KOKFOLLN@glColor4sv@ DB 'glColor4sv', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09MNOHCDOB@glColor4s@
CONST	SEGMENT
??_C@_09MNOHCDOB@glColor4s@ DB 'glColor4s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@LPBEMNBL@glColor4iv@
CONST	SEGMENT
??_C@_0L@LPBEMNBL@glColor4iv@ DB 'glColor4iv', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09HNMKNJDK@glColor4i@
CONST	SEGMENT
??_C@_09HNMKNJDK@glColor4i@ DB 'glColor4i', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@LEEIIKCG@glColor4fv@
CONST	SEGMENT
??_C@_0L@LEEIIKCG@glColor4fv@ DB 'glColor4fv', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09PKFCMFPF@glColor4f@
CONST	SEGMENT
??_C@_09PKFCMFPF@glColor4f@ DB 'glColor4f', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@LHMMFOEI@glColor4dv@
CONST	SEGMENT
??_C@_0L@LHMMFOEI@glColor4dv@ DB 'glColor4dv', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09MIGEKHHH@glColor4d@
CONST	SEGMENT
??_C@_09MIGEKHHH@glColor4d@ DB 'glColor4d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@LDEBCCPK@glColor4bv@
CONST	SEGMENT
??_C@_0L@LDEBCCPK@glColor4bv@ DB 'glColor4bv', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09JODOAAPB@glColor4b@
CONST	SEGMENT
??_C@_09JODOAAPB@glColor4b@ DB 'glColor4b', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@FNJLPFIN@glColor3usv@
CONST	SEGMENT
??_C@_0M@FNJLPFIN@glColor3usv@ DB 'glColor3usv', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@EKIIFLPD@glColor3us@
CONST	SEGMENT
??_C@_0L@EKIIFLPD@glColor3us@ DB 'glColor3us', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@EMCKNDCL@glColor3uiv@
CONST	SEGMENT
??_C@_0M@EMCKNDCL@glColor3uiv@ DB 'glColor3uiv', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@PKKFKBCI@glColor3ui@
CONST	SEGMENT
??_C@_0L@PKKFKBCI@glColor3ui@ DB 'glColor3ui', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@EAHPDMMK@glColor3ubv@
CONST	SEGMENT
??_C@_0M@EAHPDMMK@glColor3ubv@ DB 'glColor3ubv', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@BJFBHIOD@glColor3ub@
CONST	SEGMENT
??_C@_0L@BJFBHIOD@glColor3ub@ DB 'glColor3ub', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@DDHCNDAE@glColor3sv@
CONST	SEGMENT
??_C@_0L@DDHCNDAE@glColor3sv@ DB 'glColor3sv', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09MIKIDFGE@glColor3s@
CONST	SEGMENT
??_C@_09MIKIDFGE@glColor3s@ DB 'glColor3s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@CCMDPFKC@glColor3iv@
CONST	SEGMENT
??_C@_0L@CCMDPFKC@glColor3iv@ DB 'glColor3iv', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09HIIFMPLP@glColor3i@
CONST	SEGMENT
??_C@_09HIIFMPLP@glColor3i@ DB 'glColor3i', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@CJJPLCJP@glColor3fv@
CONST	SEGMENT
??_C@_0L@CJJPLCJP@glColor3fv@ DB 'glColor3fv', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09PPBNNDHA@glColor3f@
CONST	SEGMENT
??_C@_09PPBNNDHA@glColor3f@ DB 'glColor3f', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@CKBLGGPB@glColor3dv@
CONST	SEGMENT
??_C@_0L@CKBLGGPB@glColor3dv@ DB 'glColor3dv', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09MNCLLBPC@glColor3d@
CONST	SEGMENT
??_C@_09MNCLLBPC@glColor3d@ DB 'glColor3d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@COJGBKED@glColor3bv@
CONST	SEGMENT
??_C@_0L@COJGBKED@glColor3bv@ DB 'glColor3bv', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09JLHBBGHE@glColor3b@
CONST	SEGMENT
??_C@_09JLHBBGHE@glColor3b@ DB 'glColor3b', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08PJOLDJDK@glBitmap@
CONST	SEGMENT
??_C@_08PJOLDJDK@glBitmap@ DB 'glBitmap', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07FCOIFMD@glBegin@
CONST	SEGMENT
??_C@_07FCOIFMD@glBegin@ DB 'glBegin', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@HDOJDFBA@glListBase@
CONST	SEGMENT
??_C@_0L@HDOJDFBA@glListBase@ DB 'glListBase', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@BNOFOEBP@glGenLists@
CONST	SEGMENT
??_C@_0L@BNOFOEBP@glGenLists@ DB 'glGenLists', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@KPJIJAFM@glDeleteLists@
CONST	SEGMENT
??_C@_0O@KPJIJAFM@glDeleteLists@ DB 'glDeleteLists', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@LFDBDICJ@glCallLists@
CONST	SEGMENT
??_C@_0M@LFDBDICJ@glCallLists@ DB 'glCallLists', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@CIPLDIDL@glCallList@
CONST	SEGMENT
??_C@_0L@CIPLDIDL@glCallList@ DB 'glCallList', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09HKEBCLHH@glEndList@
CONST	SEGMENT
??_C@_09HKEBCLHH@glEndList@ DB 'glEndList', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09KAGOBDOO@glNewList@
CONST	SEGMENT
??_C@_09KAGOBDOO@glNewList@ DB 'glNewList', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@KBLIPDFH@glViewport@
CONST	SEGMENT
??_C@_0L@KBLIPDFH@glViewport@ DB 'glViewport', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@PEBDIKOA@glDepthRange@
CONST	SEGMENT
??_C@_0N@PEBDIKOA@glDepthRange@ DB 'glDepthRange', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@INHMIHKC@glIsEnabled@
CONST	SEGMENT
??_C@_0M@INHMIHKC@glIsEnabled@ DB 'glIsEnabled', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@GLJHCPGI@glGetTexLevelParameteriv@
CONST	SEGMENT
??_C@_0BJ@GLJHCPGI@glGetTexLevelParameteriv@ DB 'glGetTexLevelParameteriv'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@GAMLGIFF@glGetTexLevelParameterfv@
CONST	SEGMENT
??_C@_0BJ@GAMLGIFF@glGetTexLevelParameterfv@ DB 'glGetTexLevelParameterfv'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@DGCNLNPP@glGetTexParameteriv@
CONST	SEGMENT
??_C@_0BE@DGCNLNPP@glGetTexParameteriv@ DB 'glGetTexParameteriv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@DNHBPKMC@glGetTexParameterfv@
CONST	SEGMENT
??_C@_0BE@DNHBPKMC@glGetTexParameterfv@ DB 'glGetTexParameterfv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@DOIIJLAD@glGetTexImage@
CONST	SEGMENT
??_C@_0O@DOIIJLAD@glGetTexImage@ DB 'glGetTexImage', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@OPOBFDCB@glGetString@
CONST	SEGMENT
??_C@_0M@OPOBFDCB@glGetString@ DB 'glGetString', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@DHHDCCLF@glGetIntegerv@
CONST	SEGMENT
??_C@_0O@DHHDCCLF@glGetIntegerv@ DB 'glGetIntegerv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CKCOBONE@glGetFloatv@
CONST	SEGMENT
??_C@_0M@CKCOBONE@glGetFloatv@ DB 'glGetFloatv', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FPKAMKHB@glGetError@
CONST	SEGMENT
??_C@_0L@FPKAMKHB@glGetError@ DB 'glGetError', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OFBMMCDH@glGetDoublev@
CONST	SEGMENT
??_C@_0N@OFBMMCDH@glGetDoublev@ DB 'glGetDoublev', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@NLMELLCJ@glGetBooleanv@
CONST	SEGMENT
??_C@_0O@NLMELLCJ@glGetBooleanv@ DB 'glGetBooleanv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CKFNNHOO@glReadPixels@
CONST	SEGMENT
??_C@_0N@CKFNNHOO@glReadPixels@ DB 'glReadPixels', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@HFKHBECK@glReadBuffer@
CONST	SEGMENT
??_C@_0N@HFKHBECK@glReadBuffer@ DB 'glReadBuffer', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@JCCIGLOF@glPixelStorei@
CONST	SEGMENT
??_C@_0O@JCCIGLOF@glPixelStorei@ DB 'glPixelStorei', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@BFLAHHCK@glPixelStoref@
CONST	SEGMENT
??_C@_0O@BFLAHHCK@glPixelStoref@ DB 'glPixelStoref', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NEJABAEP@glDepthFunc@
CONST	SEGMENT
??_C@_0M@NEJABAEP@glDepthFunc@ DB 'glDepthFunc', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@BILBNGF@glStencilOp@
CONST	SEGMENT
??_C@_0M@BILBNGF@glStencilOp@ DB 'glStencilOp', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@ENNLLOLN@glStencilFunc@
CONST	SEGMENT
??_C@_0O@ENNLLOLN@glStencilFunc@ DB 'glStencilFunc', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09GKGMNAKG@glLogicOp@
CONST	SEGMENT
??_C@_09GKGMNAKG@glLogicOp@ DB 'glLogicOp', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@PFBKOKOH@glBlendFunc@
CONST	SEGMENT
??_C@_0M@PFBKOKOH@glBlendFunc@ DB 'glBlendFunc', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07COFELLJA@glFlush@
CONST	SEGMENT
??_C@_07COFELLJA@glFlush@ DB 'glFlush', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08DFCPOKBK@glFinish@
CONST	SEGMENT
??_C@_08DFCPOKBK@glFinish@ DB 'glFinish', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08OOEHEKOP@glEnable@
CONST	SEGMENT
??_C@_08OOEHEKOP@glEnable@ DB 'glEnable', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09MHGMIMKN@glDisable@
CONST	SEGMENT
??_C@_09MHGMIMKN@glDisable@ DB 'glDisable', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@KABMFLLN@glDepthMask@
CONST	SEGMENT
??_C@_0M@KABMFLLN@glDepthMask@ DB 'glDepthMask', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DLGOAHPH@glColorMask@
CONST	SEGMENT
??_C@_0M@DLGOAHPH@glColorMask@ DB 'glColorMask', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@DJFHPFEP@glStencilMask@
CONST	SEGMENT
??_C@_0O@DJFHPFEP@glStencilMask@ DB 'glStencilMask', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LJIELNG@glClearDepth@
CONST	SEGMENT
??_C@_0N@LJIELNG@glClearDepth@ DB 'glClearDepth', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@KBLPBBFP@glClearStencil@
CONST	SEGMENT
??_C@_0P@KBLPBBFP@glClearStencil@ DB 'glClearStencil', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OGLMDNKC@glClearColor@
CONST	SEGMENT
??_C@_0N@OGLMDNKC@glClearColor@ DB 'glClearColor', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07IBAPPAHJ@glClear@
CONST	SEGMENT
??_C@_07IBAPPAHJ@glClear@ DB 'glClear', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@EKCLGPL@glDrawBuffer@
CONST	SEGMENT
??_C@_0N@EKCLGPL@glDrawBuffer@ DB 'glDrawBuffer', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JBIKHLCC@glTexImage2D@
CONST	SEGMENT
??_C@_0N@JBIKHLCC@glTexImage2D@ DB 'glTexImage2D', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JDMMMFHL@glTexImage1D@
CONST	SEGMENT
??_C@_0N@JDMMMFHL@glTexImage1D@ DB 'glTexImage1D', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@KPLJEAAI@glTexParameteriv@
CONST	SEGMENT
??_C@_0BB@KPLJEAAI@glTexParameteriv@ DB 'glTexParameteriv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@KDNJAKA@glTexParameteri@
CONST	SEGMENT
??_C@_0BA@KDNJAKA@glTexParameteri@ DB 'glTexParameteri', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@KEOFAHDF@glTexParameterfv@
CONST	SEGMENT
??_C@_0BB@KEOFAHDF@glTexParameterfv@ DB 'glTexParameterfv', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@INKFIMGP@glTexParameterf@
CONST	SEGMENT
??_C@_0BA@INKFIMGP@glTexParameterf@ DB 'glTexParameterf', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09ECGPAEPL@glScissor@
CONST	SEGMENT
??_C@_09ECGPAEPL@glScissor@ DB 'glScissor', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@DKMNBFMB@glPolygonMode@
CONST	SEGMENT
??_C@_0O@DKMNBFMB@glPolygonMode@ DB 'glPolygonMode', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@EEAPMMNM@glPointSize@
CONST	SEGMENT
??_C@_0M@EEAPMMNM@glPointSize@ DB 'glPointSize', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CFLGNFPG@glLineWidth@
CONST	SEGMENT
??_C@_0M@CFLGNFPG@glLineWidth@ DB 'glLineWidth', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06HEADGMBC@glHint@
CONST	SEGMENT
??_C@_06HEADGMBC@glHint@ DB 'glHint', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@ILBMDJDA@glFrontFace@
CONST	SEGMENT
??_C@_0M@ILBMDJDA@glFrontFace@ DB 'glFrontFace', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@BAPBLHME@glCullFace@
CONST	SEGMENT
??_C@_0L@BAPBLHME@glCullFace@ DB 'glCullFace', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@FFKMKEGM@wglGetProcAddress@
CONST	SEGMENT
??_C@_0BC@FFKMKEGM@wglGetProcAddress@ DB 'wglGetProcAddress', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1BK@LCODAJLO@?$AAo?$AAp?$AAe?$AAn?$AAg?$AAl?$AA3?$AA2?$AA?4?$AAd?$AAl?$AAl@
CONST	SEGMENT
??_C@_1BK@LCODAJLO@?$AAo?$AAp?$AAe?$AAn?$AAg?$AAl?$AA3?$AA2?$AA?4?$AAd?$AAl?$AAl@ DB 'o'
	DB	00H, 'p', 00H, 'e', 00H, 'n', 00H, 'g', 00H, 'l', 00H, '3', 00H
	DB	'2', 00H, '.', 00H, 'd', 00H, 'l', 00H, 'l', 00H, 00H, 00H ; `string'
CONST	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\Light\source\repos\Spacemonster\Spacemonster-code\glad\glad.c
;	COMDAT _find_coreGL
_TEXT	SEGMENT
tv166 = -284						; size = 4
tv162 = -284						; size = 4
tv158 = -284						; size = 4
tv154 = -284						; size = 4
tv150 = -284						; size = 4
tv146 = -284						; size = 4
tv142 = -284						; size = 4
tv138 = -284						; size = 4
tv134 = -284						; size = 4
tv130 = -284						; size = 4
tv94 = -284						; size = 4
tv90 = -284						; size = 4
_length$1 = -84						; size = 4
_prefixes$ = -72					; size = 16
_version$ = -48						; size = 4
_minor$ = -36						; size = 4
_major$ = -24						; size = 4
_i$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_find_coreGL PROC					; COMDAT

; 1764 : static void find_coreGL(void) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 1c 01 00
	00		 sub	 esp, 284		; 0000011cH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd e4 fe ff
	ff		 lea	 edi, DWORD PTR [ebp-284]
  00012	b9 47 00 00 00	 mov	 ecx, 71			; 00000047H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00023	33 c5		 xor	 eax, ebp
  00025	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00028	b9 00 00 00 00	 mov	 ecx, OFFSET __550F0BDD_glad@c
  0002d	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1765 : 
; 1766 :     /* Thank you @elmindreda
; 1767 :      * https://github.com/elmindreda/greg/blob/master/templates/greg.c.in#L176
; 1768 :      * https://github.com/glfw/glfw/blob/master/src/context.c#L36
; 1769 :      */
; 1770 :     int i, major, minor;
; 1771 : 
; 1772 :     const char* version;
; 1773 :     const char* prefixes[] = {

  00032	c7 45 b8 00 00
	00 00		 mov	 DWORD PTR _prefixes$[ebp], OFFSET ??_C@_0O@ENGHJHNB@OpenGL?5ES?9CM?5@
  00039	c7 45 bc 00 00
	00 00		 mov	 DWORD PTR _prefixes$[ebp+4], OFFSET ??_C@_0O@EMKFPNOG@OpenGL?5ES?9CL?5@
  00040	c7 45 c0 00 00
	00 00		 mov	 DWORD PTR _prefixes$[ebp+8], OFFSET ??_C@_0L@JLFHOCGA@OpenGL?5ES?5@
  00047	c7 45 c4 00 00
	00 00		 mov	 DWORD PTR _prefixes$[ebp+12], 0

; 1774 :         "OpenGL ES-CM ",
; 1775 :         "OpenGL ES-CL ",
; 1776 :         "OpenGL ES ",
; 1777 :         NULL
; 1778 :     };
; 1779 : 
; 1780 :     version = (const char*) glGetString(GL_VERSION);

  0004e	8b f4		 mov	 esi, esp
  00050	68 02 1f 00 00	 push	 7938			; 00001f02H
  00055	ff 15 00 00 00
	00		 call	 DWORD PTR _glad_glGetString
  0005b	3b f4		 cmp	 esi, esp
  0005d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00062	89 45 d0	 mov	 DWORD PTR _version$[ebp], eax

; 1781 :     if (!version) return;

  00065	83 7d d0 00	 cmp	 DWORD PTR _version$[ebp], 0
  00069	75 05		 jne	 SHORT $LN5@find_coreG
  0006b	e9 2e 03 00 00	 jmp	 $LN1@find_coreG
$LN5@find_coreG:

; 1782 : 
; 1783 :     for (i = 0;  prefixes[i];  i++) {

  00070	c7 45 f4 00 00
	00 00		 mov	 DWORD PTR _i$[ebp], 0
  00077	eb 09		 jmp	 SHORT $LN4@find_coreG
$LN2@find_coreG:
  00079	8b 45 f4	 mov	 eax, DWORD PTR _i$[ebp]
  0007c	83 c0 01	 add	 eax, 1
  0007f	89 45 f4	 mov	 DWORD PTR _i$[ebp], eax
$LN4@find_coreG:
  00082	8b 45 f4	 mov	 eax, DWORD PTR _i$[ebp]
  00085	83 7c 85 b8 00	 cmp	 DWORD PTR _prefixes$[ebp+eax*4], 0
  0008a	74 46		 je	 SHORT $LN3@find_coreG

; 1784 :         const size_t length = strlen(prefixes[i]);

  0008c	8b 45 f4	 mov	 eax, DWORD PTR _i$[ebp]
  0008f	8b 4c 85 b8	 mov	 ecx, DWORD PTR _prefixes$[ebp+eax*4]
  00093	51		 push	 ecx
  00094	e8 00 00 00 00	 call	 _strlen
  00099	83 c4 04	 add	 esp, 4
  0009c	89 45 ac	 mov	 DWORD PTR _length$1[ebp], eax

; 1785 :         if (strncmp(version, prefixes[i], length) == 0) {

  0009f	8b f4		 mov	 esi, esp
  000a1	8b 45 ac	 mov	 eax, DWORD PTR _length$1[ebp]
  000a4	50		 push	 eax
  000a5	8b 4d f4	 mov	 ecx, DWORD PTR _i$[ebp]
  000a8	8b 54 8d b8	 mov	 edx, DWORD PTR _prefixes$[ebp+ecx*4]
  000ac	52		 push	 edx
  000ad	8b 45 d0	 mov	 eax, DWORD PTR _version$[ebp]
  000b0	50		 push	 eax
  000b1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__strncmp
  000b7	83 c4 0c	 add	 esp, 12			; 0000000cH
  000ba	3b f4		 cmp	 esi, esp
  000bc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c1	85 c0		 test	 eax, eax
  000c3	75 0b		 jne	 SHORT $LN6@find_coreG

; 1786 :             version += length;

  000c5	8b 45 d0	 mov	 eax, DWORD PTR _version$[ebp]
  000c8	03 45 ac	 add	 eax, DWORD PTR _length$1[ebp]
  000cb	89 45 d0	 mov	 DWORD PTR _version$[ebp], eax

; 1787 :             break;

  000ce	eb 02		 jmp	 SHORT $LN3@find_coreG
$LN6@find_coreG:

; 1788 :         }
; 1789 :     }

  000d0	eb a7		 jmp	 SHORT $LN2@find_coreG
$LN3@find_coreG:

; 1790 : 
; 1791 : /* PR #18 */
; 1792 : #ifdef _MSC_VER
; 1793 :     sscanf_s(version, "%d.%d", &major, &minor);

  000d2	8d 45 dc	 lea	 eax, DWORD PTR _minor$[ebp]
  000d5	50		 push	 eax
  000d6	8d 4d e8	 lea	 ecx, DWORD PTR _major$[ebp]
  000d9	51		 push	 ecx
  000da	68 00 00 00 00	 push	 OFFSET ??_C@_05KBEOJPB@?$CFd?4?$CFd@
  000df	8b 55 d0	 mov	 edx, DWORD PTR _version$[ebp]
  000e2	52		 push	 edx
  000e3	e8 00 00 00 00	 call	 _sscanf_s
  000e8	83 c4 10	 add	 esp, 16			; 00000010H

; 1794 : #else
; 1795 :     sscanf(version, "%d.%d", &major, &minor);
; 1796 : #endif
; 1797 : 
; 1798 :     GLVersion.major = major; GLVersion.minor = minor;

  000eb	8b 45 e8	 mov	 eax, DWORD PTR _major$[ebp]
  000ee	a3 00 00 00 00	 mov	 DWORD PTR _GLVersion, eax
  000f3	8b 45 dc	 mov	 eax, DWORD PTR _minor$[ebp]
  000f6	a3 04 00 00 00	 mov	 DWORD PTR _GLVersion+4, eax

; 1799 :     max_loaded_major = major; max_loaded_minor = minor;

  000fb	8b 45 e8	 mov	 eax, DWORD PTR _major$[ebp]
  000fe	a3 00 00 00 00	 mov	 DWORD PTR _max_loaded_major, eax
  00103	8b 45 dc	 mov	 eax, DWORD PTR _minor$[ebp]
  00106	a3 00 00 00 00	 mov	 DWORD PTR _max_loaded_minor, eax

; 1800 : 	GLAD_GL_VERSION_1_0 = (major == 1 && minor >= 0) || major > 1;

  0010b	83 7d e8 01	 cmp	 DWORD PTR _major$[ebp], 1
  0010f	75 06		 jne	 SHORT $LN10@find_coreG
  00111	83 7d dc 00	 cmp	 DWORD PTR _minor$[ebp], 0
  00115	7d 12		 jge	 SHORT $LN11@find_coreG
$LN10@find_coreG:
  00117	83 7d e8 01	 cmp	 DWORD PTR _major$[ebp], 1
  0011b	7f 0c		 jg	 SHORT $LN11@find_coreG
  0011d	c7 85 e4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv90[ebp], 0
  00127	eb 0a		 jmp	 SHORT $LN12@find_coreG
$LN11@find_coreG:
  00129	c7 85 e4 fe ff
	ff 01 00 00 00	 mov	 DWORD PTR tv90[ebp], 1
$LN12@find_coreG:
  00133	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR tv90[ebp]
  00139	a3 00 00 00 00	 mov	 DWORD PTR _GLAD_GL_VERSION_1_0, eax

; 1801 : 	GLAD_GL_VERSION_1_1 = (major == 1 && minor >= 1) || major > 1;

  0013e	83 7d e8 01	 cmp	 DWORD PTR _major$[ebp], 1
  00142	75 06		 jne	 SHORT $LN13@find_coreG
  00144	83 7d dc 01	 cmp	 DWORD PTR _minor$[ebp], 1
  00148	7d 12		 jge	 SHORT $LN14@find_coreG
$LN13@find_coreG:
  0014a	83 7d e8 01	 cmp	 DWORD PTR _major$[ebp], 1
  0014e	7f 0c		 jg	 SHORT $LN14@find_coreG
  00150	c7 85 e4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv94[ebp], 0
  0015a	eb 0a		 jmp	 SHORT $LN15@find_coreG
$LN14@find_coreG:
  0015c	c7 85 e4 fe ff
	ff 01 00 00 00	 mov	 DWORD PTR tv94[ebp], 1
$LN15@find_coreG:
  00166	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR tv94[ebp]
  0016c	a3 00 00 00 00	 mov	 DWORD PTR _GLAD_GL_VERSION_1_1, eax

; 1802 : 	GLAD_GL_VERSION_1_2 = (major == 1 && minor >= 2) || major > 1;

  00171	83 7d e8 01	 cmp	 DWORD PTR _major$[ebp], 1
  00175	75 06		 jne	 SHORT $LN16@find_coreG
  00177	83 7d dc 02	 cmp	 DWORD PTR _minor$[ebp], 2
  0017b	7d 12		 jge	 SHORT $LN17@find_coreG
$LN16@find_coreG:
  0017d	83 7d e8 01	 cmp	 DWORD PTR _major$[ebp], 1
  00181	7f 0c		 jg	 SHORT $LN17@find_coreG
  00183	c7 85 e4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv130[ebp], 0
  0018d	eb 0a		 jmp	 SHORT $LN18@find_coreG
$LN17@find_coreG:
  0018f	c7 85 e4 fe ff
	ff 01 00 00 00	 mov	 DWORD PTR tv130[ebp], 1
$LN18@find_coreG:
  00199	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR tv130[ebp]
  0019f	a3 00 00 00 00	 mov	 DWORD PTR _GLAD_GL_VERSION_1_2, eax

; 1803 : 	GLAD_GL_VERSION_1_3 = (major == 1 && minor >= 3) || major > 1;

  001a4	83 7d e8 01	 cmp	 DWORD PTR _major$[ebp], 1
  001a8	75 06		 jne	 SHORT $LN19@find_coreG
  001aa	83 7d dc 03	 cmp	 DWORD PTR _minor$[ebp], 3
  001ae	7d 12		 jge	 SHORT $LN20@find_coreG
$LN19@find_coreG:
  001b0	83 7d e8 01	 cmp	 DWORD PTR _major$[ebp], 1
  001b4	7f 0c		 jg	 SHORT $LN20@find_coreG
  001b6	c7 85 e4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv134[ebp], 0
  001c0	eb 0a		 jmp	 SHORT $LN21@find_coreG
$LN20@find_coreG:
  001c2	c7 85 e4 fe ff
	ff 01 00 00 00	 mov	 DWORD PTR tv134[ebp], 1
$LN21@find_coreG:
  001cc	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR tv134[ebp]
  001d2	a3 00 00 00 00	 mov	 DWORD PTR _GLAD_GL_VERSION_1_3, eax

; 1804 : 	GLAD_GL_VERSION_1_4 = (major == 1 && minor >= 4) || major > 1;

  001d7	83 7d e8 01	 cmp	 DWORD PTR _major$[ebp], 1
  001db	75 06		 jne	 SHORT $LN22@find_coreG
  001dd	83 7d dc 04	 cmp	 DWORD PTR _minor$[ebp], 4
  001e1	7d 12		 jge	 SHORT $LN23@find_coreG
$LN22@find_coreG:
  001e3	83 7d e8 01	 cmp	 DWORD PTR _major$[ebp], 1
  001e7	7f 0c		 jg	 SHORT $LN23@find_coreG
  001e9	c7 85 e4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv138[ebp], 0
  001f3	eb 0a		 jmp	 SHORT $LN24@find_coreG
$LN23@find_coreG:
  001f5	c7 85 e4 fe ff
	ff 01 00 00 00	 mov	 DWORD PTR tv138[ebp], 1
$LN24@find_coreG:
  001ff	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR tv138[ebp]
  00205	a3 00 00 00 00	 mov	 DWORD PTR _GLAD_GL_VERSION_1_4, eax

; 1805 : 	GLAD_GL_VERSION_1_5 = (major == 1 && minor >= 5) || major > 1;

  0020a	83 7d e8 01	 cmp	 DWORD PTR _major$[ebp], 1
  0020e	75 06		 jne	 SHORT $LN25@find_coreG
  00210	83 7d dc 05	 cmp	 DWORD PTR _minor$[ebp], 5
  00214	7d 12		 jge	 SHORT $LN26@find_coreG
$LN25@find_coreG:
  00216	83 7d e8 01	 cmp	 DWORD PTR _major$[ebp], 1
  0021a	7f 0c		 jg	 SHORT $LN26@find_coreG
  0021c	c7 85 e4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv142[ebp], 0
  00226	eb 0a		 jmp	 SHORT $LN27@find_coreG
$LN26@find_coreG:
  00228	c7 85 e4 fe ff
	ff 01 00 00 00	 mov	 DWORD PTR tv142[ebp], 1
$LN27@find_coreG:
  00232	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR tv142[ebp]
  00238	a3 00 00 00 00	 mov	 DWORD PTR _GLAD_GL_VERSION_1_5, eax

; 1806 : 	GLAD_GL_VERSION_2_0 = (major == 2 && minor >= 0) || major > 2;

  0023d	83 7d e8 02	 cmp	 DWORD PTR _major$[ebp], 2
  00241	75 06		 jne	 SHORT $LN28@find_coreG
  00243	83 7d dc 00	 cmp	 DWORD PTR _minor$[ebp], 0
  00247	7d 12		 jge	 SHORT $LN29@find_coreG
$LN28@find_coreG:
  00249	83 7d e8 02	 cmp	 DWORD PTR _major$[ebp], 2
  0024d	7f 0c		 jg	 SHORT $LN29@find_coreG
  0024f	c7 85 e4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv146[ebp], 0
  00259	eb 0a		 jmp	 SHORT $LN30@find_coreG
$LN29@find_coreG:
  0025b	c7 85 e4 fe ff
	ff 01 00 00 00	 mov	 DWORD PTR tv146[ebp], 1
$LN30@find_coreG:
  00265	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR tv146[ebp]
  0026b	a3 00 00 00 00	 mov	 DWORD PTR _GLAD_GL_VERSION_2_0, eax

; 1807 : 	GLAD_GL_VERSION_2_1 = (major == 2 && minor >= 1) || major > 2;

  00270	83 7d e8 02	 cmp	 DWORD PTR _major$[ebp], 2
  00274	75 06		 jne	 SHORT $LN31@find_coreG
  00276	83 7d dc 01	 cmp	 DWORD PTR _minor$[ebp], 1
  0027a	7d 12		 jge	 SHORT $LN32@find_coreG
$LN31@find_coreG:
  0027c	83 7d e8 02	 cmp	 DWORD PTR _major$[ebp], 2
  00280	7f 0c		 jg	 SHORT $LN32@find_coreG
  00282	c7 85 e4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv150[ebp], 0
  0028c	eb 0a		 jmp	 SHORT $LN33@find_coreG
$LN32@find_coreG:
  0028e	c7 85 e4 fe ff
	ff 01 00 00 00	 mov	 DWORD PTR tv150[ebp], 1
$LN33@find_coreG:
  00298	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR tv150[ebp]
  0029e	a3 00 00 00 00	 mov	 DWORD PTR _GLAD_GL_VERSION_2_1, eax

; 1808 : 	GLAD_GL_VERSION_3_0 = (major == 3 && minor >= 0) || major > 3;

  002a3	83 7d e8 03	 cmp	 DWORD PTR _major$[ebp], 3
  002a7	75 06		 jne	 SHORT $LN34@find_coreG
  002a9	83 7d dc 00	 cmp	 DWORD PTR _minor$[ebp], 0
  002ad	7d 12		 jge	 SHORT $LN35@find_coreG
$LN34@find_coreG:
  002af	83 7d e8 03	 cmp	 DWORD PTR _major$[ebp], 3
  002b3	7f 0c		 jg	 SHORT $LN35@find_coreG
  002b5	c7 85 e4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv154[ebp], 0
  002bf	eb 0a		 jmp	 SHORT $LN36@find_coreG
$LN35@find_coreG:
  002c1	c7 85 e4 fe ff
	ff 01 00 00 00	 mov	 DWORD PTR tv154[ebp], 1
$LN36@find_coreG:
  002cb	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR tv154[ebp]
  002d1	a3 00 00 00 00	 mov	 DWORD PTR _GLAD_GL_VERSION_3_0, eax

; 1809 : 	GLAD_GL_VERSION_3_1 = (major == 3 && minor >= 1) || major > 3;

  002d6	83 7d e8 03	 cmp	 DWORD PTR _major$[ebp], 3
  002da	75 06		 jne	 SHORT $LN37@find_coreG
  002dc	83 7d dc 01	 cmp	 DWORD PTR _minor$[ebp], 1
  002e0	7d 12		 jge	 SHORT $LN38@find_coreG
$LN37@find_coreG:
  002e2	83 7d e8 03	 cmp	 DWORD PTR _major$[ebp], 3
  002e6	7f 0c		 jg	 SHORT $LN38@find_coreG
  002e8	c7 85 e4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv158[ebp], 0
  002f2	eb 0a		 jmp	 SHORT $LN39@find_coreG
$LN38@find_coreG:
  002f4	c7 85 e4 fe ff
	ff 01 00 00 00	 mov	 DWORD PTR tv158[ebp], 1
$LN39@find_coreG:
  002fe	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR tv158[ebp]
  00304	a3 00 00 00 00	 mov	 DWORD PTR _GLAD_GL_VERSION_3_1, eax

; 1810 : 	GLAD_GL_VERSION_3_2 = (major == 3 && minor >= 2) || major > 3;

  00309	83 7d e8 03	 cmp	 DWORD PTR _major$[ebp], 3
  0030d	75 06		 jne	 SHORT $LN40@find_coreG
  0030f	83 7d dc 02	 cmp	 DWORD PTR _minor$[ebp], 2
  00313	7d 12		 jge	 SHORT $LN41@find_coreG
$LN40@find_coreG:
  00315	83 7d e8 03	 cmp	 DWORD PTR _major$[ebp], 3
  00319	7f 0c		 jg	 SHORT $LN41@find_coreG
  0031b	c7 85 e4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv162[ebp], 0
  00325	eb 0a		 jmp	 SHORT $LN42@find_coreG
$LN41@find_coreG:
  00327	c7 85 e4 fe ff
	ff 01 00 00 00	 mov	 DWORD PTR tv162[ebp], 1
$LN42@find_coreG:
  00331	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR tv162[ebp]
  00337	a3 00 00 00 00	 mov	 DWORD PTR _GLAD_GL_VERSION_3_2, eax

; 1811 : 	GLAD_GL_VERSION_3_3 = (major == 3 && minor >= 3) || major > 3;

  0033c	83 7d e8 03	 cmp	 DWORD PTR _major$[ebp], 3
  00340	75 06		 jne	 SHORT $LN43@find_coreG
  00342	83 7d dc 03	 cmp	 DWORD PTR _minor$[ebp], 3
  00346	7d 12		 jge	 SHORT $LN44@find_coreG
$LN43@find_coreG:
  00348	83 7d e8 03	 cmp	 DWORD PTR _major$[ebp], 3
  0034c	7f 0c		 jg	 SHORT $LN44@find_coreG
  0034e	c7 85 e4 fe ff
	ff 00 00 00 00	 mov	 DWORD PTR tv166[ebp], 0
  00358	eb 0a		 jmp	 SHORT $LN45@find_coreG
$LN44@find_coreG:
  0035a	c7 85 e4 fe ff
	ff 01 00 00 00	 mov	 DWORD PTR tv166[ebp], 1
$LN45@find_coreG:
  00364	8b 85 e4 fe ff
	ff		 mov	 eax, DWORD PTR tv166[ebp]
  0036a	a3 00 00 00 00	 mov	 DWORD PTR _GLAD_GL_VERSION_3_3, eax

; 1812 : 	if (GLVersion.major > 3 || (GLVersion.major >= 3 && GLVersion.minor >= 3)) {

  0036f	83 3d 00 00 00
	00 03		 cmp	 DWORD PTR _GLVersion, 3
  00376	7f 12		 jg	 SHORT $LN8@find_coreG
  00378	83 3d 00 00 00
	00 03		 cmp	 DWORD PTR _GLVersion, 3
  0037f	7c 1d		 jl	 SHORT $LN1@find_coreG
  00381	83 3d 04 00 00
	00 03		 cmp	 DWORD PTR _GLVersion+4, 3
  00388	7c 14		 jl	 SHORT $LN1@find_coreG
$LN8@find_coreG:

; 1813 : 		max_loaded_major = 3;

  0038a	c7 05 00 00 00
	00 03 00 00 00	 mov	 DWORD PTR _max_loaded_major, 3

; 1814 : 		max_loaded_minor = 3;

  00394	c7 05 00 00 00
	00 03 00 00 00	 mov	 DWORD PTR _max_loaded_minor, 3
$LN1@find_coreG:

; 1815 : 	}
; 1816 : }

  0039e	52		 push	 edx
  0039f	8b cd		 mov	 ecx, ebp
  003a1	50		 push	 eax
  003a2	8d 15 00 00 00
	00		 lea	 edx, DWORD PTR $LN50@find_coreG
  003a8	e8 00 00 00 00	 call	 @_RTC_CheckStackVars@8
  003ad	58		 pop	 eax
  003ae	5a		 pop	 edx
  003af	5f		 pop	 edi
  003b0	5e		 pop	 esi
  003b1	5b		 pop	 ebx
  003b2	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  003b5	33 cd		 xor	 ecx, ebp
  003b7	e8 00 00 00 00	 call	 @__security_check_cookie@4
  003bc	81 c4 1c 01 00
	00		 add	 esp, 284		; 0000011cH
  003c2	3b ec		 cmp	 ebp, esp
  003c4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003c9	8b e5		 mov	 esp, ebp
  003cb	5d		 pop	 ebp
  003cc	c3		 ret	 0
  003cd	0f 1f 00	 npad	 3
$LN50@find_coreG:
  003d0	03 00 00 00	 DD	 3
  003d4	00 00 00 00	 DD	 $LN49@find_coreG
$LN49@find_coreG:
  003d8	e8 ff ff ff	 DD	 -24			; ffffffe8H
  003dc	04 00 00 00	 DD	 4
  003e0	00 00 00 00	 DD	 $LN46@find_coreG
  003e4	dc ff ff ff	 DD	 -36			; ffffffdcH
  003e8	04 00 00 00	 DD	 4
  003ec	00 00 00 00	 DD	 $LN47@find_coreG
  003f0	b8 ff ff ff	 DD	 -72			; ffffffb8H
  003f4	10 00 00 00	 DD	 16			; 00000010H
  003f8	00 00 00 00	 DD	 $LN48@find_coreG
$LN48@find_coreG:
  003fc	70		 DB	 112			; 00000070H
  003fd	72		 DB	 114			; 00000072H
  003fe	65		 DB	 101			; 00000065H
  003ff	66		 DB	 102			; 00000066H
  00400	69		 DB	 105			; 00000069H
  00401	78		 DB	 120			; 00000078H
  00402	65		 DB	 101			; 00000065H
  00403	73		 DB	 115			; 00000073H
  00404	00		 DB	 0
$LN47@find_coreG:
  00405	6d		 DB	 109			; 0000006dH
  00406	69		 DB	 105			; 00000069H
  00407	6e		 DB	 110			; 0000006eH
  00408	6f		 DB	 111			; 0000006fH
  00409	72		 DB	 114			; 00000072H
  0040a	00		 DB	 0
$LN46@find_coreG:
  0040b	6d		 DB	 109			; 0000006dH
  0040c	61		 DB	 97			; 00000061H
  0040d	6a		 DB	 106			; 0000006aH
  0040e	6f		 DB	 111			; 0000006fH
  0040f	72		 DB	 114			; 00000072H
  00410	00		 DB	 0
_find_coreGL ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\Light\source\repos\Spacemonster\Spacemonster-code\glad\glad.c
;	COMDAT _find_extensionsGL
_TEXT	SEGMENT
_find_extensionsGL PROC					; COMDAT

; 1757 : static int find_extensionsGL(void) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET __550F0BDD_glad@c
  00023	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1758 : 	if (!get_exts()) return 0;

  00028	e8 00 00 00 00	 call	 _get_exts
  0002d	85 c0		 test	 eax, eax
  0002f	75 04		 jne	 SHORT $LN2@find_exten
  00031	33 c0		 xor	 eax, eax
  00033	eb 0a		 jmp	 SHORT $LN1@find_exten
$LN2@find_exten:

; 1759 : 	(void)&has_ext;
; 1760 : 	free_exts();

  00035	e8 00 00 00 00	 call	 _free_exts

; 1761 : 	return 1;

  0003a	b8 01 00 00 00	 mov	 eax, 1
$LN1@find_exten:

; 1762 : }

  0003f	5f		 pop	 edi
  00040	5e		 pop	 esi
  00041	5b		 pop	 ebx
  00042	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00048	3b ec		 cmp	 ebp, esp
  0004a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004f	8b e5		 mov	 esp, ebp
  00051	5d		 pop	 ebp
  00052	c3		 ret	 0
_find_extensionsGL ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\Light\source\repos\Spacemonster\Spacemonster-code\glad\glad.c
;	COMDAT _load_GL_VERSION_3_3
_TEXT	SEGMENT
_load$ = 8						; size = 4
_load_GL_VERSION_3_3 PROC				; COMDAT

; 1696 : static void load_GL_VERSION_3_3(GLADloadproc load) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET __550F0BDD_glad@c
  00023	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1697 : 	if(!GLAD_GL_VERSION_3_3) return;

  00028	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _GLAD_GL_VERSION_3_3, 0
  0002f	75 05		 jne	 SHORT $LN2@load_GL_VE
  00031	e9 aa 05 00 00	 jmp	 $LN1@load_GL_VE
$LN2@load_GL_VE:

; 1698 : 	glad_glBindFragDataLocationIndexed = (PFNGLBINDFRAGDATALOCATIONINDEXEDPROC)load("glBindFragDataLocationIndexed");

  00036	8b f4		 mov	 esi, esp
  00038	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@POJBGCGG@glBindFragDataLocationIndexed@
  0003d	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00040	83 c4 04	 add	 esp, 4
  00043	3b f4		 cmp	 esi, esp
  00045	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004a	a3 00 00 00 00	 mov	 DWORD PTR _glad_glBindFragDataLocationIndexed, eax

; 1699 : 	glad_glGetFragDataIndex = (PFNGLGETFRAGDATAINDEXPROC)load("glGetFragDataIndex");

  0004f	8b f4		 mov	 esi, esp
  00051	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@COCJFEOH@glGetFragDataIndex@
  00056	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00059	83 c4 04	 add	 esp, 4
  0005c	3b f4		 cmp	 esi, esp
  0005e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00063	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetFragDataIndex, eax

; 1700 : 	glad_glGenSamplers = (PFNGLGENSAMPLERSPROC)load("glGenSamplers");

  00068	8b f4		 mov	 esi, esp
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_0O@EMMLGGLG@glGenSamplers@
  0006f	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00072	83 c4 04	 add	 esp, 4
  00075	3b f4		 cmp	 esi, esp
  00077	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007c	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGenSamplers, eax

; 1701 : 	glad_glDeleteSamplers = (PFNGLDELETESAMPLERSPROC)load("glDeleteSamplers");

  00081	8b f4		 mov	 esi, esp
  00083	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@FLPAOEOO@glDeleteSamplers@
  00088	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0008b	83 c4 04	 add	 esp, 4
  0008e	3b f4		 cmp	 esi, esp
  00090	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00095	a3 00 00 00 00	 mov	 DWORD PTR _glad_glDeleteSamplers, eax

; 1702 : 	glad_glIsSampler = (PFNGLISSAMPLERPROC)load("glIsSampler");

  0009a	8b f4		 mov	 esi, esp
  0009c	68 00 00 00 00	 push	 OFFSET ??_C@_0M@LAJKHOKJ@glIsSampler@
  000a1	ff 55 08	 call	 DWORD PTR _load$[ebp]
  000a4	83 c4 04	 add	 esp, 4
  000a7	3b f4		 cmp	 esi, esp
  000a9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ae	a3 00 00 00 00	 mov	 DWORD PTR _glad_glIsSampler, eax

; 1703 : 	glad_glBindSampler = (PFNGLBINDSAMPLERPROC)load("glBindSampler");

  000b3	8b f4		 mov	 esi, esp
  000b5	68 00 00 00 00	 push	 OFFSET ??_C@_0O@PDEILAPG@glBindSampler@
  000ba	ff 55 08	 call	 DWORD PTR _load$[ebp]
  000bd	83 c4 04	 add	 esp, 4
  000c0	3b f4		 cmp	 esi, esp
  000c2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c7	a3 00 00 00 00	 mov	 DWORD PTR _glad_glBindSampler, eax

; 1704 : 	glad_glSamplerParameteri = (PFNGLSAMPLERPARAMETERIPROC)load("glSamplerParameteri");

  000cc	8b f4		 mov	 esi, esp
  000ce	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@KBCBMPJO@glSamplerParameteri@
  000d3	ff 55 08	 call	 DWORD PTR _load$[ebp]
  000d6	83 c4 04	 add	 esp, 4
  000d9	3b f4		 cmp	 esi, esp
  000db	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e0	a3 00 00 00 00	 mov	 DWORD PTR _glad_glSamplerParameteri, eax

; 1705 : 	glad_glSamplerParameteriv = (PFNGLSAMPLERPARAMETERIVPROC)load("glSamplerParameteriv");

  000e5	8b f4		 mov	 esi, esp
  000e7	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@GOHDEBPM@glSamplerParameteriv@
  000ec	ff 55 08	 call	 DWORD PTR _load$[ebp]
  000ef	83 c4 04	 add	 esp, 4
  000f2	3b f4		 cmp	 esi, esp
  000f4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f9	a3 00 00 00 00	 mov	 DWORD PTR _glad_glSamplerParameteriv, eax

; 1706 : 	glad_glSamplerParameterf = (PFNGLSAMPLERPARAMETERFPROC)load("glSamplerParameterf");

  000fe	8b f4		 mov	 esi, esp
  00100	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@CGLJNDFB@glSamplerParameterf@
  00105	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00108	83 c4 04	 add	 esp, 4
  0010b	3b f4		 cmp	 esi, esp
  0010d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00112	a3 00 00 00 00	 mov	 DWORD PTR _glad_glSamplerParameterf, eax

; 1707 : 	glad_glSamplerParameterfv = (PFNGLSAMPLERPARAMETERFVPROC)load("glSamplerParameterfv");

  00117	8b f4		 mov	 esi, esp
  00119	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@GFCPAGMB@glSamplerParameterfv@
  0011e	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00121	83 c4 04	 add	 esp, 4
  00124	3b f4		 cmp	 esi, esp
  00126	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0012b	a3 00 00 00 00	 mov	 DWORD PTR _glad_glSamplerParameterfv, eax

; 1708 : 	glad_glSamplerParameterIiv = (PFNGLSAMPLERPARAMETERIIVPROC)load("glSamplerParameterIiv");

  00130	8b f4		 mov	 esi, esp
  00132	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@HKEIFIHF@glSamplerParameterIiv@
  00137	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0013a	83 c4 04	 add	 esp, 4
  0013d	3b f4		 cmp	 esi, esp
  0013f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00144	a3 00 00 00 00	 mov	 DWORD PTR _glad_glSamplerParameterIiv, eax

; 1709 : 	glad_glSamplerParameterIuiv = (PFNGLSAMPLERPARAMETERIUIVPROC)load("glSamplerParameterIuiv");

  00149	8b f4		 mov	 esi, esp
  0014b	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@FEMFBPPB@glSamplerParameterIuiv@
  00150	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00153	83 c4 04	 add	 esp, 4
  00156	3b f4		 cmp	 esi, esp
  00158	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0015d	a3 00 00 00 00	 mov	 DWORD PTR _glad_glSamplerParameterIuiv, eax

; 1710 : 	glad_glGetSamplerParameteriv = (PFNGLGETSAMPLERPARAMETERIVPROC)load("glGetSamplerParameteriv");

  00162	8b f4		 mov	 esi, esp
  00164	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@FECAOLJP@glGetSamplerParameteriv@
  00169	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0016c	83 c4 04	 add	 esp, 4
  0016f	3b f4		 cmp	 esi, esp
  00171	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00176	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetSamplerParameteriv, eax

; 1711 : 	glad_glGetSamplerParameterIiv = (PFNGLGETSAMPLERPARAMETERIIVPROC)load("glGetSamplerParameterIiv");

  0017b	8b f4		 mov	 esi, esp
  0017d	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@KOMJDLDN@glGetSamplerParameterIiv@
  00182	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00185	83 c4 04	 add	 esp, 4
  00188	3b f4		 cmp	 esi, esp
  0018a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0018f	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetSamplerParameterIiv, eax

; 1712 : 	glad_glGetSamplerParameterfv = (PFNGLGETSAMPLERPARAMETERFVPROC)load("glGetSamplerParameterfv");

  00194	8b f4		 mov	 esi, esp
  00196	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@FPHMKMKC@glGetSamplerParameterfv@
  0019b	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0019e	83 c4 04	 add	 esp, 4
  001a1	3b f4		 cmp	 esi, esp
  001a3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001a8	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetSamplerParameterfv, eax

; 1713 : 	glad_glGetSamplerParameterIuiv = (PFNGLGETSAMPLERPARAMETERIUIVPROC)load("glGetSamplerParameterIuiv");

  001ad	8b f4		 mov	 esi, esp
  001af	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@CMBGFHDA@glGetSamplerParameterIuiv@
  001b4	ff 55 08	 call	 DWORD PTR _load$[ebp]
  001b7	83 c4 04	 add	 esp, 4
  001ba	3b f4		 cmp	 esi, esp
  001bc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001c1	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetSamplerParameterIuiv, eax

; 1714 : 	glad_glQueryCounter = (PFNGLQUERYCOUNTERPROC)load("glQueryCounter");

  001c6	8b f4		 mov	 esi, esp
  001c8	68 00 00 00 00	 push	 OFFSET ??_C@_0P@KALICDIM@glQueryCounter@
  001cd	ff 55 08	 call	 DWORD PTR _load$[ebp]
  001d0	83 c4 04	 add	 esp, 4
  001d3	3b f4		 cmp	 esi, esp
  001d5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001da	a3 00 00 00 00	 mov	 DWORD PTR _glad_glQueryCounter, eax

; 1715 : 	glad_glGetQueryObjecti64v = (PFNGLGETQUERYOBJECTI64VPROC)load("glGetQueryObjecti64v");

  001df	8b f4		 mov	 esi, esp
  001e1	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@JDAPDEPE@glGetQueryObjecti64v@
  001e6	ff 55 08	 call	 DWORD PTR _load$[ebp]
  001e9	83 c4 04	 add	 esp, 4
  001ec	3b f4		 cmp	 esi, esp
  001ee	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001f3	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetQueryObjecti64v, eax

; 1716 : 	glad_glGetQueryObjectui64v = (PFNGLGETQUERYOBJECTUI64VPROC)load("glGetQueryObjectui64v");

  001f8	8b f4		 mov	 esi, esp
  001fa	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@NEGGOMJO@glGetQueryObjectui64v@
  001ff	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00202	83 c4 04	 add	 esp, 4
  00205	3b f4		 cmp	 esi, esp
  00207	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0020c	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetQueryObjectui64v, eax

; 1717 : 	glad_glVertexAttribDivisor = (PFNGLVERTEXATTRIBDIVISORPROC)load("glVertexAttribDivisor");

  00211	8b f4		 mov	 esi, esp
  00213	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@NEBMAEHM@glVertexAttribDivisor@
  00218	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0021b	83 c4 04	 add	 esp, 4
  0021e	3b f4		 cmp	 esi, esp
  00220	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00225	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertexAttribDivisor, eax

; 1718 : 	glad_glVertexAttribP1ui = (PFNGLVERTEXATTRIBP1UIPROC)load("glVertexAttribP1ui");

  0022a	8b f4		 mov	 esi, esp
  0022c	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FLACCOEN@glVertexAttribP1ui@
  00231	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00234	83 c4 04	 add	 esp, 4
  00237	3b f4		 cmp	 esi, esp
  00239	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0023e	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertexAttribP1ui, eax

; 1719 : 	glad_glVertexAttribP1uiv = (PFNGLVERTEXATTRIBP1UIVPROC)load("glVertexAttribP1uiv");

  00243	8b f4		 mov	 esi, esp
  00245	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@HBFDOBHD@glVertexAttribP1uiv@
  0024a	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0024d	83 c4 04	 add	 esp, 4
  00250	3b f4		 cmp	 esi, esp
  00252	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00257	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertexAttribP1uiv, eax

; 1720 : 	glad_glVertexAttribP2ui = (PFNGLVERTEXATTRIBP2UIPROC)load("glVertexAttribP2ui");

  0025c	8b f4		 mov	 esi, esp
  0025e	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@EJLHIBKD@glVertexAttribP2ui@
  00263	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00266	83 c4 04	 add	 esp, 4
  00269	3b f4		 cmp	 esi, esp
  0026b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00270	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertexAttribP2ui, eax

; 1721 : 	glad_glVertexAttribP2uiv = (PFNGLVERTEXATTRIBP2UIVPROC)load("glVertexAttribP2uiv");

  00275	8b f4		 mov	 esi, esp
  00277	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@DGPDJLKD@glVertexAttribP2uiv@
  0027c	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0027f	83 c4 04	 add	 esp, 4
  00282	3b f4		 cmp	 esi, esp
  00284	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00289	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertexAttribP2uiv, eax

; 1722 : 	glad_glVertexAttribP3ui = (PFNGLVERTEXATTRIBP3UIPROC)load("glVertexAttribP3ui");

  0028e	8b f4		 mov	 esi, esp
  00290	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@PBALOGMG@glVertexAttribP3ui@
  00295	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00298	83 c4 04	 add	 esp, 4
  0029b	3b f4		 cmp	 esi, esp
  0029d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002a2	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertexAttribP3ui, eax

; 1723 : 	glad_glVertexAttribP3uiv = (PFNGLVERTEXATTRIBP3UIVPROC)load("glVertexAttribP3uiv");

  002a7	8b f4		 mov	 esi, esp
  002a9	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@LJDLCBD@glVertexAttribP3uiv@
  002ae	ff 55 08	 call	 DWORD PTR _load$[ebp]
  002b1	83 c4 04	 add	 esp, 4
  002b4	3b f4		 cmp	 esi, esp
  002b6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002bb	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertexAttribP3uiv, eax

; 1724 : 	glad_glVertexAttribP4ui = (PFNGLVERTEXATTRIBP4UIPROC)load("glVertexAttribP4ui");

  002c0	8b f4		 mov	 esi, esp
  002c2	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@GMNMNOHP@glVertexAttribP4ui@
  002c7	ff 55 08	 call	 DWORD PTR _load$[ebp]
  002ca	83 c4 04	 add	 esp, 4
  002cd	3b f4		 cmp	 esi, esp
  002cf	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002d4	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertexAttribP4ui, eax

; 1725 : 	glad_glVertexAttribP4uiv = (PFNGLVERTEXATTRIBP4UIVPROC)load("glVertexAttribP4uiv");

  002d9	8b f4		 mov	 esi, esp
  002db	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@LJLDGOAD@glVertexAttribP4uiv@
  002e0	ff 55 08	 call	 DWORD PTR _load$[ebp]
  002e3	83 c4 04	 add	 esp, 4
  002e6	3b f4		 cmp	 esi, esp
  002e8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002ed	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertexAttribP4uiv, eax

; 1726 : 	glad_glVertexP2ui = (PFNGLVERTEXP2UIPROC)load("glVertexP2ui");

  002f2	8b f4		 mov	 esi, esp
  002f4	68 00 00 00 00	 push	 OFFSET ??_C@_0N@EFBCIBMC@glVertexP2ui@
  002f9	ff 55 08	 call	 DWORD PTR _load$[ebp]
  002fc	83 c4 04	 add	 esp, 4
  002ff	3b f4		 cmp	 esi, esp
  00301	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00306	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertexP2ui, eax

; 1727 : 	glad_glVertexP2uiv = (PFNGLVERTEXP2UIVPROC)load("glVertexP2uiv");

  0030b	8b f4		 mov	 esi, esp
  0030d	68 00 00 00 00	 push	 OFFSET ??_C@_0O@MEKGPGN@glVertexP2uiv@
  00312	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00315	83 c4 04	 add	 esp, 4
  00318	3b f4		 cmp	 esi, esp
  0031a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0031f	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertexP2uiv, eax

; 1728 : 	glad_glVertexP3ui = (PFNGLVERTEXP3UIPROC)load("glVertexP3ui");

  00324	8b f4		 mov	 esi, esp
  00326	68 00 00 00 00	 push	 OFFSET ??_C@_0N@PNKOOGKH@glVertexP3ui@
  0032b	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0032e	83 c4 04	 add	 esp, 4
  00331	3b f4		 cmp	 esi, esp
  00333	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00338	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertexP3ui, eax

; 1729 : 	glad_glVertexP3uiv = (PFNGLVERTEXP3UIVPROC)load("glVertexP3uiv");

  0033d	8b f4		 mov	 esi, esp
  0033f	68 00 00 00 00	 push	 OFFSET ??_C@_0O@DBCKEGNN@glVertexP3uiv@
  00344	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00347	83 c4 04	 add	 esp, 4
  0034a	3b f4		 cmp	 esi, esp
  0034c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00351	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertexP3uiv, eax

; 1730 : 	glad_glVertexP4ui = (PFNGLVERTEXP4UIPROC)load("glVertexP4ui");

  00356	8b f4		 mov	 esi, esp
  00358	68 00 00 00 00	 push	 OFFSET ??_C@_0N@GAHJNOBO@glVertexP4ui@
  0035d	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00360	83 c4 04	 add	 esp, 4
  00363	3b f4		 cmp	 esi, esp
  00365	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0036a	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertexP4ui, eax

; 1731 : 	glad_glVertexP4uiv = (PFNGLVERTEXP4UIVPROC)load("glVertexP4uiv");

  0036f	8b f4		 mov	 esi, esp
  00371	68 00 00 00 00	 push	 OFFSET ??_C@_0O@IDAKJKMN@glVertexP4uiv@
  00376	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00379	83 c4 04	 add	 esp, 4
  0037c	3b f4		 cmp	 esi, esp
  0037e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00383	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertexP4uiv, eax

; 1732 : 	glad_glTexCoordP1ui = (PFNGLTEXCOORDP1UIPROC)load("glTexCoordP1ui");

  00388	8b f4		 mov	 esi, esp
  0038a	68 00 00 00 00	 push	 OFFSET ??_C@_0P@OLJHLLHJ@glTexCoordP1ui@
  0038f	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00392	83 c4 04	 add	 esp, 4
  00395	3b f4		 cmp	 esi, esp
  00397	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0039c	a3 00 00 00 00	 mov	 DWORD PTR _glad_glTexCoordP1ui, eax

; 1733 : 	glad_glTexCoordP1uiv = (PFNGLTEXCOORDP1UIVPROC)load("glTexCoordP1uiv");

  003a1	8b f4		 mov	 esi, esp
  003a3	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FAFHIAFD@glTexCoordP1uiv@
  003a8	ff 55 08	 call	 DWORD PTR _load$[ebp]
  003ab	83 c4 04	 add	 esp, 4
  003ae	3b f4		 cmp	 esi, esp
  003b0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003b5	a3 00 00 00 00	 mov	 DWORD PTR _glad_glTexCoordP1uiv, eax

; 1734 : 	glad_glTexCoordP2ui = (PFNGLTEXCOORDP2UIPROC)load("glTexCoordP2ui");

  003ba	8b f4		 mov	 esi, esp
  003bc	68 00 00 00 00	 push	 OFFSET ??_C@_0P@PJCCBEJH@glTexCoordP2ui@
  003c1	ff 55 08	 call	 DWORD PTR _load$[ebp]
  003c4	83 c4 04	 add	 esp, 4
  003c7	3b f4		 cmp	 esi, esp
  003c9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003ce	a3 00 00 00 00	 mov	 DWORD PTR _glad_glTexCoordP2ui, eax

; 1735 : 	glad_glTexCoordP2uiv = (PFNGLTEXCOORDP2UIVPROC)load("glTexCoordP2uiv");

  003d3	8b f4		 mov	 esi, esp
  003d5	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@BHPHPKID@glTexCoordP2uiv@
  003da	ff 55 08	 call	 DWORD PTR _load$[ebp]
  003dd	83 c4 04	 add	 esp, 4
  003e0	3b f4		 cmp	 esi, esp
  003e2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003e7	a3 00 00 00 00	 mov	 DWORD PTR _glad_glTexCoordP2uiv, eax

; 1736 : 	glad_glTexCoordP3ui = (PFNGLTEXCOORDP3UIPROC)load("glTexCoordP3ui");

  003ec	8b f4		 mov	 esi, esp
  003ee	68 00 00 00 00	 push	 OFFSET ??_C@_0P@EBJOHDPC@glTexCoordP3ui@
  003f3	ff 55 08	 call	 DWORD PTR _load$[ebp]
  003f6	83 c4 04	 add	 esp, 4
  003f9	3b f4		 cmp	 esi, esp
  003fb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00400	a3 00 00 00 00	 mov	 DWORD PTR _glad_glTexCoordP3ui, eax

; 1737 : 	glad_glTexCoordP3uiv = (PFNGLTEXCOORDP3UIVPROC)load("glTexCoordP3uiv");

  00405	8b f4		 mov	 esi, esp
  00407	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@CKJHNDDD@glTexCoordP3uiv@
  0040c	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0040f	83 c4 04	 add	 esp, 4
  00412	3b f4		 cmp	 esi, esp
  00414	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00419	a3 00 00 00 00	 mov	 DWORD PTR _glad_glTexCoordP3uiv, eax

; 1738 : 	glad_glTexCoordP4ui = (PFNGLTEXCOORDP4UIPROC)load("glTexCoordP4ui");

  0041e	8b f4		 mov	 esi, esp
  00420	68 00 00 00 00	 push	 OFFSET ??_C@_0P@NMEJELEL@glTexCoordP4ui@
  00425	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00428	83 c4 04	 add	 esp, 4
  0042b	3b f4		 cmp	 esi, esp
  0042d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00432	a3 00 00 00 00	 mov	 DWORD PTR _glad_glTexCoordP4ui, eax

; 1739 : 	glad_glTexCoordP4uiv = (PFNGLTEXCOORDP4UIVPROC)load("glTexCoordP4uiv");

  00437	8b f4		 mov	 esi, esp
  00439	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@JILHAPCD@glTexCoordP4uiv@
  0043e	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00441	83 c4 04	 add	 esp, 4
  00444	3b f4		 cmp	 esi, esp
  00446	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0044b	a3 00 00 00 00	 mov	 DWORD PTR _glad_glTexCoordP4uiv, eax

; 1740 : 	glad_glMultiTexCoordP1ui = (PFNGLMULTITEXCOORDP1UIPROC)load("glMultiTexCoordP1ui");

  00450	8b f4		 mov	 esi, esp
  00452	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@OAHHKHKG@glMultiTexCoordP1ui@
  00457	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0045a	83 c4 04	 add	 esp, 4
  0045d	3b f4		 cmp	 esi, esp
  0045f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00464	a3 00 00 00 00	 mov	 DWORD PTR _glad_glMultiTexCoordP1ui, eax

; 1741 : 	glad_glMultiTexCoordP1uiv = (PFNGLMULTITEXCOORDP1UIVPROC)load("glMultiTexCoordP1uiv");

  00469	8b f4		 mov	 esi, esp
  0046b	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@EGDAKPAK@glMultiTexCoordP1uiv@
  00470	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00473	83 c4 04	 add	 esp, 4
  00476	3b f4		 cmp	 esi, esp
  00478	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0047d	a3 00 00 00 00	 mov	 DWORD PTR _glad_glMultiTexCoordP1uiv, eax

; 1742 : 	glad_glMultiTexCoordP2ui = (PFNGLMULTITEXCOORDP2UIPROC)load("glMultiTexCoordP2ui");

  00482	8b f4		 mov	 esi, esp
  00484	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@PCMCAIEI@glMultiTexCoordP2ui@
  00489	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0048c	83 c4 04	 add	 esp, 4
  0048f	3b f4		 cmp	 esi, esp
  00491	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00496	a3 00 00 00 00	 mov	 DWORD PTR _glad_glMultiTexCoordP2ui, eax

; 1743 : 	glad_glMultiTexCoordP2uiv = (PFNGLMULTITEXCOORDP2UIVPROC)load("glMultiTexCoordP2uiv");

  0049b	8b f4		 mov	 esi, esp
  0049d	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@BJANFNK@glMultiTexCoordP2uiv@
  004a2	ff 55 08	 call	 DWORD PTR _load$[ebp]
  004a5	83 c4 04	 add	 esp, 4
  004a8	3b f4		 cmp	 esi, esp
  004aa	e8 00 00 00 00	 call	 __RTC_CheckEsp
  004af	a3 00 00 00 00	 mov	 DWORD PTR _glad_glMultiTexCoordP2uiv, eax

; 1744 : 	glad_glMultiTexCoordP3ui = (PFNGLMULTITEXCOORDP3UIPROC)load("glMultiTexCoordP3ui");

  004b4	8b f4		 mov	 esi, esp
  004b6	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@EKHOGPCN@glMultiTexCoordP3ui@
  004bb	ff 55 08	 call	 DWORD PTR _load$[ebp]
  004be	83 c4 04	 add	 esp, 4
  004c1	3b f4		 cmp	 esi, esp
  004c3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  004c8	a3 00 00 00 00	 mov	 DWORD PTR _glad_glMultiTexCoordP3ui, eax

; 1745 : 	glad_glMultiTexCoordP3uiv = (PFNGLMULTITEXCOORDP3UIVPROC)load("glMultiTexCoordP3uiv");

  004cd	8b f4		 mov	 esi, esp
  004cf	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@DMPAPMGK@glMultiTexCoordP3uiv@
  004d4	ff 55 08	 call	 DWORD PTR _load$[ebp]
  004d7	83 c4 04	 add	 esp, 4
  004da	3b f4		 cmp	 esi, esp
  004dc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  004e1	a3 00 00 00 00	 mov	 DWORD PTR _glad_glMultiTexCoordP3uiv, eax

; 1746 : 	glad_glMultiTexCoordP4ui = (PFNGLMULTITEXCOORDP4UIPROC)load("glMultiTexCoordP4ui");

  004e6	8b f4		 mov	 esi, esp
  004e8	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@NHKJFHJE@glMultiTexCoordP4ui@
  004ed	ff 55 08	 call	 DWORD PTR _load$[ebp]
  004f0	83 c4 04	 add	 esp, 4
  004f3	3b f4		 cmp	 esi, esp
  004f5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  004fa	a3 00 00 00 00	 mov	 DWORD PTR _glad_glMultiTexCoordP4ui, eax

; 1747 : 	glad_glMultiTexCoordP4uiv = (PFNGLMULTITEXCOORDP4UIVPROC)load("glMultiTexCoordP4uiv");

  004ff	8b f4		 mov	 esi, esp
  00501	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@IONACAHK@glMultiTexCoordP4uiv@
  00506	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00509	83 c4 04	 add	 esp, 4
  0050c	3b f4		 cmp	 esi, esp
  0050e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00513	a3 00 00 00 00	 mov	 DWORD PTR _glad_glMultiTexCoordP4uiv, eax

; 1748 : 	glad_glNormalP3ui = (PFNGLNORMALP3UIPROC)load("glNormalP3ui");

  00518	8b f4		 mov	 esi, esp
  0051a	68 00 00 00 00	 push	 OFFSET ??_C@_0N@PBEFBNHO@glNormalP3ui@
  0051f	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00522	83 c4 04	 add	 esp, 4
  00525	3b f4		 cmp	 esi, esp
  00527	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0052c	a3 00 00 00 00	 mov	 DWORD PTR _glad_glNormalP3ui, eax

; 1749 : 	glad_glNormalP3uiv = (PFNGLNORMALP3UIVPROC)load("glNormalP3uiv");

  00531	8b f4		 mov	 esi, esp
  00533	68 00 00 00 00	 push	 OFFSET ??_C@_0O@MOCJMHFG@glNormalP3uiv@
  00538	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0053b	83 c4 04	 add	 esp, 4
  0053e	3b f4		 cmp	 esi, esp
  00540	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00545	a3 00 00 00 00	 mov	 DWORD PTR _glad_glNormalP3uiv, eax

; 1750 : 	glad_glColorP3ui = (PFNGLCOLORP3UIPROC)load("glColorP3ui");

  0054a	8b f4		 mov	 esi, esp
  0054c	68 00 00 00 00	 push	 OFFSET ??_C@_0M@PEKBINNN@glColorP3ui@
  00551	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00554	83 c4 04	 add	 esp, 4
  00557	3b f4		 cmp	 esi, esp
  00559	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0055e	a3 00 00 00 00	 mov	 DWORD PTR _glad_glColorP3ui, eax

; 1751 : 	glad_glColorP3uiv = (PFNGLCOLORP3UIVPROC)load("glColorP3uiv");

  00563	8b f4		 mov	 esi, esp
  00565	68 00 00 00 00	 push	 OFFSET ??_C@_0N@IBPDNBJE@glColorP3uiv@
  0056a	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0056d	83 c4 04	 add	 esp, 4
  00570	3b f4		 cmp	 esi, esp
  00572	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00577	a3 00 00 00 00	 mov	 DWORD PTR _glad_glColorP3uiv, eax

; 1752 : 	glad_glColorP4ui = (PFNGLCOLORP4UIPROC)load("glColorP4ui");

  0057c	8b f4		 mov	 esi, esp
  0057e	68 00 00 00 00	 push	 OFFSET ??_C@_0M@GJHGLFGE@glColorP4ui@
  00583	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00586	83 c4 04	 add	 esp, 4
  00589	3b f4		 cmp	 esi, esp
  0058b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00590	a3 00 00 00 00	 mov	 DWORD PTR _glad_glColorP4ui, eax

; 1753 : 	glad_glColorP4uiv = (PFNGLCOLORP4UIVPROC)load("glColorP4uiv");

  00595	8b f4		 mov	 esi, esp
  00597	68 00 00 00 00	 push	 OFFSET ??_C@_0N@DDNDANIE@glColorP4uiv@
  0059c	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0059f	83 c4 04	 add	 esp, 4
  005a2	3b f4		 cmp	 esi, esp
  005a4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  005a9	a3 00 00 00 00	 mov	 DWORD PTR _glad_glColorP4uiv, eax

; 1754 : 	glad_glSecondaryColorP3ui = (PFNGLSECONDARYCOLORP3UIPROC)load("glSecondaryColorP3ui");

  005ae	8b f4		 mov	 esi, esp
  005b0	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@PDDGBPKP@glSecondaryColorP3ui@
  005b5	ff 55 08	 call	 DWORD PTR _load$[ebp]
  005b8	83 c4 04	 add	 esp, 4
  005bb	3b f4		 cmp	 esi, esp
  005bd	e8 00 00 00 00	 call	 __RTC_CheckEsp
  005c2	a3 00 00 00 00	 mov	 DWORD PTR _glad_glSecondaryColorP3ui, eax

; 1755 : 	glad_glSecondaryColorP3uiv = (PFNGLSECONDARYCOLORP3UIVPROC)load("glSecondaryColorP3uiv");

  005c7	8b f4		 mov	 esi, esp
  005c9	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@DPPPFGBG@glSecondaryColorP3uiv@
  005ce	ff 55 08	 call	 DWORD PTR _load$[ebp]
  005d1	83 c4 04	 add	 esp, 4
  005d4	3b f4		 cmp	 esi, esp
  005d6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  005db	a3 00 00 00 00	 mov	 DWORD PTR _glad_glSecondaryColorP3uiv, eax
$LN1@load_GL_VE:

; 1756 : }

  005e0	5f		 pop	 edi
  005e1	5e		 pop	 esi
  005e2	5b		 pop	 ebx
  005e3	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  005e9	3b ec		 cmp	 ebp, esp
  005eb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  005f0	8b e5		 mov	 esp, ebp
  005f2	5d		 pop	 ebp
  005f3	c3		 ret	 0
_load_GL_VERSION_3_3 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\Light\source\repos\Spacemonster\Spacemonster-code\glad\glad.c
;	COMDAT _load_GL_VERSION_3_2
_TEXT	SEGMENT
_load$ = 8						; size = 4
_load_GL_VERSION_3_2 PROC				; COMDAT

; 1674 : static void load_GL_VERSION_3_2(GLADloadproc load) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET __550F0BDD_glad@c
  00023	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1675 : 	if(!GLAD_GL_VERSION_3_2) return;

  00028	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _GLAD_GL_VERSION_3_2, 0
  0002f	75 05		 jne	 SHORT $LN2@load_GL_VE
  00031	e9 db 01 00 00	 jmp	 $LN1@load_GL_VE
$LN2@load_GL_VE:

; 1676 : 	glad_glDrawElementsBaseVertex = (PFNGLDRAWELEMENTSBASEVERTEXPROC)load("glDrawElementsBaseVertex");

  00036	8b f4		 mov	 esi, esp
  00038	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@LFMMIAHA@glDrawElementsBaseVertex@
  0003d	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00040	83 c4 04	 add	 esp, 4
  00043	3b f4		 cmp	 esi, esp
  00045	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004a	a3 00 00 00 00	 mov	 DWORD PTR _glad_glDrawElementsBaseVertex, eax

; 1677 : 	glad_glDrawRangeElementsBaseVertex = (PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC)load("glDrawRangeElementsBaseVertex");

  0004f	8b f4		 mov	 esi, esp
  00051	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@KBDDBILP@glDrawRangeElementsBaseVertex@
  00056	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00059	83 c4 04	 add	 esp, 4
  0005c	3b f4		 cmp	 esi, esp
  0005e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00063	a3 00 00 00 00	 mov	 DWORD PTR _glad_glDrawRangeElementsBaseVertex, eax

; 1678 : 	glad_glDrawElementsInstancedBaseVertex = (PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC)load("glDrawElementsInstancedBaseVertex");

  00068	8b f4		 mov	 esi, esp
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_0CC@KLOIIKNA@glDrawElementsInstancedBaseVert@
  0006f	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00072	83 c4 04	 add	 esp, 4
  00075	3b f4		 cmp	 esi, esp
  00077	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007c	a3 00 00 00 00	 mov	 DWORD PTR _glad_glDrawElementsInstancedBaseVertex, eax

; 1679 : 	glad_glMultiDrawElementsBaseVertex = (PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC)load("glMultiDrawElementsBaseVertex");

  00081	8b f4		 mov	 esi, esp
  00083	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@NAPFJEEK@glMultiDrawElementsBaseVertex@
  00088	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0008b	83 c4 04	 add	 esp, 4
  0008e	3b f4		 cmp	 esi, esp
  00090	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00095	a3 00 00 00 00	 mov	 DWORD PTR _glad_glMultiDrawElementsBaseVertex, eax

; 1680 : 	glad_glProvokingVertex = (PFNGLPROVOKINGVERTEXPROC)load("glProvokingVertex");

  0009a	8b f4		 mov	 esi, esp
  0009c	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@ECOAPEBI@glProvokingVertex@
  000a1	ff 55 08	 call	 DWORD PTR _load$[ebp]
  000a4	83 c4 04	 add	 esp, 4
  000a7	3b f4		 cmp	 esi, esp
  000a9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ae	a3 00 00 00 00	 mov	 DWORD PTR _glad_glProvokingVertex, eax

; 1681 : 	glad_glFenceSync = (PFNGLFENCESYNCPROC)load("glFenceSync");

  000b3	8b f4		 mov	 esi, esp
  000b5	68 00 00 00 00	 push	 OFFSET ??_C@_0M@EFGFPFLP@glFenceSync@
  000ba	ff 55 08	 call	 DWORD PTR _load$[ebp]
  000bd	83 c4 04	 add	 esp, 4
  000c0	3b f4		 cmp	 esi, esp
  000c2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c7	a3 00 00 00 00	 mov	 DWORD PTR _glad_glFenceSync, eax

; 1682 : 	glad_glIsSync = (PFNGLISSYNCPROC)load("glIsSync");

  000cc	8b f4		 mov	 esi, esp
  000ce	68 00 00 00 00	 push	 OFFSET ??_C@_08JPIIHJEO@glIsSync@
  000d3	ff 55 08	 call	 DWORD PTR _load$[ebp]
  000d6	83 c4 04	 add	 esp, 4
  000d9	3b f4		 cmp	 esi, esp
  000db	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e0	a3 00 00 00 00	 mov	 DWORD PTR _glad_glIsSync, eax

; 1683 : 	glad_glDeleteSync = (PFNGLDELETESYNCPROC)load("glDeleteSync");

  000e5	8b f4		 mov	 esi, esp
  000e7	68 00 00 00 00	 push	 OFFSET ??_C@_0N@PIFDNDFG@glDeleteSync@
  000ec	ff 55 08	 call	 DWORD PTR _load$[ebp]
  000ef	83 c4 04	 add	 esp, 4
  000f2	3b f4		 cmp	 esi, esp
  000f4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f9	a3 00 00 00 00	 mov	 DWORD PTR _glad_glDeleteSync, eax

; 1684 : 	glad_glClientWaitSync = (PFNGLCLIENTWAITSYNCPROC)load("glClientWaitSync");

  000fe	8b f4		 mov	 esi, esp
  00100	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@KDMPGJAC@glClientWaitSync@
  00105	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00108	83 c4 04	 add	 esp, 4
  0010b	3b f4		 cmp	 esi, esp
  0010d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00112	a3 00 00 00 00	 mov	 DWORD PTR _glad_glClientWaitSync, eax

; 1685 : 	glad_glWaitSync = (PFNGLWAITSYNCPROC)load("glWaitSync");

  00117	8b f4		 mov	 esi, esp
  00119	68 00 00 00 00	 push	 OFFSET ??_C@_0L@MHLOGHGO@glWaitSync@
  0011e	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00121	83 c4 04	 add	 esp, 4
  00124	3b f4		 cmp	 esi, esp
  00126	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0012b	a3 00 00 00 00	 mov	 DWORD PTR _glad_glWaitSync, eax

; 1686 : 	glad_glGetInteger64v = (PFNGLGETINTEGER64VPROC)load("glGetInteger64v");

  00130	8b f4		 mov	 esi, esp
  00132	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@INMBOHGL@glGetInteger64v@
  00137	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0013a	83 c4 04	 add	 esp, 4
  0013d	3b f4		 cmp	 esi, esp
  0013f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00144	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetInteger64v, eax

; 1687 : 	glad_glGetSynciv = (PFNGLGETSYNCIVPROC)load("glGetSynciv");

  00149	8b f4		 mov	 esi, esp
  0014b	68 00 00 00 00	 push	 OFFSET ??_C@_0M@MPEEOPIN@glGetSynciv@
  00150	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00153	83 c4 04	 add	 esp, 4
  00156	3b f4		 cmp	 esi, esp
  00158	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0015d	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetSynciv, eax

; 1688 : 	glad_glGetInteger64i_v = (PFNGLGETINTEGER64I_VPROC)load("glGetInteger64i_v");

  00162	8b f4		 mov	 esi, esp
  00164	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@KOJILIEC@glGetInteger64i_v@
  00169	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0016c	83 c4 04	 add	 esp, 4
  0016f	3b f4		 cmp	 esi, esp
  00171	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00176	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetInteger64i_v, eax

; 1689 : 	glad_glGetBufferParameteri64v = (PFNGLGETBUFFERPARAMETERI64VPROC)load("glGetBufferParameteri64v");

  0017b	8b f4		 mov	 esi, esp
  0017d	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@KKBIDGPP@glGetBufferParameteri64v@
  00182	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00185	83 c4 04	 add	 esp, 4
  00188	3b f4		 cmp	 esi, esp
  0018a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0018f	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetBufferParameteri64v, eax

; 1690 : 	glad_glFramebufferTexture = (PFNGLFRAMEBUFFERTEXTUREPROC)load("glFramebufferTexture");

  00194	8b f4		 mov	 esi, esp
  00196	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@ENLMLILA@glFramebufferTexture@
  0019b	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0019e	83 c4 04	 add	 esp, 4
  001a1	3b f4		 cmp	 esi, esp
  001a3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001a8	a3 00 00 00 00	 mov	 DWORD PTR _glad_glFramebufferTexture, eax

; 1691 : 	glad_glTexImage2DMultisample = (PFNGLTEXIMAGE2DMULTISAMPLEPROC)load("glTexImage2DMultisample");

  001ad	8b f4		 mov	 esi, esp
  001af	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@FHDFLFA@glTexImage2DMultisample@
  001b4	ff 55 08	 call	 DWORD PTR _load$[ebp]
  001b7	83 c4 04	 add	 esp, 4
  001ba	3b f4		 cmp	 esi, esp
  001bc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001c1	a3 00 00 00 00	 mov	 DWORD PTR _glad_glTexImage2DMultisample, eax

; 1692 : 	glad_glTexImage3DMultisample = (PFNGLTEXIMAGE3DMULTISAMPLEPROC)load("glTexImage3DMultisample");

  001c6	8b f4		 mov	 esi, esp
  001c8	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@JIHMLKCG@glTexImage3DMultisample@
  001cd	ff 55 08	 call	 DWORD PTR _load$[ebp]
  001d0	83 c4 04	 add	 esp, 4
  001d3	3b f4		 cmp	 esi, esp
  001d5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001da	a3 00 00 00 00	 mov	 DWORD PTR _glad_glTexImage3DMultisample, eax

; 1693 : 	glad_glGetMultisamplefv = (PFNGLGETMULTISAMPLEFVPROC)load("glGetMultisamplefv");

  001df	8b f4		 mov	 esi, esp
  001e1	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@DHLIMGN@glGetMultisamplefv@
  001e6	ff 55 08	 call	 DWORD PTR _load$[ebp]
  001e9	83 c4 04	 add	 esp, 4
  001ec	3b f4		 cmp	 esi, esp
  001ee	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001f3	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetMultisamplefv, eax

; 1694 : 	glad_glSampleMaski = (PFNGLSAMPLEMASKIPROC)load("glSampleMaski");

  001f8	8b f4		 mov	 esi, esp
  001fa	68 00 00 00 00	 push	 OFFSET ??_C@_0O@JNHBCHMB@glSampleMaski@
  001ff	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00202	83 c4 04	 add	 esp, 4
  00205	3b f4		 cmp	 esi, esp
  00207	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0020c	a3 00 00 00 00	 mov	 DWORD PTR _glad_glSampleMaski, eax
$LN1@load_GL_VE:

; 1695 : }

  00211	5f		 pop	 edi
  00212	5e		 pop	 esi
  00213	5b		 pop	 ebx
  00214	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0021a	3b ec		 cmp	 ebp, esp
  0021c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00221	8b e5		 mov	 esp, ebp
  00223	5d		 pop	 ebp
  00224	c3		 ret	 0
_load_GL_VERSION_3_2 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\Light\source\repos\Spacemonster\Spacemonster-code\glad\glad.c
;	COMDAT _load_GL_VERSION_3_1
_TEXT	SEGMENT
_load$ = 8						; size = 4
_load_GL_VERSION_3_1 PROC				; COMDAT

; 1656 : static void load_GL_VERSION_3_1(GLADloadproc load) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET __550F0BDD_glad@c
  00023	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1657 : 	if(!GLAD_GL_VERSION_3_1) return;

  00028	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _GLAD_GL_VERSION_3_1, 0
  0002f	75 05		 jne	 SHORT $LN2@load_GL_VE
  00031	e9 77 01 00 00	 jmp	 $LN1@load_GL_VE
$LN2@load_GL_VE:

; 1658 : 	glad_glDrawArraysInstanced = (PFNGLDRAWARRAYSINSTANCEDPROC)load("glDrawArraysInstanced");

  00036	8b f4		 mov	 esi, esp
  00038	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@HIOFINAN@glDrawArraysInstanced@
  0003d	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00040	83 c4 04	 add	 esp, 4
  00043	3b f4		 cmp	 esi, esp
  00045	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004a	a3 00 00 00 00	 mov	 DWORD PTR _glad_glDrawArraysInstanced, eax

; 1659 : 	glad_glDrawElementsInstanced = (PFNGLDRAWELEMENTSINSTANCEDPROC)load("glDrawElementsInstanced");

  0004f	8b f4		 mov	 esi, esp
  00051	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@CGJENFBH@glDrawElementsInstanced@
  00056	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00059	83 c4 04	 add	 esp, 4
  0005c	3b f4		 cmp	 esi, esp
  0005e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00063	a3 00 00 00 00	 mov	 DWORD PTR _glad_glDrawElementsInstanced, eax

; 1660 : 	glad_glTexBuffer = (PFNGLTEXBUFFERPROC)load("glTexBuffer");

  00068	8b f4		 mov	 esi, esp
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_0M@IIMBBALL@glTexBuffer@
  0006f	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00072	83 c4 04	 add	 esp, 4
  00075	3b f4		 cmp	 esi, esp
  00077	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007c	a3 00 00 00 00	 mov	 DWORD PTR _glad_glTexBuffer, eax

; 1661 : 	glad_glPrimitiveRestartIndex = (PFNGLPRIMITIVERESTARTINDEXPROC)load("glPrimitiveRestartIndex");

  00081	8b f4		 mov	 esi, esp
  00083	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@LJDLNGAF@glPrimitiveRestartIndex@
  00088	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0008b	83 c4 04	 add	 esp, 4
  0008e	3b f4		 cmp	 esi, esp
  00090	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00095	a3 00 00 00 00	 mov	 DWORD PTR _glad_glPrimitiveRestartIndex, eax

; 1662 : 	glad_glCopyBufferSubData = (PFNGLCOPYBUFFERSUBDATAPROC)load("glCopyBufferSubData");

  0009a	8b f4		 mov	 esi, esp
  0009c	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@EPKABDOG@glCopyBufferSubData@
  000a1	ff 55 08	 call	 DWORD PTR _load$[ebp]
  000a4	83 c4 04	 add	 esp, 4
  000a7	3b f4		 cmp	 esi, esp
  000a9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ae	a3 00 00 00 00	 mov	 DWORD PTR _glad_glCopyBufferSubData, eax

; 1663 : 	glad_glGetUniformIndices = (PFNGLGETUNIFORMINDICESPROC)load("glGetUniformIndices");

  000b3	8b f4		 mov	 esi, esp
  000b5	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@MDPMIDEE@glGetUniformIndices@
  000ba	ff 55 08	 call	 DWORD PTR _load$[ebp]
  000bd	83 c4 04	 add	 esp, 4
  000c0	3b f4		 cmp	 esi, esp
  000c2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c7	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetUniformIndices, eax

; 1664 : 	glad_glGetActiveUniformsiv = (PFNGLGETACTIVEUNIFORMSIVPROC)load("glGetActiveUniformsiv");

  000cc	8b f4		 mov	 esi, esp
  000ce	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@JEHIMPCG@glGetActiveUniformsiv@
  000d3	ff 55 08	 call	 DWORD PTR _load$[ebp]
  000d6	83 c4 04	 add	 esp, 4
  000d9	3b f4		 cmp	 esi, esp
  000db	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e0	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetActiveUniformsiv, eax

; 1665 : 	glad_glGetActiveUniformName = (PFNGLGETACTIVEUNIFORMNAMEPROC)load("glGetActiveUniformName");

  000e5	8b f4		 mov	 esi, esp
  000e7	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@EGGFHKJJ@glGetActiveUniformName@
  000ec	ff 55 08	 call	 DWORD PTR _load$[ebp]
  000ef	83 c4 04	 add	 esp, 4
  000f2	3b f4		 cmp	 esi, esp
  000f4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f9	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetActiveUniformName, eax

; 1666 : 	glad_glGetUniformBlockIndex = (PFNGLGETUNIFORMBLOCKINDEXPROC)load("glGetUniformBlockIndex");

  000fe	8b f4		 mov	 esi, esp
  00100	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@CBDIMHHE@glGetUniformBlockIndex@
  00105	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00108	83 c4 04	 add	 esp, 4
  0010b	3b f4		 cmp	 esi, esp
  0010d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00112	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetUniformBlockIndex, eax

; 1667 : 	glad_glGetActiveUniformBlockiv = (PFNGLGETACTIVEUNIFORMBLOCKIVPROC)load("glGetActiveUniformBlockiv");

  00117	8b f4		 mov	 esi, esp
  00119	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@DMHOPJGL@glGetActiveUniformBlockiv@
  0011e	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00121	83 c4 04	 add	 esp, 4
  00124	3b f4		 cmp	 esi, esp
  00126	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0012b	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetActiveUniformBlockiv, eax

; 1668 : 	glad_glGetActiveUniformBlockName = (PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC)load("glGetActiveUniformBlockName");

  00130	8b f4		 mov	 esi, esp
  00132	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@KEMCJPAJ@glGetActiveUniformBlockName@
  00137	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0013a	83 c4 04	 add	 esp, 4
  0013d	3b f4		 cmp	 esi, esp
  0013f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00144	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetActiveUniformBlockName, eax

; 1669 : 	glad_glUniformBlockBinding = (PFNGLUNIFORMBLOCKBINDINGPROC)load("glUniformBlockBinding");

  00149	8b f4		 mov	 esi, esp
  0014b	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@BOLEKKCP@glUniformBlockBinding@
  00150	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00153	83 c4 04	 add	 esp, 4
  00156	3b f4		 cmp	 esi, esp
  00158	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0015d	a3 00 00 00 00	 mov	 DWORD PTR _glad_glUniformBlockBinding, eax

; 1670 : 	glad_glBindBufferRange = (PFNGLBINDBUFFERRANGEPROC)load("glBindBufferRange");

  00162	8b f4		 mov	 esi, esp
  00164	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@EEMMCHMB@glBindBufferRange@
  00169	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0016c	83 c4 04	 add	 esp, 4
  0016f	3b f4		 cmp	 esi, esp
  00171	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00176	a3 00 00 00 00	 mov	 DWORD PTR _glad_glBindBufferRange, eax

; 1671 : 	glad_glBindBufferBase = (PFNGLBINDBUFFERBASEPROC)load("glBindBufferBase");

  0017b	8b f4		 mov	 esi, esp
  0017d	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@LDPKOCJI@glBindBufferBase@
  00182	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00185	83 c4 04	 add	 esp, 4
  00188	3b f4		 cmp	 esi, esp
  0018a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0018f	a3 00 00 00 00	 mov	 DWORD PTR _glad_glBindBufferBase, eax

; 1672 : 	glad_glGetIntegeri_v = (PFNGLGETINTEGERI_VPROC)load("glGetIntegeri_v");

  00194	8b f4		 mov	 esi, esp
  00196	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FKCNNMFO@glGetIntegeri_v@
  0019b	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0019e	83 c4 04	 add	 esp, 4
  001a1	3b f4		 cmp	 esi, esp
  001a3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001a8	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetIntegeri_v, eax
$LN1@load_GL_VE:

; 1673 : }

  001ad	5f		 pop	 edi
  001ae	5e		 pop	 esi
  001af	5b		 pop	 ebx
  001b0	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  001b6	3b ec		 cmp	 ebp, esp
  001b8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001bd	8b e5		 mov	 esp, ebp
  001bf	5d		 pop	 ebp
  001c0	c3		 ret	 0
_load_GL_VERSION_3_1 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\Light\source\repos\Spacemonster\Spacemonster-code\glad\glad.c
;	COMDAT _load_GL_VERSION_3_0
_TEXT	SEGMENT
_load$ = 8						; size = 4
_load_GL_VERSION_3_0 PROC				; COMDAT

; 1569 : static void load_GL_VERSION_3_0(GLADloadproc load) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET __550F0BDD_glad@c
  00023	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1570 : 	if(!GLAD_GL_VERSION_3_0) return;

  00028	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _GLAD_GL_VERSION_3_0, 0
  0002f	75 05		 jne	 SHORT $LN2@load_GL_VE
  00031	e9 34 08 00 00	 jmp	 $LN1@load_GL_VE
$LN2@load_GL_VE:

; 1571 : 	glad_glColorMaski = (PFNGLCOLORMASKIPROC)load("glColorMaski");

  00036	8b f4		 mov	 esi, esp
  00038	68 00 00 00 00	 push	 OFFSET ??_C@_0N@JHNNNJFG@glColorMaski@
  0003d	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00040	83 c4 04	 add	 esp, 4
  00043	3b f4		 cmp	 esi, esp
  00045	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004a	a3 00 00 00 00	 mov	 DWORD PTR _glad_glColorMaski, eax

; 1572 : 	glad_glGetBooleani_v = (PFNGLGETBOOLEANI_VPROC)load("glGetBooleani_v");

  0004f	8b f4		 mov	 esi, esp
  00051	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@OAKNOBP@glGetBooleani_v@
  00056	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00059	83 c4 04	 add	 esp, 4
  0005c	3b f4		 cmp	 esi, esp
  0005e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00063	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetBooleani_v, eax

; 1573 : 	glad_glGetIntegeri_v = (PFNGLGETINTEGERI_VPROC)load("glGetIntegeri_v");

  00068	8b f4		 mov	 esi, esp
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FKCNNMFO@glGetIntegeri_v@
  0006f	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00072	83 c4 04	 add	 esp, 4
  00075	3b f4		 cmp	 esi, esp
  00077	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007c	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetIntegeri_v, eax

; 1574 : 	glad_glEnablei = (PFNGLENABLEIPROC)load("glEnablei");

  00081	8b f4		 mov	 esi, esp
  00083	68 00 00 00 00	 push	 OFFSET ??_C@_09IEGEGIEN@glEnablei@
  00088	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0008b	83 c4 04	 add	 esp, 4
  0008e	3b f4		 cmp	 esi, esp
  00090	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00095	a3 00 00 00 00	 mov	 DWORD PTR _glad_glEnablei, eax

; 1575 : 	glad_glDisablei = (PFNGLDISABLEIPROC)load("glDisablei");

  0009a	8b f4		 mov	 esi, esp
  0009c	68 00 00 00 00	 push	 OFFSET ??_C@_0L@BMJPGDDH@glDisablei@
  000a1	ff 55 08	 call	 DWORD PTR _load$[ebp]
  000a4	83 c4 04	 add	 esp, 4
  000a7	3b f4		 cmp	 esi, esp
  000a9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ae	a3 00 00 00 00	 mov	 DWORD PTR _glad_glDisablei, eax

; 1576 : 	glad_glIsEnabledi = (PFNGLISENABLEDIPROC)load("glIsEnabledi");

  000b3	8b f4		 mov	 esi, esp
  000b5	68 00 00 00 00	 push	 OFFSET ??_C@_0N@IMGKGOKN@glIsEnabledi@
  000ba	ff 55 08	 call	 DWORD PTR _load$[ebp]
  000bd	83 c4 04	 add	 esp, 4
  000c0	3b f4		 cmp	 esi, esp
  000c2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c7	a3 00 00 00 00	 mov	 DWORD PTR _glad_glIsEnabledi, eax

; 1577 : 	glad_glBeginTransformFeedback = (PFNGLBEGINTRANSFORMFEEDBACKPROC)load("glBeginTransformFeedback");

  000cc	8b f4		 mov	 esi, esp
  000ce	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@FHJKOECC@glBeginTransformFeedback@
  000d3	ff 55 08	 call	 DWORD PTR _load$[ebp]
  000d6	83 c4 04	 add	 esp, 4
  000d9	3b f4		 cmp	 esi, esp
  000db	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e0	a3 00 00 00 00	 mov	 DWORD PTR _glad_glBeginTransformFeedback, eax

; 1578 : 	glad_glEndTransformFeedback = (PFNGLENDTRANSFORMFEEDBACKPROC)load("glEndTransformFeedback");

  000e5	8b f4		 mov	 esi, esp
  000e7	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@LCFLNNBH@glEndTransformFeedback@
  000ec	ff 55 08	 call	 DWORD PTR _load$[ebp]
  000ef	83 c4 04	 add	 esp, 4
  000f2	3b f4		 cmp	 esi, esp
  000f4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f9	a3 00 00 00 00	 mov	 DWORD PTR _glad_glEndTransformFeedback, eax

; 1579 : 	glad_glBindBufferRange = (PFNGLBINDBUFFERRANGEPROC)load("glBindBufferRange");

  000fe	8b f4		 mov	 esi, esp
  00100	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@EEMMCHMB@glBindBufferRange@
  00105	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00108	83 c4 04	 add	 esp, 4
  0010b	3b f4		 cmp	 esi, esp
  0010d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00112	a3 00 00 00 00	 mov	 DWORD PTR _glad_glBindBufferRange, eax

; 1580 : 	glad_glBindBufferBase = (PFNGLBINDBUFFERBASEPROC)load("glBindBufferBase");

  00117	8b f4		 mov	 esi, esp
  00119	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@LDPKOCJI@glBindBufferBase@
  0011e	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00121	83 c4 04	 add	 esp, 4
  00124	3b f4		 cmp	 esi, esp
  00126	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0012b	a3 00 00 00 00	 mov	 DWORD PTR _glad_glBindBufferBase, eax

; 1581 : 	glad_glTransformFeedbackVaryings = (PFNGLTRANSFORMFEEDBACKVARYINGSPROC)load("glTransformFeedbackVaryings");

  00130	8b f4		 mov	 esi, esp
  00132	68 00 00 00 00	 push	 OFFSET ??_C@_0BM@IJFAKBEF@glTransformFeedbackVaryings@
  00137	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0013a	83 c4 04	 add	 esp, 4
  0013d	3b f4		 cmp	 esi, esp
  0013f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00144	a3 00 00 00 00	 mov	 DWORD PTR _glad_glTransformFeedbackVaryings, eax

; 1582 : 	glad_glGetTransformFeedbackVarying = (PFNGLGETTRANSFORMFEEDBACKVARYINGPROC)load("glGetTransformFeedbackVarying");

  00149	8b f4		 mov	 esi, esp
  0014b	68 00 00 00 00	 push	 OFFSET ??_C@_0BO@ODFLPNG@glGetTransformFeedbackVarying@
  00150	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00153	83 c4 04	 add	 esp, 4
  00156	3b f4		 cmp	 esi, esp
  00158	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0015d	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetTransformFeedbackVarying, eax

; 1583 : 	glad_glClampColor = (PFNGLCLAMPCOLORPROC)load("glClampColor");

  00162	8b f4		 mov	 esi, esp
  00164	68 00 00 00 00	 push	 OFFSET ??_C@_0N@HLGAGIMI@glClampColor@
  00169	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0016c	83 c4 04	 add	 esp, 4
  0016f	3b f4		 cmp	 esi, esp
  00171	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00176	a3 00 00 00 00	 mov	 DWORD PTR _glad_glClampColor, eax

; 1584 : 	glad_glBeginConditionalRender = (PFNGLBEGINCONDITIONALRENDERPROC)load("glBeginConditionalRender");

  0017b	8b f4		 mov	 esi, esp
  0017d	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@EHEPIEPF@glBeginConditionalRender@
  00182	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00185	83 c4 04	 add	 esp, 4
  00188	3b f4		 cmp	 esi, esp
  0018a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0018f	a3 00 00 00 00	 mov	 DWORD PTR _glad_glBeginConditionalRender, eax

; 1585 : 	glad_glEndConditionalRender = (PFNGLENDCONDITIONALRENDERPROC)load("glEndConditionalRender");

  00194	8b f4		 mov	 esi, esp
  00196	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@KCIOLNMA@glEndConditionalRender@
  0019b	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0019e	83 c4 04	 add	 esp, 4
  001a1	3b f4		 cmp	 esi, esp
  001a3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001a8	a3 00 00 00 00	 mov	 DWORD PTR _glad_glEndConditionalRender, eax

; 1586 : 	glad_glVertexAttribIPointer = (PFNGLVERTEXATTRIBIPOINTERPROC)load("glVertexAttribIPointer");

  001ad	8b f4		 mov	 esi, esp
  001af	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@NLOEHKCD@glVertexAttribIPointer@
  001b4	ff 55 08	 call	 DWORD PTR _load$[ebp]
  001b7	83 c4 04	 add	 esp, 4
  001ba	3b f4		 cmp	 esi, esp
  001bc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001c1	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertexAttribIPointer, eax

; 1587 : 	glad_glGetVertexAttribIiv = (PFNGLGETVERTEXATTRIBIIVPROC)load("glGetVertexAttribIiv");

  001c6	8b f4		 mov	 esi, esp
  001c8	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@KPDNEONP@glGetVertexAttribIiv@
  001cd	ff 55 08	 call	 DWORD PTR _load$[ebp]
  001d0	83 c4 04	 add	 esp, 4
  001d3	3b f4		 cmp	 esi, esp
  001d5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001da	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetVertexAttribIiv, eax

; 1588 : 	glad_glGetVertexAttribIuiv = (PFNGLGETVERTEXATTRIBIUIVPROC)load("glGetVertexAttribIuiv");

  001df	8b f4		 mov	 esi, esp
  001e1	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@GCBDCABB@glGetVertexAttribIuiv@
  001e6	ff 55 08	 call	 DWORD PTR _load$[ebp]
  001e9	83 c4 04	 add	 esp, 4
  001ec	3b f4		 cmp	 esi, esp
  001ee	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001f3	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetVertexAttribIuiv, eax

; 1589 : 	glad_glVertexAttribI1i = (PFNGLVERTEXATTRIBI1IPROC)load("glVertexAttribI1i");

  001f8	8b f4		 mov	 esi, esp
  001fa	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@CDIIMMAL@glVertexAttribI1i@
  001ff	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00202	83 c4 04	 add	 esp, 4
  00205	3b f4		 cmp	 esi, esp
  00207	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0020c	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertexAttribI1i, eax

; 1590 : 	glad_glVertexAttribI2i = (PFNGLVERTEXATTRIBI2IPROC)load("glVertexAttribI2i");

  00211	8b f4		 mov	 esi, esp
  00213	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@CBMOHCFC@glVertexAttribI2i@
  00218	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0021b	83 c4 04	 add	 esp, 4
  0021e	3b f4		 cmp	 esi, esp
  00220	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00225	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertexAttribI2i, eax

; 1591 : 	glad_glVertexAttribI3i = (PFNGLVERTEXATTRIBI3IPROC)load("glVertexAttribI3i");

  0022a	8b f4		 mov	 esi, esp
  0022c	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@CAAMBIGF@glVertexAttribI3i@
  00231	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00234	83 c4 04	 add	 esp, 4
  00237	3b f4		 cmp	 esi, esp
  00239	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0023e	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertexAttribI3i, eax

; 1592 : 	glad_glVertexAttribI4i = (PFNGLVERTEXATTRIBI4IPROC)load("glVertexAttribI4i");

  00243	8b f4		 mov	 esi, esp
  00245	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@CFEDAOOA@glVertexAttribI4i@
  0024a	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0024d	83 c4 04	 add	 esp, 4
  00250	3b f4		 cmp	 esi, esp
  00252	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00257	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertexAttribI4i, eax

; 1593 : 	glad_glVertexAttribI1ui = (PFNGLVERTEXATTRIBI1UIPROC)load("glVertexAttribI1ui");

  0025c	8b f4		 mov	 esi, esp
  0025e	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@DGPCNLLO@glVertexAttribI1ui@
  00263	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00266	83 c4 04	 add	 esp, 4
  00269	3b f4		 cmp	 esi, esp
  0026b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00270	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertexAttribI1ui, eax

; 1594 : 	glad_glVertexAttribI2ui = (PFNGLVERTEXATTRIBI2UIPROC)load("glVertexAttribI2ui");

  00275	8b f4		 mov	 esi, esp
  00277	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@CEEHHEFA@glVertexAttribI2ui@
  0027c	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0027f	83 c4 04	 add	 esp, 4
  00282	3b f4		 cmp	 esi, esp
  00284	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00289	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertexAttribI2ui, eax

; 1595 : 	glad_glVertexAttribI3ui = (PFNGLVERTEXATTRIBI3UIPROC)load("glVertexAttribI3ui");

  0028e	8b f4		 mov	 esi, esp
  00290	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@JMPLBDDF@glVertexAttribI3ui@
  00295	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00298	83 c4 04	 add	 esp, 4
  0029b	3b f4		 cmp	 esi, esp
  0029d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002a2	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertexAttribI3ui, eax

; 1596 : 	glad_glVertexAttribI4ui = (PFNGLVERTEXATTRIBI4UIPROC)load("glVertexAttribI4ui");

  002a7	8b f4		 mov	 esi, esp
  002a9	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@BCMCLIM@glVertexAttribI4ui@
  002ae	ff 55 08	 call	 DWORD PTR _load$[ebp]
  002b1	83 c4 04	 add	 esp, 4
  002b4	3b f4		 cmp	 esi, esp
  002b6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002bb	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertexAttribI4ui, eax

; 1597 : 	glad_glVertexAttribI1iv = (PFNGLVERTEXATTRIBI1IVPROC)load("glVertexAttribI1iv");

  002c0	8b f4		 mov	 esi, esp
  002c2	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OOJEIPDE@glVertexAttribI1iv@
  002c7	ff 55 08	 call	 DWORD PTR _load$[ebp]
  002ca	83 c4 04	 add	 esp, 4
  002cd	3b f4		 cmp	 esi, esp
  002cf	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002d4	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertexAttribI1iv, eax

; 1598 : 	glad_glVertexAttribI2iv = (PFNGLVERTEXATTRIBI2IVPROC)load("glVertexAttribI2iv");

  002d9	8b f4		 mov	 esi, esp
  002db	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@PMCBCANK@glVertexAttribI2iv@
  002e0	ff 55 08	 call	 DWORD PTR _load$[ebp]
  002e3	83 c4 04	 add	 esp, 4
  002e6	3b f4		 cmp	 esi, esp
  002e8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002ed	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertexAttribI2iv, eax

; 1599 : 	glad_glVertexAttribI3iv = (PFNGLVERTEXATTRIBI3IVPROC)load("glVertexAttribI3iv");

  002f2	8b f4		 mov	 esi, esp
  002f4	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@EEJNEHLP@glVertexAttribI3iv@
  002f9	ff 55 08	 call	 DWORD PTR _load$[ebp]
  002fc	83 c4 04	 add	 esp, 4
  002ff	3b f4		 cmp	 esi, esp
  00301	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00306	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertexAttribI3iv, eax

; 1600 : 	glad_glVertexAttribI4iv = (PFNGLVERTEXATTRIBI4IVPROC)load("glVertexAttribI4iv");

  0030b	8b f4		 mov	 esi, esp
  0030d	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@NJEKHPAG@glVertexAttribI4iv@
  00312	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00315	83 c4 04	 add	 esp, 4
  00318	3b f4		 cmp	 esi, esp
  0031a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0031f	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertexAttribI4iv, eax

; 1601 : 	glad_glVertexAttribI1uiv = (PFNGLVERTEXATTRIBI1UIVPROC)load("glVertexAttribI1uiv");

  00324	8b f4		 mov	 esi, esp
  00326	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@FFIKLCCA@glVertexAttribI1uiv@
  0032b	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0032e	83 c4 04	 add	 esp, 4
  00331	3b f4		 cmp	 esi, esp
  00333	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00338	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertexAttribI1uiv, eax

; 1602 : 	glad_glVertexAttribI2uiv = (PFNGLVERTEXATTRIBI2UIVPROC)load("glVertexAttribI2uiv");

  0033d	8b f4		 mov	 esi, esp
  0033f	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@BCCKMIPA@glVertexAttribI2uiv@
  00344	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00347	83 c4 04	 add	 esp, 4
  0034a	3b f4		 cmp	 esi, esp
  0034c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00351	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertexAttribI2uiv, eax

; 1603 : 	glad_glVertexAttribI3uiv = (PFNGLVERTEXATTRIBI3UIVPROC)load("glVertexAttribI3uiv");

  00356	8b f4		 mov	 esi, esp
  00358	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@CPEKOBEA@glVertexAttribI3uiv@
  0035d	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00360	83 c4 04	 add	 esp, 4
  00363	3b f4		 cmp	 esi, esp
  00365	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0036a	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertexAttribI3uiv, eax

; 1604 : 	glad_glVertexAttribI4uiv = (PFNGLVERTEXATTRIBI4UIVPROC)load("glVertexAttribI4uiv");

  0036f	8b f4		 mov	 esi, esp
  00371	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@JNGKDNFA@glVertexAttribI4uiv@
  00376	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00379	83 c4 04	 add	 esp, 4
  0037c	3b f4		 cmp	 esi, esp
  0037e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00383	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertexAttribI4uiv, eax

; 1605 : 	glad_glVertexAttribI4bv = (PFNGLVERTEXATTRIBI4BVPROC)load("glVertexAttribI4bv");

  00388	8b f4		 mov	 esi, esp
  0038a	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@NFBPJAOH@glVertexAttribI4bv@
  0038f	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00392	83 c4 04	 add	 esp, 4
  00395	3b f4		 cmp	 esi, esp
  00397	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0039c	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertexAttribI4bv, eax

; 1606 : 	glad_glVertexAttribI4sv = (PFNGLVERTEXATTRIBI4SVPROC)load("glVertexAttribI4sv");

  003a1	8b f4		 mov	 esi, esp
  003a3	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@MIPLFJKA@glVertexAttribI4sv@
  003a8	ff 55 08	 call	 DWORD PTR _load$[ebp]
  003ab	83 c4 04	 add	 esp, 4
  003ae	3b f4		 cmp	 esi, esp
  003b0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003b5	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertexAttribI4sv, eax

; 1607 : 	glad_glVertexAttribI4ubv = (PFNGLVERTEXATTRIBI4UBVPROC)load("glVertexAttribI4ubv");

  003ba	8b f4		 mov	 esi, esp
  003bc	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@JBDPNCLB@glVertexAttribI4ubv@
  003c1	ff 55 08	 call	 DWORD PTR _load$[ebp]
  003c4	83 c4 04	 add	 esp, 4
  003c7	3b f4		 cmp	 esi, esp
  003c9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003ce	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertexAttribI4ubv, eax

; 1608 : 	glad_glVertexAttribI4usv = (PFNGLVERTEXATTRIBI4USVPROC)load("glVertexAttribI4usv");

  003d3	8b f4		 mov	 esi, esp
  003d5	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@IMNLBLPG@glVertexAttribI4usv@
  003da	ff 55 08	 call	 DWORD PTR _load$[ebp]
  003dd	83 c4 04	 add	 esp, 4
  003e0	3b f4		 cmp	 esi, esp
  003e2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003e7	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertexAttribI4usv, eax

; 1609 : 	glad_glGetUniformuiv = (PFNGLGETUNIFORMUIVPROC)load("glGetUniformuiv");

  003ec	8b f4		 mov	 esi, esp
  003ee	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@NIGECFIF@glGetUniformuiv@
  003f3	ff 55 08	 call	 DWORD PTR _load$[ebp]
  003f6	83 c4 04	 add	 esp, 4
  003f9	3b f4		 cmp	 esi, esp
  003fb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00400	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetUniformuiv, eax

; 1610 : 	glad_glBindFragDataLocation = (PFNGLBINDFRAGDATALOCATIONPROC)load("glBindFragDataLocation");

  00405	8b f4		 mov	 esi, esp
  00407	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@DLJLAGBA@glBindFragDataLocation@
  0040c	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0040f	83 c4 04	 add	 esp, 4
  00412	3b f4		 cmp	 esi, esp
  00414	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00419	a3 00 00 00 00	 mov	 DWORD PTR _glad_glBindFragDataLocation, eax

; 1611 : 	glad_glGetFragDataLocation = (PFNGLGETFRAGDATALOCATIONPROC)load("glGetFragDataLocation");

  0041e	8b f4		 mov	 esi, esp
  00420	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@NDOIGAMC@glGetFragDataLocation@
  00425	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00428	83 c4 04	 add	 esp, 4
  0042b	3b f4		 cmp	 esi, esp
  0042d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00432	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetFragDataLocation, eax

; 1612 : 	glad_glUniform1ui = (PFNGLUNIFORM1UIPROC)load("glUniform1ui");

  00437	8b f4		 mov	 esi, esp
  00439	68 00 00 00 00	 push	 OFFSET ??_C@_0N@HKPEFJDP@glUniform1ui@
  0043e	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00441	83 c4 04	 add	 esp, 4
  00444	3b f4		 cmp	 esi, esp
  00446	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0044b	a3 00 00 00 00	 mov	 DWORD PTR _glad_glUniform1ui, eax

; 1613 : 	glad_glUniform2ui = (PFNGLUNIFORM2UIPROC)load("glUniform2ui");

  00450	8b f4		 mov	 esi, esp
  00452	68 00 00 00 00	 push	 OFFSET ??_C@_0N@GIEBPGNB@glUniform2ui@
  00457	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0045a	83 c4 04	 add	 esp, 4
  0045d	3b f4		 cmp	 esi, esp
  0045f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00464	a3 00 00 00 00	 mov	 DWORD PTR _glad_glUniform2ui, eax

; 1614 : 	glad_glUniform3ui = (PFNGLUNIFORM3UIPROC)load("glUniform3ui");

  00469	8b f4		 mov	 esi, esp
  0046b	68 00 00 00 00	 push	 OFFSET ??_C@_0N@NAPNJBLE@glUniform3ui@
  00470	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00473	83 c4 04	 add	 esp, 4
  00476	3b f4		 cmp	 esi, esp
  00478	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0047d	a3 00 00 00 00	 mov	 DWORD PTR _glad_glUniform3ui, eax

; 1615 : 	glad_glUniform4ui = (PFNGLUNIFORM4UIPROC)load("glUniform4ui");

  00482	8b f4		 mov	 esi, esp
  00484	68 00 00 00 00	 push	 OFFSET ??_C@_0N@ENCKKJAN@glUniform4ui@
  00489	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0048c	83 c4 04	 add	 esp, 4
  0048f	3b f4		 cmp	 esi, esp
  00491	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00496	a3 00 00 00 00	 mov	 DWORD PTR _glad_glUniform4ui, eax

; 1616 : 	glad_glUniform1uiv = (PFNGLUNIFORM1UIVPROC)load("glUniform1uiv");

  0049b	8b f4		 mov	 esi, esp
  0049d	68 00 00 00 00	 push	 OFFSET ??_C@_0O@MPHJAHBE@glUniform1uiv@
  004a2	ff 55 08	 call	 DWORD PTR _load$[ebp]
  004a5	83 c4 04	 add	 esp, 4
  004a8	3b f4		 cmp	 esi, esp
  004aa	e8 00 00 00 00	 call	 __RTC_CheckEsp
  004af	a3 00 00 00 00	 mov	 DWORD PTR _glad_glUniform1uiv, eax

; 1617 : 	glad_glUniform2uiv = (PFNGLUNIFORM2UIVPROC)load("glUniform2uiv");

  004b4	8b f4		 mov	 esi, esp
  004b6	68 00 00 00 00	 push	 OFFSET ??_C@_0O@IINJHNME@glUniform2uiv@
  004bb	ff 55 08	 call	 DWORD PTR _load$[ebp]
  004be	83 c4 04	 add	 esp, 4
  004c1	3b f4		 cmp	 esi, esp
  004c3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  004c8	a3 00 00 00 00	 mov	 DWORD PTR _glad_glUniform2uiv, eax

; 1618 : 	glad_glUniform3uiv = (PFNGLUNIFORM3UIVPROC)load("glUniform3uiv");

  004cd	8b f4		 mov	 esi, esp
  004cf	68 00 00 00 00	 push	 OFFSET ??_C@_0O@LFLJFEHE@glUniform3uiv@
  004d4	ff 55 08	 call	 DWORD PTR _load$[ebp]
  004d7	83 c4 04	 add	 esp, 4
  004da	3b f4		 cmp	 esi, esp
  004dc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  004e1	a3 00 00 00 00	 mov	 DWORD PTR _glad_glUniform3uiv, eax

; 1619 : 	glad_glUniform4uiv = (PFNGLUNIFORM4UIVPROC)load("glUniform4uiv");

  004e6	8b f4		 mov	 esi, esp
  004e8	68 00 00 00 00	 push	 OFFSET ??_C@_0O@HJJIIGE@glUniform4uiv@
  004ed	ff 55 08	 call	 DWORD PTR _load$[ebp]
  004f0	83 c4 04	 add	 esp, 4
  004f3	3b f4		 cmp	 esi, esp
  004f5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  004fa	a3 00 00 00 00	 mov	 DWORD PTR _glad_glUniform4uiv, eax

; 1620 : 	glad_glTexParameterIiv = (PFNGLTEXPARAMETERIIVPROC)load("glTexParameterIiv");

  004ff	8b f4		 mov	 esi, esp
  00501	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@MAFJKEHB@glTexParameterIiv@
  00506	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00509	83 c4 04	 add	 esp, 4
  0050c	3b f4		 cmp	 esi, esp
  0050e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00513	a3 00 00 00 00	 mov	 DWORD PTR _glad_glTexParameterIiv, eax

; 1621 : 	glad_glTexParameterIuiv = (PFNGLTEXPARAMETERIUIVPROC)load("glTexParameterIuiv");

  00518	8b f4		 mov	 esi, esp
  0051a	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FDBCMKBE@glTexParameterIuiv@
  0051f	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00522	83 c4 04	 add	 esp, 4
  00525	3b f4		 cmp	 esi, esp
  00527	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0052c	a3 00 00 00 00	 mov	 DWORD PTR _glad_glTexParameterIuiv, eax

; 1622 : 	glad_glGetTexParameterIiv = (PFNGLGETTEXPARAMETERIIVPROC)load("glGetTexParameterIiv");

  00531	8b f4		 mov	 esi, esp
  00533	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@ODBJFHDD@glGetTexParameterIiv@
  00538	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0053b	83 c4 04	 add	 esp, 4
  0053e	3b f4		 cmp	 esi, esp
  00540	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00545	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetTexParameterIiv, eax

; 1623 : 	glad_glGetTexParameterIuiv = (PFNGLGETTEXPARAMETERIUIVPROC)load("glGetTexParameterIuiv");

  0054a	8b f4		 mov	 esi, esp
  0054c	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@MLODKKFL@glGetTexParameterIuiv@
  00551	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00554	83 c4 04	 add	 esp, 4
  00557	3b f4		 cmp	 esi, esp
  00559	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0055e	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetTexParameterIuiv, eax

; 1624 : 	glad_glClearBufferiv = (PFNGLCLEARBUFFERIVPROC)load("glClearBufferiv");

  00563	8b f4		 mov	 esi, esp
  00565	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@CGCJAEIN@glClearBufferiv@
  0056a	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0056d	83 c4 04	 add	 esp, 4
  00570	3b f4		 cmp	 esi, esp
  00572	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00577	a3 00 00 00 00	 mov	 DWORD PTR _glad_glClearBufferiv, eax

; 1625 : 	glad_glClearBufferuiv = (PFNGLCLEARBUFFERUIVPROC)load("glClearBufferuiv");

  0057c	8b f4		 mov	 esi, esp
  0057e	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@OHPPAEID@glClearBufferuiv@
  00583	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00586	83 c4 04	 add	 esp, 4
  00589	3b f4		 cmp	 esi, esp
  0058b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00590	a3 00 00 00 00	 mov	 DWORD PTR _glad_glClearBufferuiv, eax

; 1626 : 	glad_glClearBufferfv = (PFNGLCLEARBUFFERFVPROC)load("glClearBufferfv");

  00595	8b f4		 mov	 esi, esp
  00597	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@CNHFEDLA@glClearBufferfv@
  0059c	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0059f	83 c4 04	 add	 esp, 4
  005a2	3b f4		 cmp	 esi, esp
  005a4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  005a9	a3 00 00 00 00	 mov	 DWORD PTR _glad_glClearBufferfv, eax

; 1627 : 	glad_glClearBufferfi = (PFNGLCLEARBUFFERFIPROC)load("glClearBufferfi");

  005ae	8b f4		 mov	 esi, esp
  005b0	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@OACPENCO@glClearBufferfi@
  005b5	ff 55 08	 call	 DWORD PTR _load$[ebp]
  005b8	83 c4 04	 add	 esp, 4
  005bb	3b f4		 cmp	 esi, esp
  005bd	e8 00 00 00 00	 call	 __RTC_CheckEsp
  005c2	a3 00 00 00 00	 mov	 DWORD PTR _glad_glClearBufferfi, eax

; 1628 : 	glad_glGetStringi = (PFNGLGETSTRINGIPROC)load("glGetStringi");

  005c7	8b f4		 mov	 esi, esp
  005c9	68 00 00 00 00	 push	 OFFSET ??_C@_0N@PILJCBOD@glGetStringi@
  005ce	ff 55 08	 call	 DWORD PTR _load$[ebp]
  005d1	83 c4 04	 add	 esp, 4
  005d4	3b f4		 cmp	 esi, esp
  005d6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  005db	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetStringi, eax

; 1629 : 	glad_glIsRenderbuffer = (PFNGLISRENDERBUFFERPROC)load("glIsRenderbuffer");

  005e0	8b f4		 mov	 esi, esp
  005e2	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@DGGHKKOH@glIsRenderbuffer@
  005e7	ff 55 08	 call	 DWORD PTR _load$[ebp]
  005ea	83 c4 04	 add	 esp, 4
  005ed	3b f4		 cmp	 esi, esp
  005ef	e8 00 00 00 00	 call	 __RTC_CheckEsp
  005f4	a3 00 00 00 00	 mov	 DWORD PTR _glad_glIsRenderbuffer, eax

; 1630 : 	glad_glBindRenderbuffer = (PFNGLBINDRENDERBUFFERPROC)load("glBindRenderbuffer");

  005f9	8b f4		 mov	 esi, esp
  005fb	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@EPOPJGFA@glBindRenderbuffer@
  00600	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00603	83 c4 04	 add	 esp, 4
  00606	3b f4		 cmp	 esi, esp
  00608	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0060d	a3 00 00 00 00	 mov	 DWORD PTR _glad_glBindRenderbuffer, eax

; 1631 : 	glad_glDeleteRenderbuffers = (PFNGLDELETERENDERBUFFERSPROC)load("glDeleteRenderbuffers");

  00612	8b f4		 mov	 esi, esp
  00614	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@KKOKEJDE@glDeleteRenderbuffers@
  00619	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0061c	83 c4 04	 add	 esp, 4
  0061f	3b f4		 cmp	 esi, esp
  00621	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00626	a3 00 00 00 00	 mov	 DWORD PTR _glad_glDeleteRenderbuffers, eax

; 1632 : 	glad_glGenRenderbuffers = (PFNGLGENRENDERBUFFERSPROC)load("glGenRenderbuffers");

  0062b	8b f4		 mov	 esi, esp
  0062d	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@MIGEDNGJ@glGenRenderbuffers@
  00632	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00635	83 c4 04	 add	 esp, 4
  00638	3b f4		 cmp	 esi, esp
  0063a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0063f	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGenRenderbuffers, eax

; 1633 : 	glad_glRenderbufferStorage = (PFNGLRENDERBUFFERSTORAGEPROC)load("glRenderbufferStorage");

  00644	8b f4		 mov	 esi, esp
  00646	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@EOIILGMJ@glRenderbufferStorage@
  0064b	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0064e	83 c4 04	 add	 esp, 4
  00651	3b f4		 cmp	 esi, esp
  00653	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00658	a3 00 00 00 00	 mov	 DWORD PTR _glad_glRenderbufferStorage, eax

; 1634 : 	glad_glGetRenderbufferParameteriv = (PFNGLGETRENDERBUFFERPARAMETERIVPROC)load("glGetRenderbufferParameteriv");

  0065d	8b f4		 mov	 esi, esp
  0065f	68 00 00 00 00	 push	 OFFSET ??_C@_0BN@FGKAECKO@glGetRenderbufferParameteriv@
  00664	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00667	83 c4 04	 add	 esp, 4
  0066a	3b f4		 cmp	 esi, esp
  0066c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00671	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetRenderbufferParameteriv, eax

; 1635 : 	glad_glIsFramebuffer = (PFNGLISFRAMEBUFFERPROC)load("glIsFramebuffer");

  00676	8b f4		 mov	 esi, esp
  00678	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FGBIJCNH@glIsFramebuffer@
  0067d	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00680	83 c4 04	 add	 esp, 4
  00683	3b f4		 cmp	 esi, esp
  00685	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0068a	a3 00 00 00 00	 mov	 DWORD PTR _glad_glIsFramebuffer, eax

; 1636 : 	glad_glBindFramebuffer = (PFNGLBINDFRAMEBUFFERPROC)load("glBindFramebuffer");

  0068f	8b f4		 mov	 esi, esp
  00691	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@CJMIBNO@glBindFramebuffer@
  00696	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00699	83 c4 04	 add	 esp, 4
  0069c	3b f4		 cmp	 esi, esp
  0069e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  006a3	a3 00 00 00 00	 mov	 DWORD PTR _glad_glBindFramebuffer, eax

; 1637 : 	glad_glDeleteFramebuffers = (PFNGLDELETEFRAMEBUFFERSPROC)load("glDeleteFramebuffers");

  006a8	8b f4		 mov	 esi, esp
  006aa	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@DJNJENP@glDeleteFramebuffers@
  006af	ff 55 08	 call	 DWORD PTR _load$[ebp]
  006b2	83 c4 04	 add	 esp, 4
  006b5	3b f4		 cmp	 esi, esp
  006b7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  006bc	a3 00 00 00 00	 mov	 DWORD PTR _glad_glDeleteFramebuffers, eax

; 1638 : 	glad_glGenFramebuffers = (PFNGLGENFRAMEBUFFERSPROC)load("glGenFramebuffers");

  006c1	8b f4		 mov	 esi, esp
  006c3	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@FAPEBGID@glGenFramebuffers@
  006c8	ff 55 08	 call	 DWORD PTR _load$[ebp]
  006cb	83 c4 04	 add	 esp, 4
  006ce	3b f4		 cmp	 esi, esp
  006d0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  006d5	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGenFramebuffers, eax

; 1639 : 	glad_glCheckFramebufferStatus = (PFNGLCHECKFRAMEBUFFERSTATUSPROC)load("glCheckFramebufferStatus");

  006da	8b f4		 mov	 esi, esp
  006dc	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@GIOLHEAD@glCheckFramebufferStatus@
  006e1	ff 55 08	 call	 DWORD PTR _load$[ebp]
  006e4	83 c4 04	 add	 esp, 4
  006e7	3b f4		 cmp	 esi, esp
  006e9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  006ee	a3 00 00 00 00	 mov	 DWORD PTR _glad_glCheckFramebufferStatus, eax

; 1640 : 	glad_glFramebufferTexture1D = (PFNGLFRAMEBUFFERTEXTURE1DPROC)load("glFramebufferTexture1D");

  006f3	8b f4		 mov	 esi, esp
  006f5	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@JAMDNNBM@glFramebufferTexture1D@
  006fa	ff 55 08	 call	 DWORD PTR _load$[ebp]
  006fd	83 c4 04	 add	 esp, 4
  00700	3b f4		 cmp	 esi, esp
  00702	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00707	a3 00 00 00 00	 mov	 DWORD PTR _glad_glFramebufferTexture1D, eax

; 1641 : 	glad_glFramebufferTexture2D = (PFNGLFRAMEBUFFERTEXTURE2DPROC)load("glFramebufferTexture2D");

  0070c	8b f4		 mov	 esi, esp
  0070e	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@JCIFGDEF@glFramebufferTexture2D@
  00713	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00716	83 c4 04	 add	 esp, 4
  00719	3b f4		 cmp	 esi, esp
  0071b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00720	a3 00 00 00 00	 mov	 DWORD PTR _glad_glFramebufferTexture2D, eax

; 1642 : 	glad_glFramebufferTexture3D = (PFNGLFRAMEBUFFERTEXTURE3DPROC)load("glFramebufferTexture3D");

  00725	8b f4		 mov	 esi, esp
  00727	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@JDEHAJHC@glFramebufferTexture3D@
  0072c	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0072f	83 c4 04	 add	 esp, 4
  00732	3b f4		 cmp	 esi, esp
  00734	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00739	a3 00 00 00 00	 mov	 DWORD PTR _glad_glFramebufferTexture3D, eax

; 1643 : 	glad_glFramebufferRenderbuffer = (PFNGLFRAMEBUFFERRENDERBUFFERPROC)load("glFramebufferRenderbuffer");

  0073e	8b f4		 mov	 esi, esp
  00740	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@OJDINAOA@glFramebufferRenderbuffer@
  00745	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00748	83 c4 04	 add	 esp, 4
  0074b	3b f4		 cmp	 esi, esp
  0074d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00752	a3 00 00 00 00	 mov	 DWORD PTR _glad_glFramebufferRenderbuffer, eax

; 1644 : 	glad_glGetFramebufferAttachmentParameteriv = (PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC)load("glGetFramebufferAttachmentParameteriv");

  00757	8b f4		 mov	 esi, esp
  00759	68 00 00 00 00	 push	 OFFSET ??_C@_0CG@KLDGJEON@glGetFramebufferAttachmentParam@
  0075e	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00761	83 c4 04	 add	 esp, 4
  00764	3b f4		 cmp	 esi, esp
  00766	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0076b	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetFramebufferAttachmentParameteriv, eax

; 1645 : 	glad_glGenerateMipmap = (PFNGLGENERATEMIPMAPPROC)load("glGenerateMipmap");

  00770	8b f4		 mov	 esi, esp
  00772	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@BHNIMGDM@glGenerateMipmap@
  00777	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0077a	83 c4 04	 add	 esp, 4
  0077d	3b f4		 cmp	 esi, esp
  0077f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00784	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGenerateMipmap, eax

; 1646 : 	glad_glBlitFramebuffer = (PFNGLBLITFRAMEBUFFERPROC)load("glBlitFramebuffer");

  00789	8b f4		 mov	 esi, esp
  0078b	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@OANBDDEP@glBlitFramebuffer@
  00790	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00793	83 c4 04	 add	 esp, 4
  00796	3b f4		 cmp	 esi, esp
  00798	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0079d	a3 00 00 00 00	 mov	 DWORD PTR _glad_glBlitFramebuffer, eax

; 1647 : 	glad_glRenderbufferStorageMultisample = (PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC)load("glRenderbufferStorageMultisample");

  007a2	8b f4		 mov	 esi, esp
  007a4	68 00 00 00 00	 push	 OFFSET ??_C@_0CB@HNONLGJE@glRenderbufferStorageMultisampl@
  007a9	ff 55 08	 call	 DWORD PTR _load$[ebp]
  007ac	83 c4 04	 add	 esp, 4
  007af	3b f4		 cmp	 esi, esp
  007b1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  007b6	a3 00 00 00 00	 mov	 DWORD PTR _glad_glRenderbufferStorageMultisample, eax

; 1648 : 	glad_glFramebufferTextureLayer = (PFNGLFRAMEBUFFERTEXTURELAYERPROC)load("glFramebufferTextureLayer");

  007bb	8b f4		 mov	 esi, esp
  007bd	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@NIHIDBBO@glFramebufferTextureLayer@
  007c2	ff 55 08	 call	 DWORD PTR _load$[ebp]
  007c5	83 c4 04	 add	 esp, 4
  007c8	3b f4		 cmp	 esi, esp
  007ca	e8 00 00 00 00	 call	 __RTC_CheckEsp
  007cf	a3 00 00 00 00	 mov	 DWORD PTR _glad_glFramebufferTextureLayer, eax

; 1649 : 	glad_glMapBufferRange = (PFNGLMAPBUFFERRANGEPROC)load("glMapBufferRange");

  007d4	8b f4		 mov	 esi, esp
  007d6	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@EOHJGBIO@glMapBufferRange@
  007db	ff 55 08	 call	 DWORD PTR _load$[ebp]
  007de	83 c4 04	 add	 esp, 4
  007e1	3b f4		 cmp	 esi, esp
  007e3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  007e8	a3 00 00 00 00	 mov	 DWORD PTR _glad_glMapBufferRange, eax

; 1650 : 	glad_glFlushMappedBufferRange = (PFNGLFLUSHMAPPEDBUFFERRANGEPROC)load("glFlushMappedBufferRange");

  007ed	8b f4		 mov	 esi, esp
  007ef	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@NCDMGHKF@glFlushMappedBufferRange@
  007f4	ff 55 08	 call	 DWORD PTR _load$[ebp]
  007f7	83 c4 04	 add	 esp, 4
  007fa	3b f4		 cmp	 esi, esp
  007fc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00801	a3 00 00 00 00	 mov	 DWORD PTR _glad_glFlushMappedBufferRange, eax

; 1651 : 	glad_glBindVertexArray = (PFNGLBINDVERTEXARRAYPROC)load("glBindVertexArray");

  00806	8b f4		 mov	 esi, esp
  00808	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@LHBAHFAN@glBindVertexArray@
  0080d	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00810	83 c4 04	 add	 esp, 4
  00813	3b f4		 cmp	 esi, esp
  00815	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0081a	a3 00 00 00 00	 mov	 DWORD PTR _glad_glBindVertexArray, eax

; 1652 : 	glad_glDeleteVertexArrays = (PFNGLDELETEVERTEXARRAYSPROC)load("glDeleteVertexArrays");

  0081f	8b f4		 mov	 esi, esp
  00821	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@BMPCJLEF@glDeleteVertexArrays@
  00826	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00829	83 c4 04	 add	 esp, 4
  0082c	3b f4		 cmp	 esi, esp
  0082e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00833	a3 00 00 00 00	 mov	 DWORD PTR _glad_glDeleteVertexArrays, eax

; 1653 : 	glad_glGenVertexArrays = (PFNGLGENVERTEXARRAYSPROC)load("glGenVertexArrays");

  00838	8b f4		 mov	 esi, esp
  0083a	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@EPJLBJBJ@glGenVertexArrays@
  0083f	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00842	83 c4 04	 add	 esp, 4
  00845	3b f4		 cmp	 esi, esp
  00847	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0084c	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGenVertexArrays, eax

; 1654 : 	glad_glIsVertexArray = (PFNGLISVERTEXARRAYPROC)load("glIsVertexArray");

  00851	8b f4		 mov	 esi, esp
  00853	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@ODJEGGAE@glIsVertexArray@
  00858	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0085b	83 c4 04	 add	 esp, 4
  0085e	3b f4		 cmp	 esi, esp
  00860	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00865	a3 00 00 00 00	 mov	 DWORD PTR _glad_glIsVertexArray, eax
$LN1@load_GL_VE:

; 1655 : }

  0086a	5f		 pop	 edi
  0086b	5e		 pop	 esi
  0086c	5b		 pop	 ebx
  0086d	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00873	3b ec		 cmp	 ebp, esp
  00875	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0087a	8b e5		 mov	 esp, ebp
  0087c	5d		 pop	 ebp
  0087d	c3		 ret	 0
_load_GL_VERSION_3_0 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\Light\source\repos\Spacemonster\Spacemonster-code\glad\glad.c
;	COMDAT _load_GL_VERSION_2_1
_TEXT	SEGMENT
_load$ = 8						; size = 4
_load_GL_VERSION_2_1 PROC				; COMDAT

; 1560 : static void load_GL_VERSION_2_1(GLADloadproc load) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET __550F0BDD_glad@c
  00023	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1561 : 	if(!GLAD_GL_VERSION_2_1) return;

  00028	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _GLAD_GL_VERSION_2_1, 0
  0002f	75 05		 jne	 SHORT $LN2@load_GL_VE
  00031	e9 96 00 00 00	 jmp	 $LN1@load_GL_VE
$LN2@load_GL_VE:

; 1562 : 	glad_glUniformMatrix2x3fv = (PFNGLUNIFORMMATRIX2X3FVPROC)load("glUniformMatrix2x3fv");

  00036	8b f4		 mov	 esi, esp
  00038	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@KDDJMCDK@glUniformMatrix2x3fv@
  0003d	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00040	83 c4 04	 add	 esp, 4
  00043	3b f4		 cmp	 esi, esp
  00045	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004a	a3 00 00 00 00	 mov	 DWORD PTR _glad_glUniformMatrix2x3fv, eax

; 1563 : 	glad_glUniformMatrix3x2fv = (PFNGLUNIFORMMATRIX3X2FVPROC)load("glUniformMatrix3x2fv");

  0004f	8b f4		 mov	 esi, esp
  00051	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@NANJHGPK@glUniformMatrix3x2fv@
  00056	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00059	83 c4 04	 add	 esp, 4
  0005c	3b f4		 cmp	 esi, esp
  0005e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00063	a3 00 00 00 00	 mov	 DWORD PTR _glad_glUniformMatrix3x2fv, eax

; 1564 : 	glad_glUniformMatrix2x4fv = (PFNGLUNIFORMMATRIX2X4FVPROC)load("glUniformMatrix2x4fv");

  00068	8b f4		 mov	 esi, esp
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@DOOOPKID@glUniformMatrix2x4fv@
  0006f	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00072	83 c4 04	 add	 esp, 4
  00075	3b f4		 cmp	 esi, esp
  00077	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007c	a3 00 00 00 00	 mov	 DWORD PTR _glad_glUniformMatrix2x4fv, eax

; 1565 : 	glad_glUniformMatrix4x2fv = (PFNGLUNIFORMMATRIX4X2FVPROC)load("glUniformMatrix4x2fv");

  00081	8b f4		 mov	 esi, esp
  00083	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@MNNMEGEC@glUniformMatrix4x2fv@
  00088	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0008b	83 c4 04	 add	 esp, 4
  0008e	3b f4		 cmp	 esi, esp
  00090	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00095	a3 00 00 00 00	 mov	 DWORD PTR _glad_glUniformMatrix4x2fv, eax

; 1566 : 	glad_glUniformMatrix3x4fv = (PFNGLUNIFORMMATRIX3X4FVPROC)load("glUniformMatrix3x4fv");

  0009a	8b f4		 mov	 esi, esp
  0009c	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@PFLCCJCG@glUniformMatrix3x4fv@
  000a1	ff 55 08	 call	 DWORD PTR _load$[ebp]
  000a4	83 c4 04	 add	 esp, 4
  000a7	3b f4		 cmp	 esi, esp
  000a9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ae	a3 00 00 00 00	 mov	 DWORD PTR _glad_glUniformMatrix3x4fv, eax

; 1567 : 	glad_glUniformMatrix4x3fv = (PFNGLUNIFORMMATRIX4X3FVPROC)load("glUniformMatrix4x3fv");

  000b3	8b f4		 mov	 esi, esp
  000b5	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@HFGACBCH@glUniformMatrix4x3fv@
  000ba	ff 55 08	 call	 DWORD PTR _load$[ebp]
  000bd	83 c4 04	 add	 esp, 4
  000c0	3b f4		 cmp	 esi, esp
  000c2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c7	a3 00 00 00 00	 mov	 DWORD PTR _glad_glUniformMatrix4x3fv, eax
$LN1@load_GL_VE:

; 1568 : }

  000cc	5f		 pop	 edi
  000cd	5e		 pop	 esi
  000ce	5b		 pop	 ebx
  000cf	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  000d5	3b ec		 cmp	 ebp, esp
  000d7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000dc	8b e5		 mov	 esp, ebp
  000de	5d		 pop	 ebp
  000df	c3		 ret	 0
_load_GL_VERSION_2_1 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\Light\source\repos\Spacemonster\Spacemonster-code\glad\glad.c
;	COMDAT _load_GL_VERSION_2_0
_TEXT	SEGMENT
_load$ = 8						; size = 4
_load_GL_VERSION_2_0 PROC				; COMDAT

; 1464 : static void load_GL_VERSION_2_0(GLADloadproc load) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET __550F0BDD_glad@c
  00023	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1465 : 	if(!GLAD_GL_VERSION_2_0) return;

  00028	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _GLAD_GL_VERSION_2_0, 0
  0002f	75 05		 jne	 SHORT $LN2@load_GL_VE
  00031	e9 15 09 00 00	 jmp	 $LN1@load_GL_VE
$LN2@load_GL_VE:

; 1466 : 	glad_glBlendEquationSeparate = (PFNGLBLENDEQUATIONSEPARATEPROC)load("glBlendEquationSeparate");

  00036	8b f4		 mov	 esi, esp
  00038	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@JNHDNJAG@glBlendEquationSeparate@
  0003d	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00040	83 c4 04	 add	 esp, 4
  00043	3b f4		 cmp	 esi, esp
  00045	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004a	a3 00 00 00 00	 mov	 DWORD PTR _glad_glBlendEquationSeparate, eax

; 1467 : 	glad_glDrawBuffers = (PFNGLDRAWBUFFERSPROC)load("glDrawBuffers");

  0004f	8b f4		 mov	 esi, esp
  00051	68 00 00 00 00	 push	 OFFSET ??_C@_0O@COHJKDBH@glDrawBuffers@
  00056	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00059	83 c4 04	 add	 esp, 4
  0005c	3b f4		 cmp	 esi, esp
  0005e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00063	a3 00 00 00 00	 mov	 DWORD PTR _glad_glDrawBuffers, eax

; 1468 : 	glad_glStencilOpSeparate = (PFNGLSTENCILOPSEPARATEPROC)load("glStencilOpSeparate");

  00068	8b f4		 mov	 esi, esp
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@GAPLDNGF@glStencilOpSeparate@
  0006f	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00072	83 c4 04	 add	 esp, 4
  00075	3b f4		 cmp	 esi, esp
  00077	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007c	a3 00 00 00 00	 mov	 DWORD PTR _glad_glStencilOpSeparate, eax

; 1469 : 	glad_glStencilFuncSeparate = (PFNGLSTENCILFUNCSEPARATEPROC)load("glStencilFuncSeparate");

  00081	8b f4		 mov	 esi, esp
  00083	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@FCMNCEIA@glStencilFuncSeparate@
  00088	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0008b	83 c4 04	 add	 esp, 4
  0008e	3b f4		 cmp	 esi, esp
  00090	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00095	a3 00 00 00 00	 mov	 DWORD PTR _glad_glStencilFuncSeparate, eax

; 1470 : 	glad_glStencilMaskSeparate = (PFNGLSTENCILMASKSEPARATEPROC)load("glStencilMaskSeparate");

  0009a	8b f4		 mov	 esi, esp
  0009c	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@MMKPIEJI@glStencilMaskSeparate@
  000a1	ff 55 08	 call	 DWORD PTR _load$[ebp]
  000a4	83 c4 04	 add	 esp, 4
  000a7	3b f4		 cmp	 esi, esp
  000a9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ae	a3 00 00 00 00	 mov	 DWORD PTR _glad_glStencilMaskSeparate, eax

; 1471 : 	glad_glAttachShader = (PFNGLATTACHSHADERPROC)load("glAttachShader");

  000b3	8b f4		 mov	 esi, esp
  000b5	68 00 00 00 00	 push	 OFFSET ??_C@_0P@LDMLEABL@glAttachShader@
  000ba	ff 55 08	 call	 DWORD PTR _load$[ebp]
  000bd	83 c4 04	 add	 esp, 4
  000c0	3b f4		 cmp	 esi, esp
  000c2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c7	a3 00 00 00 00	 mov	 DWORD PTR _glad_glAttachShader, eax

; 1472 : 	glad_glBindAttribLocation = (PFNGLBINDATTRIBLOCATIONPROC)load("glBindAttribLocation");

  000cc	8b f4		 mov	 esi, esp
  000ce	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@MHKEFIHM@glBindAttribLocation@
  000d3	ff 55 08	 call	 DWORD PTR _load$[ebp]
  000d6	83 c4 04	 add	 esp, 4
  000d9	3b f4		 cmp	 esi, esp
  000db	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e0	a3 00 00 00 00	 mov	 DWORD PTR _glad_glBindAttribLocation, eax

; 1473 : 	glad_glCompileShader = (PFNGLCOMPILESHADERPROC)load("glCompileShader");

  000e5	8b f4		 mov	 esi, esp
  000e7	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@DGIEGONF@glCompileShader@
  000ec	ff 55 08	 call	 DWORD PTR _load$[ebp]
  000ef	83 c4 04	 add	 esp, 4
  000f2	3b f4		 cmp	 esi, esp
  000f4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f9	a3 00 00 00 00	 mov	 DWORD PTR _glad_glCompileShader, eax

; 1474 : 	glad_glCreateProgram = (PFNGLCREATEPROGRAMPROC)load("glCreateProgram");

  000fe	8b f4		 mov	 esi, esp
  00100	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FLKLHNKP@glCreateProgram@
  00105	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00108	83 c4 04	 add	 esp, 4
  0010b	3b f4		 cmp	 esi, esp
  0010d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00112	a3 00 00 00 00	 mov	 DWORD PTR _glad_glCreateProgram, eax

; 1475 : 	glad_glCreateShader = (PFNGLCREATESHADERPROC)load("glCreateShader");

  00117	8b f4		 mov	 esi, esp
  00119	68 00 00 00 00	 push	 OFFSET ??_C@_0P@HGHBNC@glCreateShader@
  0011e	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00121	83 c4 04	 add	 esp, 4
  00124	3b f4		 cmp	 esi, esp
  00126	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0012b	a3 00 00 00 00	 mov	 DWORD PTR _glad_glCreateShader, eax

; 1476 : 	glad_glDeleteProgram = (PFNGLDELETEPROGRAMPROC)load("glDeleteProgram");

  00130	8b f4		 mov	 esi, esp
  00132	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@NKGCDOPO@glDeleteProgram@
  00137	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0013a	83 c4 04	 add	 esp, 4
  0013d	3b f4		 cmp	 esi, esp
  0013f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00144	a3 00 00 00 00	 mov	 DWORD PTR _glad_glDeleteProgram, eax

; 1477 : 	glad_glDeleteShader = (PFNGLDELETESHADERPROC)load("glDeleteShader");

  00149	8b f4		 mov	 esi, esp
  0014b	68 00 00 00 00	 push	 OFFSET ??_C@_0P@HHCDONAG@glDeleteShader@
  00150	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00153	83 c4 04	 add	 esp, 4
  00156	3b f4		 cmp	 esi, esp
  00158	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0015d	a3 00 00 00 00	 mov	 DWORD PTR _glad_glDeleteShader, eax

; 1478 : 	glad_glDetachShader = (PFNGLDETACHSHADERPROC)load("glDetachShader");

  00162	8b f4		 mov	 esi, esp
  00164	68 00 00 00 00	 push	 OFFSET ??_C@_0P@DJFJFCJL@glDetachShader@
  00169	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0016c	83 c4 04	 add	 esp, 4
  0016f	3b f4		 cmp	 esi, esp
  00171	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00176	a3 00 00 00 00	 mov	 DWORD PTR _glad_glDetachShader, eax

; 1479 : 	glad_glDisableVertexAttribArray = (PFNGLDISABLEVERTEXATTRIBARRAYPROC)load("glDisableVertexAttribArray");

  0017b	8b f4		 mov	 esi, esp
  0017d	68 00 00 00 00	 push	 OFFSET ??_C@_0BL@NKHLOFFF@glDisableVertexAttribArray@
  00182	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00185	83 c4 04	 add	 esp, 4
  00188	3b f4		 cmp	 esi, esp
  0018a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0018f	a3 00 00 00 00	 mov	 DWORD PTR _glad_glDisableVertexAttribArray, eax

; 1480 : 	glad_glEnableVertexAttribArray = (PFNGLENABLEVERTEXATTRIBARRAYPROC)load("glEnableVertexAttribArray");

  00194	8b f4		 mov	 esi, esp
  00196	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@EHBAHNHE@glEnableVertexAttribArray@
  0019b	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0019e	83 c4 04	 add	 esp, 4
  001a1	3b f4		 cmp	 esi, esp
  001a3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001a8	a3 00 00 00 00	 mov	 DWORD PTR _glad_glEnableVertexAttribArray, eax

; 1481 : 	glad_glGetActiveAttrib = (PFNGLGETACTIVEATTRIBPROC)load("glGetActiveAttrib");

  001ad	8b f4		 mov	 esi, esp
  001af	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@MBALAOHF@glGetActiveAttrib@
  001b4	ff 55 08	 call	 DWORD PTR _load$[ebp]
  001b7	83 c4 04	 add	 esp, 4
  001ba	3b f4		 cmp	 esi, esp
  001bc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001c1	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetActiveAttrib, eax

; 1482 : 	glad_glGetActiveUniform = (PFNGLGETACTIVEUNIFORMPROC)load("glGetActiveUniform");

  001c6	8b f4		 mov	 esi, esp
  001c8	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@NIMHLLKN@glGetActiveUniform@
  001cd	ff 55 08	 call	 DWORD PTR _load$[ebp]
  001d0	83 c4 04	 add	 esp, 4
  001d3	3b f4		 cmp	 esi, esp
  001d5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001da	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetActiveUniform, eax

; 1483 : 	glad_glGetAttachedShaders = (PFNGLGETATTACHEDSHADERSPROC)load("glGetAttachedShaders");

  001df	8b f4		 mov	 esi, esp
  001e1	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@GHMDGFEM@glGetAttachedShaders@
  001e6	ff 55 08	 call	 DWORD PTR _load$[ebp]
  001e9	83 c4 04	 add	 esp, 4
  001ec	3b f4		 cmp	 esi, esp
  001ee	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001f3	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetAttachedShaders, eax

; 1484 : 	glad_glGetAttribLocation = (PFNGLGETATTRIBLOCATIONPROC)load("glGetAttribLocation");

  001f8	8b f4		 mov	 esi, esp
  001fa	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@BEPGJDMM@glGetAttribLocation@
  001ff	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00202	83 c4 04	 add	 esp, 4
  00205	3b f4		 cmp	 esi, esp
  00207	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0020c	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetAttribLocation, eax

; 1485 : 	glad_glGetProgramiv = (PFNGLGETPROGRAMIVPROC)load("glGetProgramiv");

  00211	8b f4		 mov	 esi, esp
  00213	68 00 00 00 00	 push	 OFFSET ??_C@_0P@FMMDFLCO@glGetProgramiv@
  00218	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0021b	83 c4 04	 add	 esp, 4
  0021e	3b f4		 cmp	 esi, esp
  00220	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00225	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetProgramiv, eax

; 1486 : 	glad_glGetProgramInfoLog = (PFNGLGETPROGRAMINFOLOGPROC)load("glGetProgramInfoLog");

  0022a	8b f4		 mov	 esi, esp
  0022c	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@DHGHAJFL@glGetProgramInfoLog@
  00231	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00234	83 c4 04	 add	 esp, 4
  00237	3b f4		 cmp	 esi, esp
  00239	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0023e	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetProgramInfoLog, eax

; 1487 : 	glad_glGetShaderiv = (PFNGLGETSHADERIVPROC)load("glGetShaderiv");

  00243	8b f4		 mov	 esi, esp
  00245	68 00 00 00 00	 push	 OFFSET ??_C@_0O@JBDFPDMG@glGetShaderiv@
  0024a	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0024d	83 c4 04	 add	 esp, 4
  00250	3b f4		 cmp	 esi, esp
  00252	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00257	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetShaderiv, eax

; 1488 : 	glad_glGetShaderInfoLog = (PFNGLGETSHADERINFOLOGPROC)load("glGetShaderInfoLog");

  0025c	8b f4		 mov	 esi, esp
  0025e	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@GIABBCMO@glGetShaderInfoLog@
  00263	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00266	83 c4 04	 add	 esp, 4
  00269	3b f4		 cmp	 esi, esp
  0026b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00270	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetShaderInfoLog, eax

; 1489 : 	glad_glGetShaderSource = (PFNGLGETSHADERSOURCEPROC)load("glGetShaderSource");

  00275	8b f4		 mov	 esi, esp
  00277	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@ELEIFJEL@glGetShaderSource@
  0027c	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0027f	83 c4 04	 add	 esp, 4
  00282	3b f4		 cmp	 esi, esp
  00284	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00289	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetShaderSource, eax

; 1490 : 	glad_glGetUniformLocation = (PFNGLGETUNIFORMLOCATIONPROC)load("glGetUniformLocation");

  0028e	8b f4		 mov	 esi, esp
  00290	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@KIOPGICP@glGetUniformLocation@
  00295	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00298	83 c4 04	 add	 esp, 4
  0029b	3b f4		 cmp	 esi, esp
  0029d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002a2	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetUniformLocation, eax

; 1491 : 	glad_glGetUniformfv = (PFNGLGETUNIFORMFVPROC)load("glGetUniformfv");

  002a7	8b f4		 mov	 esi, esp
  002a9	68 00 00 00 00	 push	 OFFSET ??_C@_0P@DFCJIBG@glGetUniformfv@
  002ae	ff 55 08	 call	 DWORD PTR _load$[ebp]
  002b1	83 c4 04	 add	 esp, 4
  002b4	3b f4		 cmp	 esi, esp
  002b6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002bb	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetUniformfv, eax

; 1492 : 	glad_glGetUniformiv = (PFNGLGETUNIFORMIVPROC)load("glGetUniformiv");

  002c0	8b f4		 mov	 esi, esp
  002c2	68 00 00 00 00	 push	 OFFSET ??_C@_0P@IAONPCL@glGetUniformiv@
  002c7	ff 55 08	 call	 DWORD PTR _load$[ebp]
  002ca	83 c4 04	 add	 esp, 4
  002cd	3b f4		 cmp	 esi, esp
  002cf	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002d4	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetUniformiv, eax

; 1493 : 	glad_glGetVertexAttribdv = (PFNGLGETVERTEXATTRIBDVPROC)load("glGetVertexAttribdv");

  002d9	8b f4		 mov	 esi, esp
  002db	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@HDPMJMIN@glGetVertexAttribdv@
  002e0	ff 55 08	 call	 DWORD PTR _load$[ebp]
  002e3	83 c4 04	 add	 esp, 4
  002e6	3b f4		 cmp	 esi, esp
  002e8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002ed	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetVertexAttribdv, eax

; 1494 : 	glad_glGetVertexAttribfv = (PFNGLGETVERTEXATTRIBFVPROC)load("glGetVertexAttribfv");

  002f2	8b f4		 mov	 esi, esp
  002f4	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@HAHIEIOD@glGetVertexAttribfv@
  002f9	ff 55 08	 call	 DWORD PTR _load$[ebp]
  002fc	83 c4 04	 add	 esp, 4
  002ff	3b f4		 cmp	 esi, esp
  00301	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00306	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetVertexAttribfv, eax

; 1495 : 	glad_glGetVertexAttribiv = (PFNGLGETVERTEXATTRIBIVPROC)load("glGetVertexAttribiv");

  0030b	8b f4		 mov	 esi, esp
  0030d	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@HLCEAPNO@glGetVertexAttribiv@
  00312	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00315	83 c4 04	 add	 esp, 4
  00318	3b f4		 cmp	 esi, esp
  0031a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0031f	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetVertexAttribiv, eax

; 1496 : 	glad_glGetVertexAttribPointerv = (PFNGLGETVERTEXATTRIBPOINTERVPROC)load("glGetVertexAttribPointerv");

  00324	8b f4		 mov	 esi, esp
  00326	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@DOJMENLD@glGetVertexAttribPointerv@
  0032b	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0032e	83 c4 04	 add	 esp, 4
  00331	3b f4		 cmp	 esi, esp
  00333	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00338	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetVertexAttribPointerv, eax

; 1497 : 	glad_glIsProgram = (PFNGLISPROGRAMPROC)load("glIsProgram");

  0033d	8b f4		 mov	 esi, esp
  0033f	68 00 00 00 00	 push	 OFFSET ??_C@_0M@INLOJDGO@glIsProgram@
  00344	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00347	83 c4 04	 add	 esp, 4
  0034a	3b f4		 cmp	 esi, esp
  0034c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00351	a3 00 00 00 00	 mov	 DWORD PTR _glad_glIsProgram, eax

; 1498 : 	glad_glIsShader = (PFNGLISSHADERPROC)load("glIsShader");

  00356	8b f4		 mov	 esi, esp
  00358	68 00 00 00 00	 push	 OFFSET ??_C@_0L@MDDLFIHC@glIsShader@
  0035d	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00360	83 c4 04	 add	 esp, 4
  00363	3b f4		 cmp	 esi, esp
  00365	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0036a	a3 00 00 00 00	 mov	 DWORD PTR _glad_glIsShader, eax

; 1499 : 	glad_glLinkProgram = (PFNGLLINKPROGRAMPROC)load("glLinkProgram");

  0036f	8b f4		 mov	 esi, esp
  00371	68 00 00 00 00	 push	 OFFSET ??_C@_0O@PIOEEBPO@glLinkProgram@
  00376	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00379	83 c4 04	 add	 esp, 4
  0037c	3b f4		 cmp	 esi, esp
  0037e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00383	a3 00 00 00 00	 mov	 DWORD PTR _glad_glLinkProgram, eax

; 1500 : 	glad_glShaderSource = (PFNGLSHADERSOURCEPROC)load("glShaderSource");

  00388	8b f4		 mov	 esi, esp
  0038a	68 00 00 00 00	 push	 OFFSET ??_C@_0P@DFHCPFMO@glShaderSource@
  0038f	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00392	83 c4 04	 add	 esp, 4
  00395	3b f4		 cmp	 esi, esp
  00397	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0039c	a3 00 00 00 00	 mov	 DWORD PTR _glad_glShaderSource, eax

; 1501 : 	glad_glUseProgram = (PFNGLUSEPROGRAMPROC)load("glUseProgram");

  003a1	8b f4		 mov	 esi, esp
  003a3	68 00 00 00 00	 push	 OFFSET ??_C@_0N@ICBDHBI@glUseProgram@
  003a8	ff 55 08	 call	 DWORD PTR _load$[ebp]
  003ab	83 c4 04	 add	 esp, 4
  003ae	3b f4		 cmp	 esi, esp
  003b0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003b5	a3 00 00 00 00	 mov	 DWORD PTR _glad_glUseProgram, eax

; 1502 : 	glad_glUniform1f = (PFNGLUNIFORM1FPROC)load("glUniform1f");

  003ba	8b f4		 mov	 esi, esp
  003bc	68 00 00 00 00	 push	 OFFSET ??_C@_0M@MLICAPOF@glUniform1f@
  003c1	ff 55 08	 call	 DWORD PTR _load$[ebp]
  003c4	83 c4 04	 add	 esp, 4
  003c7	3b f4		 cmp	 esi, esp
  003c9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003ce	a3 00 00 00 00	 mov	 DWORD PTR _glad_glUniform1f, eax

; 1503 : 	glad_glUniform2f = (PFNGLUNIFORM2FPROC)load("glUniform2f");

  003d3	8b f4		 mov	 esi, esp
  003d5	68 00 00 00 00	 push	 OFFSET ??_C@_0M@MJMELBLM@glUniform2f@
  003da	ff 55 08	 call	 DWORD PTR _load$[ebp]
  003dd	83 c4 04	 add	 esp, 4
  003e0	3b f4		 cmp	 esi, esp
  003e2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003e7	a3 00 00 00 00	 mov	 DWORD PTR _glad_glUniform2f, eax

; 1504 : 	glad_glUniform3f = (PFNGLUNIFORM3FPROC)load("glUniform3f");

  003ec	8b f4		 mov	 esi, esp
  003ee	68 00 00 00 00	 push	 OFFSET ??_C@_0M@MIAGNLIL@glUniform3f@
  003f3	ff 55 08	 call	 DWORD PTR _load$[ebp]
  003f6	83 c4 04	 add	 esp, 4
  003f9	3b f4		 cmp	 esi, esp
  003fb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00400	a3 00 00 00 00	 mov	 DWORD PTR _glad_glUniform3f, eax

; 1505 : 	glad_glUniform4f = (PFNGLUNIFORM4FPROC)load("glUniform4f");

  00405	8b f4		 mov	 esi, esp
  00407	68 00 00 00 00	 push	 OFFSET ??_C@_0M@MNEJMNAO@glUniform4f@
  0040c	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0040f	83 c4 04	 add	 esp, 4
  00412	3b f4		 cmp	 esi, esp
  00414	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00419	a3 00 00 00 00	 mov	 DWORD PTR _glad_glUniform4f, eax

; 1506 : 	glad_glUniform1i = (PFNGLUNIFORM1IPROC)load("glUniform1i");

  0041e	8b f4		 mov	 esi, esp
  00420	68 00 00 00 00	 push	 OFFSET ??_C@_0M@EMBKBDCK@glUniform1i@
  00425	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00428	83 c4 04	 add	 esp, 4
  0042b	3b f4		 cmp	 esi, esp
  0042d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00432	a3 00 00 00 00	 mov	 DWORD PTR _glad_glUniform1i, eax

; 1507 : 	glad_glUniform2i = (PFNGLUNIFORM2IPROC)load("glUniform2i");

  00437	8b f4		 mov	 esi, esp
  00439	68 00 00 00 00	 push	 OFFSET ??_C@_0M@EOFMKNHD@glUniform2i@
  0043e	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00441	83 c4 04	 add	 esp, 4
  00444	3b f4		 cmp	 esi, esp
  00446	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0044b	a3 00 00 00 00	 mov	 DWORD PTR _glad_glUniform2i, eax

; 1508 : 	glad_glUniform3i = (PFNGLUNIFORM3IPROC)load("glUniform3i");

  00450	8b f4		 mov	 esi, esp
  00452	68 00 00 00 00	 push	 OFFSET ??_C@_0M@EPJOMHEE@glUniform3i@
  00457	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0045a	83 c4 04	 add	 esp, 4
  0045d	3b f4		 cmp	 esi, esp
  0045f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00464	a3 00 00 00 00	 mov	 DWORD PTR _glad_glUniform3i, eax

; 1509 : 	glad_glUniform4i = (PFNGLUNIFORM4IPROC)load("glUniform4i");

  00469	8b f4		 mov	 esi, esp
  0046b	68 00 00 00 00	 push	 OFFSET ??_C@_0M@EKNBNBMB@glUniform4i@
  00470	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00473	83 c4 04	 add	 esp, 4
  00476	3b f4		 cmp	 esi, esp
  00478	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0047d	a3 00 00 00 00	 mov	 DWORD PTR _glad_glUniform4i, eax

; 1510 : 	glad_glUniform1fv = (PFNGLUNIFORM1FVPROC)load("glUniform1fv");

  00482	8b f4		 mov	 esi, esp
  00484	68 00 00 00 00	 push	 OFFSET ??_C@_0N@KJMOEKII@glUniform1fv@
  00489	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0048c	83 c4 04	 add	 esp, 4
  0048f	3b f4		 cmp	 esi, esp
  00491	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00496	a3 00 00 00 00	 mov	 DWORD PTR _glad_glUniform1fv, eax

; 1511 : 	glad_glUniform2fv = (PFNGLUNIFORM2FVPROC)load("glUniform2fv");

  0049b	8b f4		 mov	 esi, esp
  0049d	68 00 00 00 00	 push	 OFFSET ??_C@_0N@LLHLOFGG@glUniform2fv@
  004a2	ff 55 08	 call	 DWORD PTR _load$[ebp]
  004a5	83 c4 04	 add	 esp, 4
  004a8	3b f4		 cmp	 esi, esp
  004aa	e8 00 00 00 00	 call	 __RTC_CheckEsp
  004af	a3 00 00 00 00	 mov	 DWORD PTR _glad_glUniform2fv, eax

; 1512 : 	glad_glUniform3fv = (PFNGLUNIFORM3FVPROC)load("glUniform3fv");

  004b4	8b f4		 mov	 esi, esp
  004b6	68 00 00 00 00	 push	 OFFSET ??_C@_0N@DMHICAD@glUniform3fv@
  004bb	ff 55 08	 call	 DWORD PTR _load$[ebp]
  004be	83 c4 04	 add	 esp, 4
  004c1	3b f4		 cmp	 esi, esp
  004c3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  004c8	a3 00 00 00 00	 mov	 DWORD PTR _glad_glUniform3fv, eax

; 1513 : 	glad_glUniform4fv = (PFNGLUNIFORM4FVPROC)load("glUniform4fv");

  004cd	8b f4		 mov	 esi, esp
  004cf	68 00 00 00 00	 push	 OFFSET ??_C@_0N@JOBALKLK@glUniform4fv@
  004d4	ff 55 08	 call	 DWORD PTR _load$[ebp]
  004d7	83 c4 04	 add	 esp, 4
  004da	3b f4		 cmp	 esi, esp
  004dc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  004e1	a3 00 00 00 00	 mov	 DWORD PTR _glad_glUniform4fv, eax

; 1514 : 	glad_glUniform1iv = (PFNGLUNIFORM1IVPROC)load("glUniform1iv");

  004e6	8b f4		 mov	 esi, esp
  004e8	68 00 00 00 00	 push	 OFFSET ??_C@_0N@KCJCANLF@glUniform1iv@
  004ed	ff 55 08	 call	 DWORD PTR _load$[ebp]
  004f0	83 c4 04	 add	 esp, 4
  004f3	3b f4		 cmp	 esi, esp
  004f5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  004fa	a3 00 00 00 00	 mov	 DWORD PTR _glad_glUniform1iv, eax

; 1515 : 	glad_glUniform2iv = (PFNGLUNIFORM2IVPROC)load("glUniform2iv");

  004ff	8b f4		 mov	 esi, esp
  00501	68 00 00 00 00	 push	 OFFSET ??_C@_0N@LACHKCFL@glUniform2iv@
  00506	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00509	83 c4 04	 add	 esp, 4
  0050c	3b f4		 cmp	 esi, esp
  0050e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00513	a3 00 00 00 00	 mov	 DWORD PTR _glad_glUniform2iv, eax

; 1516 : 	glad_glUniform3iv = (PFNGLUNIFORM3IVPROC)load("glUniform3iv");

  00518	8b f4		 mov	 esi, esp
  0051a	68 00 00 00 00	 push	 OFFSET ??_C@_0N@IJLMFDO@glUniform3iv@
  0051f	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00522	83 c4 04	 add	 esp, 4
  00525	3b f4		 cmp	 esi, esp
  00527	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0052c	a3 00 00 00 00	 mov	 DWORD PTR _glad_glUniform3iv, eax

; 1517 : 	glad_glUniform4iv = (PFNGLUNIFORM4IVPROC)load("glUniform4iv");

  00531	8b f4		 mov	 esi, esp
  00533	68 00 00 00 00	 push	 OFFSET ??_C@_0N@JFEMPNIH@glUniform4iv@
  00538	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0053b	83 c4 04	 add	 esp, 4
  0053e	3b f4		 cmp	 esi, esp
  00540	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00545	a3 00 00 00 00	 mov	 DWORD PTR _glad_glUniform4iv, eax

; 1518 : 	glad_glUniformMatrix2fv = (PFNGLUNIFORMMATRIX2FVPROC)load("glUniformMatrix2fv");

  0054a	8b f4		 mov	 esi, esp
  0054c	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@JIBJELHD@glUniformMatrix2fv@
  00551	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00554	83 c4 04	 add	 esp, 4
  00557	3b f4		 cmp	 esi, esp
  00559	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0055e	a3 00 00 00 00	 mov	 DWORD PTR _glad_glUniformMatrix2fv, eax

; 1519 : 	glad_glUniformMatrix3fv = (PFNGLUNIFORMMATRIX3FVPROC)load("glUniformMatrix3fv");

  00563	8b f4		 mov	 esi, esp
  00565	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@CAKFCMBG@glUniformMatrix3fv@
  0056a	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0056d	83 c4 04	 add	 esp, 4
  00570	3b f4		 cmp	 esi, esp
  00572	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00577	a3 00 00 00 00	 mov	 DWORD PTR _glad_glUniformMatrix3fv, eax

; 1520 : 	glad_glUniformMatrix4fv = (PFNGLUNIFORMMATRIX4FVPROC)load("glUniformMatrix4fv");

  0057c	8b f4		 mov	 esi, esp
  0057e	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@LNHCBEKP@glUniformMatrix4fv@
  00583	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00586	83 c4 04	 add	 esp, 4
  00589	3b f4		 cmp	 esi, esp
  0058b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00590	a3 00 00 00 00	 mov	 DWORD PTR _glad_glUniformMatrix4fv, eax

; 1521 : 	glad_glValidateProgram = (PFNGLVALIDATEPROGRAMPROC)load("glValidateProgram");

  00595	8b f4		 mov	 esi, esp
  00597	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@MAPGDLJK@glValidateProgram@
  0059c	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0059f	83 c4 04	 add	 esp, 4
  005a2	3b f4		 cmp	 esi, esp
  005a4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  005a9	a3 00 00 00 00	 mov	 DWORD PTR _glad_glValidateProgram, eax

; 1522 : 	glad_glVertexAttrib1d = (PFNGLVERTEXATTRIB1DPROC)load("glVertexAttrib1d");

  005ae	8b f4		 mov	 esi, esp
  005b0	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@PIOLPNPC@glVertexAttrib1d@
  005b5	ff 55 08	 call	 DWORD PTR _load$[ebp]
  005b8	83 c4 04	 add	 esp, 4
  005bb	3b f4		 cmp	 esi, esp
  005bd	e8 00 00 00 00	 call	 __RTC_CheckEsp
  005c2	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertexAttrib1d, eax

; 1523 : 	glad_glVertexAttrib1dv = (PFNGLVERTEXATTRIB1DVPROC)load("glVertexAttrib1dv");

  005c7	8b f4		 mov	 esi, esp
  005c9	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@CKCOKGLN@glVertexAttrib1dv@
  005ce	ff 55 08	 call	 DWORD PTR _load$[ebp]
  005d1	83 c4 04	 add	 esp, 4
  005d4	3b f4		 cmp	 esi, esp
  005d6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  005db	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertexAttrib1dv, eax

; 1524 : 	glad_glVertexAttrib1f = (PFNGLVERTEXATTRIB1FPROC)load("glVertexAttrib1f");

  005e0	8b f4		 mov	 esi, esp
  005e2	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@MKNNJPHA@glVertexAttrib1f@
  005e7	ff 55 08	 call	 DWORD PTR _load$[ebp]
  005ea	83 c4 04	 add	 esp, 4
  005ed	3b f4		 cmp	 esi, esp
  005ef	e8 00 00 00 00	 call	 __RTC_CheckEsp
  005f4	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertexAttrib1f, eax

; 1525 : 	glad_glVertexAttrib1fv = (PFNGLVERTEXATTRIB1FVPROC)load("glVertexAttrib1fv");

  005f9	8b f4		 mov	 esi, esp
  005fb	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@CJKKHCND@glVertexAttrib1fv@
  00600	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00603	83 c4 04	 add	 esp, 4
  00606	3b f4		 cmp	 esi, esp
  00608	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0060d	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertexAttrib1fv, eax

; 1526 : 	glad_glVertexAttrib1s = (PFNGLVERTEXATTRIB1SPROC)load("glVertexAttrib1s");

  00612	8b f4		 mov	 esi, esp
  00614	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@PNGIHJGE@glVertexAttrib1s@
  00619	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0061c	83 c4 04	 add	 esp, 4
  0061f	3b f4		 cmp	 esi, esp
  00621	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00626	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertexAttrib1s, eax

; 1527 : 	glad_glVertexAttrib1sv = (PFNGLVERTEXATTRIB1SVPROC)load("glVertexAttrib1sv");

  0062b	8b f4		 mov	 esi, esp
  0062d	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@DDEHBDEI@glVertexAttrib1sv@
  00632	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00635	83 c4 04	 add	 esp, 4
  00638	3b f4		 cmp	 esi, esp
  0063a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0063f	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertexAttrib1sv, eax

; 1528 : 	glad_glVertexAttrib2d = (PFNGLVERTEXATTRIB2DPROC)load("glVertexAttrib2d");

  00644	8b f4		 mov	 esi, esp
  00646	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@PKKNEDKL@glVertexAttrib2d@
  0064b	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0064e	83 c4 04	 add	 esp, 4
  00651	3b f4		 cmp	 esi, esp
  00653	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00658	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertexAttrib2d, eax

; 1529 : 	glad_glVertexAttrib2dv = (PFNGLVERTEXATTRIB2DVPROC)load("glVertexAttrib2dv");

  0065d	8b f4		 mov	 esi, esp
  0065f	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@DIJLAJFD@glVertexAttrib2dv@
  00664	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00667	83 c4 04	 add	 esp, 4
  0066a	3b f4		 cmp	 esi, esp
  0066c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00671	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertexAttrib2dv, eax

; 1530 : 	glad_glVertexAttrib2f = (PFNGLVERTEXATTRIB2FPROC)load("glVertexAttrib2f");

  00676	8b f4		 mov	 esi, esp
  00678	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@MIJLCBCJ@glVertexAttrib2f@
  0067d	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00680	83 c4 04	 add	 esp, 4
  00683	3b f4		 cmp	 esi, esp
  00685	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0068a	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertexAttrib2f, eax

; 1531 : 	glad_glVertexAttrib2fv = (PFNGLVERTEXATTRIB2FVPROC)load("glVertexAttrib2fv");

  0068f	8b f4		 mov	 esi, esp
  00691	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@DLBPNNDN@glVertexAttrib2fv@
  00696	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00699	83 c4 04	 add	 esp, 4
  0069c	3b f4		 cmp	 esi, esp
  0069e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  006a3	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertexAttrib2fv, eax

; 1532 : 	glad_glVertexAttrib2s = (PFNGLVERTEXATTRIB2SPROC)load("glVertexAttrib2s");

  006a8	8b f4		 mov	 esi, esp
  006aa	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@PPCOMHDN@glVertexAttrib2s@
  006af	ff 55 08	 call	 DWORD PTR _load$[ebp]
  006b2	83 c4 04	 add	 esp, 4
  006b5	3b f4		 cmp	 esi, esp
  006b7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  006bc	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertexAttrib2s, eax

; 1533 : 	glad_glVertexAttrib2sv = (PFNGLVERTEXATTRIB2SVPROC)load("glVertexAttrib2sv");

  006c1	8b f4		 mov	 esi, esp
  006c3	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@CBPCLMKG@glVertexAttrib2sv@
  006c8	ff 55 08	 call	 DWORD PTR _load$[ebp]
  006cb	83 c4 04	 add	 esp, 4
  006ce	3b f4		 cmp	 esi, esp
  006d0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  006d5	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertexAttrib2sv, eax

; 1534 : 	glad_glVertexAttrib3d = (PFNGLVERTEXATTRIB3DPROC)load("glVertexAttrib3d");

  006da	8b f4		 mov	 esi, esp
  006dc	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@PLGPCJJM@glVertexAttrib3d@
  006e1	ff 55 08	 call	 DWORD PTR _load$[ebp]
  006e4	83 c4 04	 add	 esp, 4
  006e7	3b f4		 cmp	 esi, esp
  006e9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  006ee	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertexAttrib3d, eax

; 1535 : 	glad_glVertexAttrib3dv = (PFNGLVERTEXATTRIB3DVPROC)load("glVertexAttrib3dv");

  006f3	8b f4		 mov	 esi, esp
  006f5	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@IACHGODG@glVertexAttrib3dv@
  006fa	ff 55 08	 call	 DWORD PTR _load$[ebp]
  006fd	83 c4 04	 add	 esp, 4
  00700	3b f4		 cmp	 esi, esp
  00702	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00707	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertexAttrib3dv, eax

; 1536 : 	glad_glVertexAttrib3f = (PFNGLVERTEXATTRIB3FPROC)load("glVertexAttrib3f");

  0070c	8b f4		 mov	 esi, esp
  0070e	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@MJFJELBO@glVertexAttrib3f@
  00713	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00716	83 c4 04	 add	 esp, 4
  00719	3b f4		 cmp	 esi, esp
  0071b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00720	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertexAttrib3f, eax

; 1537 : 	glad_glVertexAttrib3fv = (PFNGLVERTEXATTRIB3FVPROC)load("glVertexAttrib3fv");

  00725	8b f4		 mov	 esi, esp
  00727	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@IDKDLKFI@glVertexAttrib3fv@
  0072c	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0072f	83 c4 04	 add	 esp, 4
  00732	3b f4		 cmp	 esi, esp
  00734	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00739	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertexAttrib3fv, eax

; 1538 : 	glad_glVertexAttrib3s = (PFNGLVERTEXATTRIB3SPROC)load("glVertexAttrib3s");

  0073e	8b f4		 mov	 esi, esp
  00740	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@POOMKNAK@glVertexAttrib3s@
  00745	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00748	83 c4 04	 add	 esp, 4
  0074b	3b f4		 cmp	 esi, esp
  0074d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00752	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertexAttrib3s, eax

; 1539 : 	glad_glVertexAttrib3sv = (PFNGLVERTEXATTRIB3SVPROC)load("glVertexAttrib3sv");

  00757	8b f4		 mov	 esi, esp
  00759	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@JJEONLMD@glVertexAttrib3sv@
  0075e	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00761	83 c4 04	 add	 esp, 4
  00764	3b f4		 cmp	 esi, esp
  00766	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0076b	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertexAttrib3sv, eax

; 1540 : 	glad_glVertexAttrib4Nbv = (PFNGLVERTEXATTRIB4NBVPROC)load("glVertexAttrib4Nbv");

  00770	8b f4		 mov	 esi, esp
  00772	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@NANPPEGB@glVertexAttrib4Nbv@
  00777	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0077a	83 c4 04	 add	 esp, 4
  0077d	3b f4		 cmp	 esi, esp
  0077f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00784	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertexAttrib4Nbv, eax

; 1541 : 	glad_glVertexAttrib4Niv = (PFNGLVERTEXATTRIB4NIVPROC)load("glVertexAttrib4Niv");

  00789	8b f4		 mov	 esi, esp
  0078b	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@NMIKBLIA@glVertexAttrib4Niv@
  00790	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00793	83 c4 04	 add	 esp, 4
  00796	3b f4		 cmp	 esi, esp
  00798	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0079d	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertexAttrib4Niv, eax

; 1542 : 	glad_glVertexAttrib4Nsv = (PFNGLVERTEXATTRIB4NSVPROC)load("glVertexAttrib4Nsv");

  007a2	8b f4		 mov	 esi, esp
  007a4	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@MNDLDNCG@glVertexAttrib4Nsv@
  007a9	ff 55 08	 call	 DWORD PTR _load$[ebp]
  007ac	83 c4 04	 add	 esp, 4
  007af	3b f4		 cmp	 esi, esp
  007b1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  007b6	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertexAttrib4Nsv, eax

; 1543 : 	glad_glVertexAttrib4Nub = (PFNGLVERTEXATTRIB4NUBPROC)load("glVertexAttrib4Nub");

  007bb	8b f4		 mov	 esi, esp
  007bd	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OHBIJGMB@glVertexAttrib4Nub@
  007c2	ff 55 08	 call	 DWORD PTR _load$[ebp]
  007c5	83 c4 04	 add	 esp, 4
  007c8	3b f4		 cmp	 esi, esp
  007ca	e8 00 00 00 00	 call	 __RTC_CheckEsp
  007cf	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertexAttrib4Nub, eax

; 1544 : 	glad_glVertexAttrib4Nubv = (PFNGLVERTEXATTRIB4NUBVPROC)load("glVertexAttrib4Nubv");

  007d4	8b f4		 mov	 esi, esp
  007d6	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@JFOBDEMA@glVertexAttrib4Nubv@
  007db	ff 55 08	 call	 DWORD PTR _load$[ebp]
  007de	83 c4 04	 add	 esp, 4
  007e1	3b f4		 cmp	 esi, esp
  007e3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  007e8	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertexAttrib4Nubv, eax

; 1545 : 	glad_glVertexAttrib4Nuiv = (PFNGLVERTEXATTRIB4NUIVPROC)load("glVertexAttrib4Nuiv");

  007ed	8b f4		 mov	 esi, esp
  007ef	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@JJLENLCB@glVertexAttrib4Nuiv@
  007f4	ff 55 08	 call	 DWORD PTR _load$[ebp]
  007f7	83 c4 04	 add	 esp, 4
  007fa	3b f4		 cmp	 esi, esp
  007fc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00801	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertexAttrib4Nuiv, eax

; 1546 : 	glad_glVertexAttrib4Nusv = (PFNGLVERTEXATTRIB4NUSVPROC)load("glVertexAttrib4Nusv");

  00806	8b f4		 mov	 esi, esp
  00808	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@IIAFPNIH@glVertexAttrib4Nusv@
  0080d	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00810	83 c4 04	 add	 esp, 4
  00813	3b f4		 cmp	 esi, esp
  00815	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0081a	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertexAttrib4Nusv, eax

; 1547 : 	glad_glVertexAttrib4bv = (PFNGLVERTEXATTRIB4BVPROC)load("glVertexAttrib4bv");

  0081f	8b f4		 mov	 esi, esp
  00821	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@BJHNCKDN@glVertexAttrib4bv@
  00826	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00829	83 c4 04	 add	 esp, 4
  0082c	3b f4		 cmp	 esi, esp
  0082e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00833	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertexAttrib4bv, eax

; 1548 : 	glad_glVertexAttrib4d = (PFNGLVERTEXATTRIB4DPROC)load("glVertexAttrib4d");

  00838	8b f4		 mov	 esi, esp
  0083a	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@POCADPBJ@glVertexAttrib4d@
  0083f	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00842	83 c4 04	 add	 esp, 4
  00845	3b f4		 cmp	 esi, esp
  00847	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0084c	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertexAttrib4d, eax

; 1549 : 	glad_glVertexAttrib4dv = (PFNGLVERTEXATTRIB4DVPROC)load("glVertexAttrib4dv");

  00851	8b f4		 mov	 esi, esp
  00853	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@BNPAFGIP@glVertexAttrib4dv@
  00858	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0085b	83 c4 04	 add	 esp, 4
  0085e	3b f4		 cmp	 esi, esp
  00860	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00865	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertexAttrib4dv, eax

; 1550 : 	glad_glVertexAttrib4f = (PFNGLVERTEXATTRIB4FPROC)load("glVertexAttrib4f");

  0086a	8b f4		 mov	 esi, esp
  0086c	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@MMBGFNJL@glVertexAttrib4f@
  00871	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00874	83 c4 04	 add	 esp, 4
  00877	3b f4		 cmp	 esi, esp
  00879	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0087e	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertexAttrib4f, eax

; 1551 : 	glad_glVertexAttrib4fv = (PFNGLVERTEXATTRIB4FVPROC)load("glVertexAttrib4fv");

  00883	8b f4		 mov	 esi, esp
  00885	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@BOHEICOB@glVertexAttrib4fv@
  0088a	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0088d	83 c4 04	 add	 esp, 4
  00890	3b f4		 cmp	 esi, esp
  00892	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00897	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertexAttrib4fv, eax

; 1552 : 	glad_glVertexAttrib4iv = (PFNGLVERTEXATTRIB4IVPROC)load("glVertexAttrib4iv");

  0089c	8b f4		 mov	 esi, esp
  0089e	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@BFCIMFNM@glVertexAttrib4iv@
  008a3	ff 55 08	 call	 DWORD PTR _load$[ebp]
  008a6	83 c4 04	 add	 esp, 4
  008a9	3b f4		 cmp	 esi, esp
  008ab	e8 00 00 00 00	 call	 __RTC_CheckEsp
  008b0	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertexAttrib4iv, eax

; 1553 : 	glad_glVertexAttrib4s = (PFNGLVERTEXATTRIB4SPROC)load("glVertexAttrib4s");

  008b5	8b f4		 mov	 esi, esp
  008b7	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@PLKDLLIP@glVertexAttrib4s@
  008bc	ff 55 08	 call	 DWORD PTR _load$[ebp]
  008bf	83 c4 04	 add	 esp, 4
  008c2	3b f4		 cmp	 esi, esp
  008c4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  008c9	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertexAttrib4s, eax

; 1554 : 	glad_glVertexAttrib4sv = (PFNGLVERTEXATTRIB4SVPROC)load("glVertexAttrib4sv");

  008ce	8b f4		 mov	 esi, esp
  008d0	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@EJJODHK@glVertexAttrib4sv@
  008d5	ff 55 08	 call	 DWORD PTR _load$[ebp]
  008d8	83 c4 04	 add	 esp, 4
  008db	3b f4		 cmp	 esi, esp
  008dd	e8 00 00 00 00	 call	 __RTC_CheckEsp
  008e2	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertexAttrib4sv, eax

; 1555 : 	glad_glVertexAttrib4ubv = (PFNGLVERTEXATTRIB4UBVPROC)load("glVertexAttrib4ubv");

  008e7	8b f4		 mov	 esi, esp
  008e9	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@PHPFILMB@glVertexAttrib4ubv@
  008ee	ff 55 08	 call	 DWORD PTR _load$[ebp]
  008f1	83 c4 04	 add	 esp, 4
  008f4	3b f4		 cmp	 esi, esp
  008f6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  008fb	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertexAttrib4ubv, eax

; 1556 : 	glad_glVertexAttrib4uiv = (PFNGLVERTEXATTRIB4UIVPROC)load("glVertexAttrib4uiv");

  00900	8b f4		 mov	 esi, esp
  00902	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@PLKAGECA@glVertexAttrib4uiv@
  00907	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0090a	83 c4 04	 add	 esp, 4
  0090d	3b f4		 cmp	 esi, esp
  0090f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00914	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertexAttrib4uiv, eax

; 1557 : 	glad_glVertexAttrib4usv = (PFNGLVERTEXATTRIB4USVPROC)load("glVertexAttrib4usv");

  00919	8b f4		 mov	 esi, esp
  0091b	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OKBBECIG@glVertexAttrib4usv@
  00920	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00923	83 c4 04	 add	 esp, 4
  00926	3b f4		 cmp	 esi, esp
  00928	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0092d	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertexAttrib4usv, eax

; 1558 : 	glad_glVertexAttribPointer = (PFNGLVERTEXATTRIBPOINTERPROC)load("glVertexAttribPointer");

  00932	8b f4		 mov	 esi, esp
  00934	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@JPNNNPKG@glVertexAttribPointer@
  00939	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0093c	83 c4 04	 add	 esp, 4
  0093f	3b f4		 cmp	 esi, esp
  00941	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00946	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertexAttribPointer, eax
$LN1@load_GL_VE:

; 1559 : }

  0094b	5f		 pop	 edi
  0094c	5e		 pop	 esi
  0094d	5b		 pop	 ebx
  0094e	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00954	3b ec		 cmp	 ebp, esp
  00956	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0095b	8b e5		 mov	 esp, ebp
  0095d	5d		 pop	 ebp
  0095e	c3		 ret	 0
_load_GL_VERSION_2_0 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\Light\source\repos\Spacemonster\Spacemonster-code\glad\glad.c
;	COMDAT _load_GL_VERSION_1_5
_TEXT	SEGMENT
_load$ = 8						; size = 4
_load_GL_VERSION_1_5 PROC				; COMDAT

; 1442 : static void load_GL_VERSION_1_5(GLADloadproc load) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET __550F0BDD_glad@c
  00023	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1443 : 	if(!GLAD_GL_VERSION_1_5) return;

  00028	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _GLAD_GL_VERSION_1_5, 0
  0002f	75 05		 jne	 SHORT $LN2@load_GL_VE
  00031	e9 db 01 00 00	 jmp	 $LN1@load_GL_VE
$LN2@load_GL_VE:

; 1444 : 	glad_glGenQueries = (PFNGLGENQUERIESPROC)load("glGenQueries");

  00036	8b f4		 mov	 esi, esp
  00038	68 00 00 00 00	 push	 OFFSET ??_C@_0N@CJIGHHJ@glGenQueries@
  0003d	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00040	83 c4 04	 add	 esp, 4
  00043	3b f4		 cmp	 esi, esp
  00045	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004a	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGenQueries, eax

; 1445 : 	glad_glDeleteQueries = (PFNGLDELETEQUERIESPROC)load("glDeleteQueries");

  0004f	8b f4		 mov	 esi, esp
  00051	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@IOKEHMOH@glDeleteQueries@
  00056	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00059	83 c4 04	 add	 esp, 4
  0005c	3b f4		 cmp	 esi, esp
  0005e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00063	a3 00 00 00 00	 mov	 DWORD PTR _glad_glDeleteQueries, eax

; 1446 : 	glad_glIsQuery = (PFNGLISQUERYPROC)load("glIsQuery");

  00068	8b f4		 mov	 esi, esp
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_09CNNLCEBN@glIsQuery@
  0006f	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00072	83 c4 04	 add	 esp, 4
  00075	3b f4		 cmp	 esi, esp
  00077	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007c	a3 00 00 00 00	 mov	 DWORD PTR _glad_glIsQuery, eax

; 1447 : 	glad_glBeginQuery = (PFNGLBEGINQUERYPROC)load("glBeginQuery");

  00081	8b f4		 mov	 esi, esp
  00083	68 00 00 00 00	 push	 OFFSET ??_C@_0N@GIAGIGPA@glBeginQuery@
  00088	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0008b	83 c4 04	 add	 esp, 4
  0008e	3b f4		 cmp	 esi, esp
  00090	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00095	a3 00 00 00 00	 mov	 DWORD PTR _glad_glBeginQuery, eax

; 1448 : 	glad_glEndQuery = (PFNGLENDQUERYPROC)load("glEndQuery");

  0009a	8b f4		 mov	 esi, esp
  0009c	68 00 00 00 00	 push	 OFFSET ??_C@_0L@FLEBHIDM@glEndQuery@
  000a1	ff 55 08	 call	 DWORD PTR _load$[ebp]
  000a4	83 c4 04	 add	 esp, 4
  000a7	3b f4		 cmp	 esi, esp
  000a9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ae	a3 00 00 00 00	 mov	 DWORD PTR _glad_glEndQuery, eax

; 1449 : 	glad_glGetQueryiv = (PFNGLGETQUERYIVPROC)load("glGetQueryiv");

  000b3	8b f4		 mov	 esi, esp
  000b5	68 00 00 00 00	 push	 OFFSET ??_C@_0N@BPACPFCI@glGetQueryiv@
  000ba	ff 55 08	 call	 DWORD PTR _load$[ebp]
  000bd	83 c4 04	 add	 esp, 4
  000c0	3b f4		 cmp	 esi, esp
  000c2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c7	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetQueryiv, eax

; 1450 : 	glad_glGetQueryObjectiv = (PFNGLGETQUERYOBJECTIVPROC)load("glGetQueryObjectiv");

  000cc	8b f4		 mov	 esi, esp
  000ce	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@KMBBCJID@glGetQueryObjectiv@
  000d3	ff 55 08	 call	 DWORD PTR _load$[ebp]
  000d6	83 c4 04	 add	 esp, 4
  000d9	3b f4		 cmp	 esi, esp
  000db	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e0	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetQueryObjectiv, eax

; 1451 : 	glad_glGetQueryObjectuiv = (PFNGLGETQUERYOBJECTUIVPROC)load("glGetQueryObjectuiv");

  000e5	8b f4		 mov	 esi, esp
  000e7	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@MNBBKJ@glGetQueryObjectuiv@
  000ec	ff 55 08	 call	 DWORD PTR _load$[ebp]
  000ef	83 c4 04	 add	 esp, 4
  000f2	3b f4		 cmp	 esi, esp
  000f4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f9	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetQueryObjectuiv, eax

; 1452 : 	glad_glBindBuffer = (PFNGLBINDBUFFERPROC)load("glBindBuffer");

  000fe	8b f4		 mov	 esi, esp
  00100	68 00 00 00 00	 push	 OFFSET ??_C@_0N@BONEPPLO@glBindBuffer@
  00105	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00108	83 c4 04	 add	 esp, 4
  0010b	3b f4		 cmp	 esi, esp
  0010d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00112	a3 00 00 00 00	 mov	 DWORD PTR _glad_glBindBuffer, eax

; 1453 : 	glad_glDeleteBuffers = (PFNGLDELETEBUFFERSPROC)load("glDeleteBuffers");

  00117	8b f4		 mov	 esi, esp
  00119	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@DMNLADIO@glDeleteBuffers@
  0011e	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00121	83 c4 04	 add	 esp, 4
  00124	3b f4		 cmp	 esi, esp
  00126	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0012b	a3 00 00 00 00	 mov	 DWORD PTR _glad_glDeleteBuffers, eax

; 1454 : 	glad_glGenBuffers = (PFNGLGENBUFFERSPROC)load("glGenBuffers");

  00130	8b f4		 mov	 esi, esp
  00132	68 00 00 00 00	 push	 OFFSET ??_C@_0N@LAOHBIBA@glGenBuffers@
  00137	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0013a	83 c4 04	 add	 esp, 4
  0013d	3b f4		 cmp	 esi, esp
  0013f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00144	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGenBuffers, eax

; 1455 : 	glad_glIsBuffer = (PFNGLISBUFFERPROC)load("glIsBuffer");

  00149	8b f4		 mov	 esi, esp
  0014b	68 00 00 00 00	 push	 OFFSET ??_C@_0L@KFPDMKNG@glIsBuffer@
  00150	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00153	83 c4 04	 add	 esp, 4
  00156	3b f4		 cmp	 esi, esp
  00158	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0015d	a3 00 00 00 00	 mov	 DWORD PTR _glad_glIsBuffer, eax

; 1456 : 	glad_glBufferData = (PFNGLBUFFERDATAPROC)load("glBufferData");

  00162	8b f4		 mov	 esi, esp
  00164	68 00 00 00 00	 push	 OFFSET ??_C@_0N@JHHJMABP@glBufferData@
  00169	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0016c	83 c4 04	 add	 esp, 4
  0016f	3b f4		 cmp	 esi, esp
  00171	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00176	a3 00 00 00 00	 mov	 DWORD PTR _glad_glBufferData, eax

; 1457 : 	glad_glBufferSubData = (PFNGLBUFFERSUBDATAPROC)load("glBufferSubData");

  0017b	8b f4		 mov	 esi, esp
  0017d	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@GAJMDBBN@glBufferSubData@
  00182	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00185	83 c4 04	 add	 esp, 4
  00188	3b f4		 cmp	 esi, esp
  0018a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0018f	a3 00 00 00 00	 mov	 DWORD PTR _glad_glBufferSubData, eax

; 1458 : 	glad_glGetBufferSubData = (PFNGLGETBUFFERSUBDATAPROC)load("glGetBufferSubData");

  00194	8b f4		 mov	 esi, esp
  00196	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@PNDAHMBO@glGetBufferSubData@
  0019b	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0019e	83 c4 04	 add	 esp, 4
  001a1	3b f4		 cmp	 esi, esp
  001a3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001a8	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetBufferSubData, eax

; 1459 : 	glad_glMapBuffer = (PFNGLMAPBUFFERPROC)load("glMapBuffer");

  001ad	8b f4		 mov	 esi, esp
  001af	68 00 00 00 00	 push	 OFFSET ??_C@_0M@NNHDPACA@glMapBuffer@
  001b4	ff 55 08	 call	 DWORD PTR _load$[ebp]
  001b7	83 c4 04	 add	 esp, 4
  001ba	3b f4		 cmp	 esi, esp
  001bc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001c1	a3 00 00 00 00	 mov	 DWORD PTR _glad_glMapBuffer, eax

; 1460 : 	glad_glUnmapBuffer = (PFNGLUNMAPBUFFERPROC)load("glUnmapBuffer");

  001c6	8b f4		 mov	 esi, esp
  001c8	68 00 00 00 00	 push	 OFFSET ??_C@_0O@OFGHBLEO@glUnmapBuffer@
  001cd	ff 55 08	 call	 DWORD PTR _load$[ebp]
  001d0	83 c4 04	 add	 esp, 4
  001d3	3b f4		 cmp	 esi, esp
  001d5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001da	a3 00 00 00 00	 mov	 DWORD PTR _glad_glUnmapBuffer, eax

; 1461 : 	glad_glGetBufferParameteriv = (PFNGLGETBUFFERPARAMETERIVPROC)load("glGetBufferParameteriv");

  001df	8b f4		 mov	 esi, esp
  001e1	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@BMIEIFJP@glGetBufferParameteriv@
  001e6	ff 55 08	 call	 DWORD PTR _load$[ebp]
  001e9	83 c4 04	 add	 esp, 4
  001ec	3b f4		 cmp	 esi, esp
  001ee	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001f3	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetBufferParameteriv, eax

; 1462 : 	glad_glGetBufferPointerv = (PFNGLGETBUFFERPOINTERVPROC)load("glGetBufferPointerv");

  001f8	8b f4		 mov	 esi, esp
  001fa	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@KNJEIFMC@glGetBufferPointerv@
  001ff	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00202	83 c4 04	 add	 esp, 4
  00205	3b f4		 cmp	 esi, esp
  00207	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0020c	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetBufferPointerv, eax
$LN1@load_GL_VE:

; 1463 : }

  00211	5f		 pop	 edi
  00212	5e		 pop	 esi
  00213	5b		 pop	 ebx
  00214	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0021a	3b ec		 cmp	 ebp, esp
  0021c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00221	8b e5		 mov	 esp, ebp
  00223	5d		 pop	 ebp
  00224	c3		 ret	 0
_load_GL_VERSION_1_5 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\Light\source\repos\Spacemonster\Spacemonster-code\glad\glad.c
;	COMDAT _load_GL_VERSION_1_4
_TEXT	SEGMENT
_load$ = 8						; size = 4
_load_GL_VERSION_1_4 PROC				; COMDAT

; 1392 : static void load_GL_VERSION_1_4(GLADloadproc load) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET __550F0BDD_glad@c
  00023	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1393 : 	if(!GLAD_GL_VERSION_1_4) return;

  00028	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _GLAD_GL_VERSION_1_4, 0
  0002f	75 05		 jne	 SHORT $LN2@load_GL_VE
  00031	e9 97 04 00 00	 jmp	 $LN1@load_GL_VE
$LN2@load_GL_VE:

; 1394 : 	glad_glBlendFuncSeparate = (PFNGLBLENDFUNCSEPARATEPROC)load("glBlendFuncSeparate");

  00036	8b f4		 mov	 esi, esp
  00038	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@LLLCIIOO@glBlendFuncSeparate@
  0003d	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00040	83 c4 04	 add	 esp, 4
  00043	3b f4		 cmp	 esi, esp
  00045	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004a	a3 00 00 00 00	 mov	 DWORD PTR _glad_glBlendFuncSeparate, eax

; 1395 : 	glad_glMultiDrawArrays = (PFNGLMULTIDRAWARRAYSPROC)load("glMultiDrawArrays");

  0004f	8b f4		 mov	 esi, esp
  00051	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@IBABPJFA@glMultiDrawArrays@
  00056	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00059	83 c4 04	 add	 esp, 4
  0005c	3b f4		 cmp	 esi, esp
  0005e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00063	a3 00 00 00 00	 mov	 DWORD PTR _glad_glMultiDrawArrays, eax

; 1396 : 	glad_glMultiDrawElements = (PFNGLMULTIDRAWELEMENTSPROC)load("glMultiDrawElements");

  00068	8b f4		 mov	 esi, esp
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@MPDFJJLL@glMultiDrawElements@
  0006f	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00072	83 c4 04	 add	 esp, 4
  00075	3b f4		 cmp	 esi, esp
  00077	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007c	a3 00 00 00 00	 mov	 DWORD PTR _glad_glMultiDrawElements, eax

; 1397 : 	glad_glPointParameterf = (PFNGLPOINTPARAMETERFPROC)load("glPointParameterf");

  00081	8b f4		 mov	 esi, esp
  00083	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@FGOOEDO@glPointParameterf@
  00088	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0008b	83 c4 04	 add	 esp, 4
  0008e	3b f4		 cmp	 esi, esp
  00090	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00095	a3 00 00 00 00	 mov	 DWORD PTR _glad_glPointParameterf, eax

; 1398 : 	glad_glPointParameterfv = (PFNGLPOINTPARAMETERFVPROC)load("glPointParameterfv");

  0009a	8b f4		 mov	 esi, esp
  0009c	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@LIABKNDP@glPointParameterfv@
  000a1	ff 55 08	 call	 DWORD PTR _load$[ebp]
  000a4	83 c4 04	 add	 esp, 4
  000a7	3b f4		 cmp	 esi, esp
  000a9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ae	a3 00 00 00 00	 mov	 DWORD PTR _glad_glPointParameterfv, eax

; 1399 : 	glad_glPointParameteri = (PFNGLPOINTPARAMETERIPROC)load("glPointParameteri");

  000b3	8b f4		 mov	 esi, esp
  000b5	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@ICPGPIPB@glPointParameteri@
  000ba	ff 55 08	 call	 DWORD PTR _load$[ebp]
  000bd	83 c4 04	 add	 esp, 4
  000c0	3b f4		 cmp	 esi, esp
  000c2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c7	a3 00 00 00 00	 mov	 DWORD PTR _glad_glPointParameteri, eax

; 1400 : 	glad_glPointParameteriv = (PFNGLPOINTPARAMETERIVPROC)load("glPointParameteriv");

  000cc	8b f4		 mov	 esi, esp
  000ce	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@LDFNOKAC@glPointParameteriv@
  000d3	ff 55 08	 call	 DWORD PTR _load$[ebp]
  000d6	83 c4 04	 add	 esp, 4
  000d9	3b f4		 cmp	 esi, esp
  000db	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e0	a3 00 00 00 00	 mov	 DWORD PTR _glad_glPointParameteriv, eax

; 1401 : 	glad_glFogCoordf = (PFNGLFOGCOORDFPROC)load("glFogCoordf");

  000e5	8b f4		 mov	 esi, esp
  000e7	68 00 00 00 00	 push	 OFFSET ??_C@_0M@GCBCNNOF@glFogCoordf@
  000ec	ff 55 08	 call	 DWORD PTR _load$[ebp]
  000ef	83 c4 04	 add	 esp, 4
  000f2	3b f4		 cmp	 esi, esp
  000f4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f9	a3 00 00 00 00	 mov	 DWORD PTR _glad_glFogCoordf, eax

; 1402 : 	glad_glFogCoordfv = (PFNGLFOGCOORDFVPROC)load("glFogCoordfv");

  000fe	8b f4		 mov	 esi, esp
  00100	68 00 00 00 00	 push	 OFFSET ??_C@_0N@KJGHNKFK@glFogCoordfv@
  00105	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00108	83 c4 04	 add	 esp, 4
  0010b	3b f4		 cmp	 esi, esp
  0010d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00112	a3 00 00 00 00	 mov	 DWORD PTR _glad_glFogCoordfv, eax

; 1403 : 	glad_glFogCoordd = (PFNGLFOGCOORDDPROC)load("glFogCoordd");

  00117	8b f4		 mov	 esi, esp
  00119	68 00 00 00 00	 push	 OFFSET ??_C@_0M@FACELPGH@glFogCoordd@
  0011e	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00121	83 c4 04	 add	 esp, 4
  00124	3b f4		 cmp	 esi, esp
  00126	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0012b	a3 00 00 00 00	 mov	 DWORD PTR _glad_glFogCoordd, eax

; 1404 : 	glad_glFogCoorddv = (PFNGLFOGCOORDDVPROC)load("glFogCoorddv");

  00130	8b f4		 mov	 esi, esp
  00132	68 00 00 00 00	 push	 OFFSET ??_C@_0N@KKODAODE@glFogCoorddv@
  00137	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0013a	83 c4 04	 add	 esp, 4
  0013d	3b f4		 cmp	 esi, esp
  0013f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00144	a3 00 00 00 00	 mov	 DWORD PTR _glad_glFogCoorddv, eax

; 1405 : 	glad_glFogCoordPointer = (PFNGLFOGCOORDPOINTERPROC)load("glFogCoordPointer");

  00149	8b f4		 mov	 esi, esp
  0014b	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@GECGFLP@glFogCoordPointer@
  00150	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00153	83 c4 04	 add	 esp, 4
  00156	3b f4		 cmp	 esi, esp
  00158	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0015d	a3 00 00 00 00	 mov	 DWORD PTR _glad_glFogCoordPointer, eax

; 1406 : 	glad_glSecondaryColor3b = (PFNGLSECONDARYCOLOR3BPROC)load("glSecondaryColor3b");

  00162	8b f4		 mov	 esi, esp
  00164	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@MCCHHBGK@glSecondaryColor3b@
  00169	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0016c	83 c4 04	 add	 esp, 4
  0016f	3b f4		 cmp	 esi, esp
  00171	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00176	a3 00 00 00 00	 mov	 DWORD PTR _glad_glSecondaryColor3b, eax

; 1407 : 	glad_glSecondaryColor3bv = (PFNGLSECONDARYCOLOR3BVPROC)load("glSecondaryColor3bv");

  0017b	8b f4		 mov	 esi, esp
  0017d	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@NEMAHBEH@glSecondaryColor3bv@
  00182	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00185	83 c4 04	 add	 esp, 4
  00188	3b f4		 cmp	 esi, esp
  0018a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0018f	a3 00 00 00 00	 mov	 DWORD PTR _glad_glSecondaryColor3bv, eax

; 1408 : 	glad_glSecondaryColor3d = (PFNGLSECONDARYCOLOR3DPROC)load("glSecondaryColor3d");

  00194	8b f4		 mov	 esi, esp
  00196	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@JEHNNGOM@glSecondaryColor3d@
  0019b	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0019e	83 c4 04	 add	 esp, 4
  001a1	3b f4		 cmp	 esi, esp
  001a3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001a8	a3 00 00 00 00	 mov	 DWORD PTR _glad_glSecondaryColor3d, eax

; 1409 : 	glad_glSecondaryColor3dv = (PFNGLSECONDARYCOLOR3DVPROC)load("glSecondaryColor3dv");

  001ad	8b f4		 mov	 esi, esp
  001af	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@NAENANPF@glSecondaryColor3dv@
  001b4	ff 55 08	 call	 DWORD PTR _load$[ebp]
  001b7	83 c4 04	 add	 esp, 4
  001ba	3b f4		 cmp	 esi, esp
  001bc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001c1	a3 00 00 00 00	 mov	 DWORD PTR _glad_glSecondaryColor3dv, eax

; 1410 : 	glad_glSecondaryColor3f = (PFNGLSECONDARYCOLOR3FPROC)load("glSecondaryColor3f");

  001c6	8b f4		 mov	 esi, esp
  001c8	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@KGELLEGO@glSecondaryColor3f@
  001cd	ff 55 08	 call	 DWORD PTR _load$[ebp]
  001d0	83 c4 04	 add	 esp, 4
  001d3	3b f4		 cmp	 esi, esp
  001d5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001da	a3 00 00 00 00	 mov	 DWORD PTR _glad_glSecondaryColor3f, eax

; 1411 : 	glad_glSecondaryColor3fv = (PFNGLSECONDARYCOLOR3FVPROC)load("glSecondaryColor3fv");

  001df	8b f4		 mov	 esi, esp
  001e1	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@NDMJNJJL@glSecondaryColor3fv@
  001e6	ff 55 08	 call	 DWORD PTR _load$[ebp]
  001e9	83 c4 04	 add	 esp, 4
  001ec	3b f4		 cmp	 esi, esp
  001ee	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001f3	a3 00 00 00 00	 mov	 DWORD PTR _glad_glSecondaryColor3fv, eax

; 1412 : 	glad_glSecondaryColor3i = (PFNGLSECONDARYCOLOR3IPROC)load("glSecondaryColor3i");

  001f8	8b f4		 mov	 esi, esp
  001fa	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@CBNDKIKB@glSecondaryColor3i@
  001ff	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00202	83 c4 04	 add	 esp, 4
  00205	3b f4		 cmp	 esi, esp
  00207	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0020c	a3 00 00 00 00	 mov	 DWORD PTR _glad_glSecondaryColor3i, eax

; 1413 : 	glad_glSecondaryColor3iv = (PFNGLSECONDARYCOLOR3IVPROC)load("glSecondaryColor3iv");

  00211	8b f4		 mov	 esi, esp
  00213	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@NIJFJOKG@glSecondaryColor3iv@
  00218	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0021b	83 c4 04	 add	 esp, 4
  0021e	3b f4		 cmp	 esi, esp
  00220	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00225	a3 00 00 00 00	 mov	 DWORD PTR _glad_glSecondaryColor3iv, eax

; 1414 : 	glad_glSecondaryColor3s = (PFNGLSECONDARYCOLOR3SPROC)load("glSecondaryColor3s");

  0022a	8b f4		 mov	 esi, esp
  0022c	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@JBPOFCHK@glSecondaryColor3s@
  00231	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00234	83 c4 04	 add	 esp, 4
  00237	3b f4		 cmp	 esi, esp
  00239	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0023e	a3 00 00 00 00	 mov	 DWORD PTR _glad_glSecondaryColor3s, eax

; 1415 : 	glad_glSecondaryColor3sv = (PFNGLSECONDARYCOLOR3SVPROC)load("glSecondaryColor3sv");

  00243	8b f4		 mov	 esi, esp
  00245	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@MJCELIAA@glSecondaryColor3sv@
  0024a	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0024d	83 c4 04	 add	 esp, 4
  00250	3b f4		 cmp	 esi, esp
  00252	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00257	a3 00 00 00 00	 mov	 DWORD PTR _glad_glSecondaryColor3sv, eax

; 1416 : 	glad_glSecondaryColor3ub = (PFNGLSECONDARYCOLOR3UBPROC)load("glSecondaryColor3ub");

  0025c	8b f4		 mov	 esi, esp
  0025e	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@ODAHBDOH@glSecondaryColor3ub@
  00263	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00266	83 c4 04	 add	 esp, 4
  00269	3b f4		 cmp	 esi, esp
  0026b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00270	a3 00 00 00 00	 mov	 DWORD PTR _glad_glSecondaryColor3ub, eax

; 1417 : 	glad_glSecondaryColor3ubv = (PFNGLSECONDARYCOLOR3UBVPROC)load("glSecondaryColor3ubv");

  00275	8b f4		 mov	 esi, esp
  00277	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@EHOIKOLI@glSecondaryColor3ubv@
  0027c	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0027f	83 c4 04	 add	 esp, 4
  00282	3b f4		 cmp	 esi, esp
  00284	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00289	a3 00 00 00 00	 mov	 DWORD PTR _glad_glSecondaryColor3ubv, eax

; 1418 : 	glad_glSecondaryColor3ui = (PFNGLSECONDARYCOLOR3UIPROC)load("glSecondaryColor3ui");

  0028e	8b f4		 mov	 esi, esp
  00290	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@PDMKCM@glSecondaryColor3ui@
  00295	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00298	83 c4 04	 add	 esp, 4
  0029b	3b f4		 cmp	 esi, esp
  0029d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002a2	a3 00 00 00 00	 mov	 DWORD PTR _glad_glSecondaryColor3ui, eax

; 1419 : 	glad_glSecondaryColor3uiv = (PFNGLSECONDARYCOLOR3UIVPROC)load("glSecondaryColor3uiv");

  002a7	8b f4		 mov	 esi, esp
  002a9	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@ELLNEBFJ@glSecondaryColor3uiv@
  002ae	ff 55 08	 call	 DWORD PTR _load$[ebp]
  002b1	83 c4 04	 add	 esp, 4
  002b4	3b f4		 cmp	 esi, esp
  002b6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002bb	a3 00 00 00 00	 mov	 DWORD PTR _glad_glSecondaryColor3uiv, eax

; 1420 : 	glad_glSecondaryColor3us = (PFNGLSECONDARYCOLOR3USPROC)load("glSecondaryColor3us");

  002c0	8b f4		 mov	 esi, esp
  002c2	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@LANODAPH@glSecondaryColor3us@
  002c7	ff 55 08	 call	 DWORD PTR _load$[ebp]
  002ca	83 c4 04	 add	 esp, 4
  002cd	3b f4		 cmp	 esi, esp
  002cf	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002d4	a3 00 00 00 00	 mov	 DWORD PTR _glad_glSecondaryColor3us, eax

; 1421 : 	glad_glSecondaryColor3usv = (PFNGLSECONDARYCOLOR3USVPROC)load("glSecondaryColor3usv");

  002d9	8b f4		 mov	 esi, esp
  002db	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@FKAMGHPP@glSecondaryColor3usv@
  002e0	ff 55 08	 call	 DWORD PTR _load$[ebp]
  002e3	83 c4 04	 add	 esp, 4
  002e6	3b f4		 cmp	 esi, esp
  002e8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002ed	a3 00 00 00 00	 mov	 DWORD PTR _glad_glSecondaryColor3usv, eax

; 1422 : 	glad_glSecondaryColorPointer = (PFNGLSECONDARYCOLORPOINTERPROC)load("glSecondaryColorPointer");

  002f2	8b f4		 mov	 esi, esp
  002f4	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@EFMNDJOO@glSecondaryColorPointer@
  002f9	ff 55 08	 call	 DWORD PTR _load$[ebp]
  002fc	83 c4 04	 add	 esp, 4
  002ff	3b f4		 cmp	 esi, esp
  00301	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00306	a3 00 00 00 00	 mov	 DWORD PTR _glad_glSecondaryColorPointer, eax

; 1423 : 	glad_glWindowPos2d = (PFNGLWINDOWPOS2DPROC)load("glWindowPos2d");

  0030b	8b f4		 mov	 esi, esp
  0030d	68 00 00 00 00	 push	 OFFSET ??_C@_0O@JGNKBLNH@glWindowPos2d@
  00312	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00315	83 c4 04	 add	 esp, 4
  00318	3b f4		 cmp	 esi, esp
  0031a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0031f	a3 00 00 00 00	 mov	 DWORD PTR _glad_glWindowPos2d, eax

; 1424 : 	glad_glWindowPos2dv = (PFNGLWINDOWPOS2DVPROC)load("glWindowPos2dv");

  00324	8b f4		 mov	 esi, esp
  00326	68 00 00 00 00	 push	 OFFSET ??_C@_0P@GBEEEDBM@glWindowPos2dv@
  0032b	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0032e	83 c4 04	 add	 esp, 4
  00331	3b f4		 cmp	 esi, esp
  00333	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00338	a3 00 00 00 00	 mov	 DWORD PTR _glad_glWindowPos2dv, eax

; 1425 : 	glad_glWindowPos2f = (PFNGLWINDOWPOS2FPROC)load("glWindowPos2f");

  0033d	8b f4		 mov	 esi, esp
  0033f	68 00 00 00 00	 push	 OFFSET ??_C@_0O@KEOMHJFF@glWindowPos2f@
  00344	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00347	83 c4 04	 add	 esp, 4
  0034a	3b f4		 cmp	 esi, esp
  0034c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00351	a3 00 00 00 00	 mov	 DWORD PTR _glad_glWindowPos2f, eax

; 1426 : 	glad_glWindowPos2fv = (PFNGLWINDOWPOS2FVPROC)load("glWindowPos2fv");

  00356	8b f4		 mov	 esi, esp
  00358	68 00 00 00 00	 push	 OFFSET ??_C@_0P@GCMAJHHC@glWindowPos2fv@
  0035d	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00360	83 c4 04	 add	 esp, 4
  00363	3b f4		 cmp	 esi, esp
  00365	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0036a	a3 00 00 00 00	 mov	 DWORD PTR _glad_glWindowPos2fv, eax

; 1427 : 	glad_glWindowPos2i = (PFNGLWINDOWPOS2IPROC)load("glWindowPos2i");

  0036f	8b f4		 mov	 esi, esp
  00371	68 00 00 00 00	 push	 OFFSET ??_C@_0O@CDHEGFJK@glWindowPos2i@
  00376	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00379	83 c4 04	 add	 esp, 4
  0037c	3b f4		 cmp	 esi, esp
  0037e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00383	a3 00 00 00 00	 mov	 DWORD PTR _glad_glWindowPos2i, eax

; 1428 : 	glad_glWindowPos2iv = (PFNGLWINDOWPOS2IVPROC)load("glWindowPos2iv");

  00388	8b f4		 mov	 esi, esp
  0038a	68 00 00 00 00	 push	 OFFSET ??_C@_0P@GJJMNAEP@glWindowPos2iv@
  0038f	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00392	83 c4 04	 add	 esp, 4
  00395	3b f4		 cmp	 esi, esp
  00397	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0039c	a3 00 00 00 00	 mov	 DWORD PTR _glad_glWindowPos2iv, eax

; 1429 : 	glad_glWindowPos2s = (PFNGLWINDOWPOS2SPROC)load("glWindowPos2s");

  003a1	8b f4		 mov	 esi, esp
  003a3	68 00 00 00 00	 push	 OFFSET ??_C@_0O@JDFJJPEB@glWindowPos2s@
  003a8	ff 55 08	 call	 DWORD PTR _load$[ebp]
  003ab	83 c4 04	 add	 esp, 4
  003ae	3b f4		 cmp	 esi, esp
  003b0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003b5	a3 00 00 00 00	 mov	 DWORD PTR _glad_glWindowPos2s, eax

; 1430 : 	glad_glWindowPos2sv = (PFNGLWINDOWPOS2SVPROC)load("glWindowPos2sv");

  003ba	8b f4		 mov	 esi, esp
  003bc	68 00 00 00 00	 push	 OFFSET ??_C@_0P@HICNPGOJ@glWindowPos2sv@
  003c1	ff 55 08	 call	 DWORD PTR _load$[ebp]
  003c4	83 c4 04	 add	 esp, 4
  003c7	3b f4		 cmp	 esi, esp
  003c9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003ce	a3 00 00 00 00	 mov	 DWORD PTR _glad_glWindowPos2sv, eax

; 1431 : 	glad_glWindowPos3d = (PFNGLWINDOWPOS3DPROC)load("glWindowPos3d");

  003d3	8b f4		 mov	 esi, esp
  003d5	68 00 00 00 00	 push	 OFFSET ??_C@_0O@JHBIHBOA@glWindowPos3d@
  003da	ff 55 08	 call	 DWORD PTR _load$[ebp]
  003dd	83 c4 04	 add	 esp, 4
  003e0	3b f4		 cmp	 esi, esp
  003e2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003e7	a3 00 00 00 00	 mov	 DWORD PTR _glad_glWindowPos3d, eax

; 1432 : 	glad_glWindowPos3dv = (PFNGLWINDOWPOS3DVPROC)load("glWindowPos3dv");

  003ec	8b f4		 mov	 esi, esp
  003ee	68 00 00 00 00	 push	 OFFSET ??_C@_0P@NJPICEHJ@glWindowPos3dv@
  003f3	ff 55 08	 call	 DWORD PTR _load$[ebp]
  003f6	83 c4 04	 add	 esp, 4
  003f9	3b f4		 cmp	 esi, esp
  003fb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00400	a3 00 00 00 00	 mov	 DWORD PTR _glad_glWindowPos3dv, eax

; 1433 : 	glad_glWindowPos3f = (PFNGLWINDOWPOS3FPROC)load("glWindowPos3f");

  00405	8b f4		 mov	 esi, esp
  00407	68 00 00 00 00	 push	 OFFSET ??_C@_0O@KFCOBDGC@glWindowPos3f@
  0040c	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0040f	83 c4 04	 add	 esp, 4
  00412	3b f4		 cmp	 esi, esp
  00414	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00419	a3 00 00 00 00	 mov	 DWORD PTR _glad_glWindowPos3f, eax

; 1434 : 	glad_glWindowPos3fv = (PFNGLWINDOWPOS3FVPROC)load("glWindowPos3fv");

  0041e	8b f4		 mov	 esi, esp
  00420	68 00 00 00 00	 push	 OFFSET ??_C@_0P@NKHMPABH@glWindowPos3fv@
  00425	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00428	83 c4 04	 add	 esp, 4
  0042b	3b f4		 cmp	 esi, esp
  0042d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00432	a3 00 00 00 00	 mov	 DWORD PTR _glad_glWindowPos3fv, eax

; 1435 : 	glad_glWindowPos3i = (PFNGLWINDOWPOS3IPROC)load("glWindowPos3i");

  00437	8b f4		 mov	 esi, esp
  00439	68 00 00 00 00	 push	 OFFSET ??_C@_0O@CCLGAPKN@glWindowPos3i@
  0043e	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00441	83 c4 04	 add	 esp, 4
  00444	3b f4		 cmp	 esi, esp
  00446	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0044b	a3 00 00 00 00	 mov	 DWORD PTR _glad_glWindowPos3i, eax

; 1436 : 	glad_glWindowPos3iv = (PFNGLWINDOWPOS3IVPROC)load("glWindowPos3iv");

  00450	8b f4		 mov	 esi, esp
  00452	68 00 00 00 00	 push	 OFFSET ??_C@_0P@NBCALHCK@glWindowPos3iv@
  00457	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0045a	83 c4 04	 add	 esp, 4
  0045d	3b f4		 cmp	 esi, esp
  0045f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00464	a3 00 00 00 00	 mov	 DWORD PTR _glad_glWindowPos3iv, eax

; 1437 : 	glad_glWindowPos3s = (PFNGLWINDOWPOS3SPROC)load("glWindowPos3s");

  00469	8b f4		 mov	 esi, esp
  0046b	68 00 00 00 00	 push	 OFFSET ??_C@_0O@JCJLPFHG@glWindowPos3s@
  00470	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00473	83 c4 04	 add	 esp, 4
  00476	3b f4		 cmp	 esi, esp
  00478	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0047d	a3 00 00 00 00	 mov	 DWORD PTR _glad_glWindowPos3s, eax

; 1438 : 	glad_glWindowPos3sv = (PFNGLWINDOWPOS3SVPROC)load("glWindowPos3sv");

  00482	8b f4		 mov	 esi, esp
  00484	68 00 00 00 00	 push	 OFFSET ??_C@_0P@MAJBJBIM@glWindowPos3sv@
  00489	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0048c	83 c4 04	 add	 esp, 4
  0048f	3b f4		 cmp	 esi, esp
  00491	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00496	a3 00 00 00 00	 mov	 DWORD PTR _glad_glWindowPos3sv, eax

; 1439 : 	glad_glBlendColor = (PFNGLBLENDCOLORPROC)load("glBlendColor");

  0049b	8b f4		 mov	 esi, esp
  0049d	68 00 00 00 00	 push	 OFFSET ??_C@_0N@PKBMFJDK@glBlendColor@
  004a2	ff 55 08	 call	 DWORD PTR _load$[ebp]
  004a5	83 c4 04	 add	 esp, 4
  004a8	3b f4		 cmp	 esi, esp
  004aa	e8 00 00 00 00	 call	 __RTC_CheckEsp
  004af	a3 00 00 00 00	 mov	 DWORD PTR _glad_glBlendColor, eax

; 1440 : 	glad_glBlendEquation = (PFNGLBLENDEQUATIONPROC)load("glBlendEquation");

  004b4	8b f4		 mov	 esi, esp
  004b6	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@PFHILPAN@glBlendEquation@
  004bb	ff 55 08	 call	 DWORD PTR _load$[ebp]
  004be	83 c4 04	 add	 esp, 4
  004c1	3b f4		 cmp	 esi, esp
  004c3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  004c8	a3 00 00 00 00	 mov	 DWORD PTR _glad_glBlendEquation, eax
$LN1@load_GL_VE:

; 1441 : }

  004cd	5f		 pop	 edi
  004ce	5e		 pop	 esi
  004cf	5b		 pop	 ebx
  004d0	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  004d6	3b ec		 cmp	 ebp, esp
  004d8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  004dd	8b e5		 mov	 esp, ebp
  004df	5d		 pop	 ebp
  004e0	c3		 ret	 0
_load_GL_VERSION_1_4 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\Light\source\repos\Spacemonster\Spacemonster-code\glad\glad.c
;	COMDAT _load_GL_VERSION_1_3
_TEXT	SEGMENT
_load$ = 8						; size = 4
_load_GL_VERSION_1_3 PROC				; COMDAT

; 1343 : static void load_GL_VERSION_1_3(GLADloadproc load) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET __550F0BDD_glad@c
  00023	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1344 : 	if(!GLAD_GL_VERSION_1_3) return;

  00028	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _GLAD_GL_VERSION_1_3, 0
  0002f	75 05		 jne	 SHORT $LN2@load_GL_VE
  00031	e9 7e 04 00 00	 jmp	 $LN1@load_GL_VE
$LN2@load_GL_VE:

; 1345 : 	glad_glActiveTexture = (PFNGLACTIVETEXTUREPROC)load("glActiveTexture");

  00036	8b f4		 mov	 esi, esp
  00038	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@KOBBIKOF@glActiveTexture@
  0003d	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00040	83 c4 04	 add	 esp, 4
  00043	3b f4		 cmp	 esi, esp
  00045	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004a	a3 00 00 00 00	 mov	 DWORD PTR _glad_glActiveTexture, eax

; 1346 : 	glad_glSampleCoverage = (PFNGLSAMPLECOVERAGEPROC)load("glSampleCoverage");

  0004f	8b f4		 mov	 esi, esp
  00051	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@BJGIPMOA@glSampleCoverage@
  00056	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00059	83 c4 04	 add	 esp, 4
  0005c	3b f4		 cmp	 esi, esp
  0005e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00063	a3 00 00 00 00	 mov	 DWORD PTR _glad_glSampleCoverage, eax

; 1347 : 	glad_glCompressedTexImage3D = (PFNGLCOMPRESSEDTEXIMAGE3DPROC)load("glCompressedTexImage3D");

  00068	8b f4		 mov	 esi, esp
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@GGHNMAGP@glCompressedTexImage3D@
  0006f	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00072	83 c4 04	 add	 esp, 4
  00075	3b f4		 cmp	 esi, esp
  00077	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007c	a3 00 00 00 00	 mov	 DWORD PTR _glad_glCompressedTexImage3D, eax

; 1348 : 	glad_glCompressedTexImage2D = (PFNGLCOMPRESSEDTEXIMAGE2DPROC)load("glCompressedTexImage2D");

  00081	8b f4		 mov	 esi, esp
  00083	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@GHLPKKFI@glCompressedTexImage2D@
  00088	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0008b	83 c4 04	 add	 esp, 4
  0008e	3b f4		 cmp	 esi, esp
  00090	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00095	a3 00 00 00 00	 mov	 DWORD PTR _glad_glCompressedTexImage2D, eax

; 1349 : 	glad_glCompressedTexImage1D = (PFNGLCOMPRESSEDTEXIMAGE1DPROC)load("glCompressedTexImage1D");

  0009a	8b f4		 mov	 esi, esp
  0009c	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@GFPJBEAB@glCompressedTexImage1D@
  000a1	ff 55 08	 call	 DWORD PTR _load$[ebp]
  000a4	83 c4 04	 add	 esp, 4
  000a7	3b f4		 cmp	 esi, esp
  000a9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ae	a3 00 00 00 00	 mov	 DWORD PTR _glad_glCompressedTexImage1D, eax

; 1350 : 	glad_glCompressedTexSubImage3D = (PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC)load("glCompressedTexSubImage3D");

  000b3	8b f4		 mov	 esi, esp
  000b5	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@EBJMCDPA@glCompressedTexSubImage3D@
  000ba	ff 55 08	 call	 DWORD PTR _load$[ebp]
  000bd	83 c4 04	 add	 esp, 4
  000c0	3b f4		 cmp	 esi, esp
  000c2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c7	a3 00 00 00 00	 mov	 DWORD PTR _glad_glCompressedTexSubImage3D, eax

; 1351 : 	glad_glCompressedTexSubImage2D = (PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC)load("glCompressedTexSubImage2D");

  000cc	8b f4		 mov	 esi, esp
  000ce	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@EAFOEJMH@glCompressedTexSubImage2D@
  000d3	ff 55 08	 call	 DWORD PTR _load$[ebp]
  000d6	83 c4 04	 add	 esp, 4
  000d9	3b f4		 cmp	 esi, esp
  000db	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e0	a3 00 00 00 00	 mov	 DWORD PTR _glad_glCompressedTexSubImage2D, eax

; 1352 : 	glad_glCompressedTexSubImage1D = (PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC)load("glCompressedTexSubImage1D");

  000e5	8b f4		 mov	 esi, esp
  000e7	68 00 00 00 00	 push	 OFFSET ??_C@_0BK@ECBIPHJO@glCompressedTexSubImage1D@
  000ec	ff 55 08	 call	 DWORD PTR _load$[ebp]
  000ef	83 c4 04	 add	 esp, 4
  000f2	3b f4		 cmp	 esi, esp
  000f4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f9	a3 00 00 00 00	 mov	 DWORD PTR _glad_glCompressedTexSubImage1D, eax

; 1353 : 	glad_glGetCompressedTexImage = (PFNGLGETCOMPRESSEDTEXIMAGEPROC)load("glGetCompressedTexImage");

  000fe	8b f4		 mov	 esi, esp
  00100	68 00 00 00 00	 push	 OFFSET ??_C@_0BI@MPANLPPL@glGetCompressedTexImage@
  00105	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00108	83 c4 04	 add	 esp, 4
  0010b	3b f4		 cmp	 esi, esp
  0010d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00112	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetCompressedTexImage, eax

; 1354 : 	glad_glClientActiveTexture = (PFNGLCLIENTACTIVETEXTUREPROC)load("glClientActiveTexture");

  00117	8b f4		 mov	 esi, esp
  00119	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@EGKOMLFO@glClientActiveTexture@
  0011e	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00121	83 c4 04	 add	 esp, 4
  00124	3b f4		 cmp	 esi, esp
  00126	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0012b	a3 00 00 00 00	 mov	 DWORD PTR _glad_glClientActiveTexture, eax

; 1355 : 	glad_glMultiTexCoord1d = (PFNGLMULTITEXCOORD1DPROC)load("glMultiTexCoord1d");

  00130	8b f4		 mov	 esi, esp
  00132	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@IHHPPFPP@glMultiTexCoord1d@
  00137	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0013a	83 c4 04	 add	 esp, 4
  0013d	3b f4		 cmp	 esi, esp
  0013f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00144	a3 00 00 00 00	 mov	 DWORD PTR _glad_glMultiTexCoord1d, eax

; 1356 : 	glad_glMultiTexCoord1dv = (PFNGLMULTITEXCOORD1DVPROC)load("glMultiTexCoord1dv");

  00149	8b f4		 mov	 esi, esp
  0014b	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FEOAEOAI@glMultiTexCoord1dv@
  00150	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00153	83 c4 04	 add	 esp, 4
  00156	3b f4		 cmp	 esi, esp
  00158	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0015d	a3 00 00 00 00	 mov	 DWORD PTR _glad_glMultiTexCoord1dv, eax

; 1357 : 	glad_glMultiTexCoord1f = (PFNGLMULTITEXCOORD1FPROC)load("glMultiTexCoord1f");

  00162	8b f4		 mov	 esi, esp
  00164	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@LFEJJHHN@glMultiTexCoord1f@
  00169	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0016c	83 c4 04	 add	 esp, 4
  0016f	3b f4		 cmp	 esi, esp
  00171	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00176	a3 00 00 00 00	 mov	 DWORD PTR _glad_glMultiTexCoord1f, eax

; 1358 : 	glad_glMultiTexCoord1fv = (PFNGLMULTITEXCOORD1FVPROC)load("glMultiTexCoord1fv");

  0017b	8b f4		 mov	 esi, esp
  0017d	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FHGEJKGG@glMultiTexCoord1fv@
  00182	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00185	83 c4 04	 add	 esp, 4
  00188	3b f4		 cmp	 esi, esp
  0018a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0018f	a3 00 00 00 00	 mov	 DWORD PTR _glad_glMultiTexCoord1fv, eax

; 1359 : 	glad_glMultiTexCoord1i = (PFNGLMULTITEXCOORD1IPROC)load("glMultiTexCoord1i");

  00194	8b f4		 mov	 esi, esp
  00196	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@DCNBILLC@glMultiTexCoord1i@
  0019b	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0019e	83 c4 04	 add	 esp, 4
  001a1	3b f4		 cmp	 esi, esp
  001a3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001a8	a3 00 00 00 00	 mov	 DWORD PTR _glad_glMultiTexCoord1i, eax

; 1360 : 	glad_glMultiTexCoord1iv = (PFNGLMULTITEXCOORD1IVPROC)load("glMultiTexCoord1iv");

  001ad	8b f4		 mov	 esi, esp
  001af	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FMDINNFL@glMultiTexCoord1iv@
  001b4	ff 55 08	 call	 DWORD PTR _load$[ebp]
  001b7	83 c4 04	 add	 esp, 4
  001ba	3b f4		 cmp	 esi, esp
  001bc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001c1	a3 00 00 00 00	 mov	 DWORD PTR _glad_glMultiTexCoord1iv, eax

; 1361 : 	glad_glMultiTexCoord1s = (PFNGLMULTITEXCOORD1SPROC)load("glMultiTexCoord1s");

  001c6	8b f4		 mov	 esi, esp
  001c8	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@ICPMHBGJ@glMultiTexCoord1s@
  001cd	ff 55 08	 call	 DWORD PTR _load$[ebp]
  001d0	83 c4 04	 add	 esp, 4
  001d3	3b f4		 cmp	 esi, esp
  001d5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001da	a3 00 00 00 00	 mov	 DWORD PTR _glad_glMultiTexCoord1s, eax

; 1362 : 	glad_glMultiTexCoord1sv = (PFNGLMULTITEXCOORD1SVPROC)load("glMultiTexCoord1sv");

  001df	8b f4		 mov	 esi, esp
  001e1	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@ENIJPLPN@glMultiTexCoord1sv@
  001e6	ff 55 08	 call	 DWORD PTR _load$[ebp]
  001e9	83 c4 04	 add	 esp, 4
  001ec	3b f4		 cmp	 esi, esp
  001ee	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001f3	a3 00 00 00 00	 mov	 DWORD PTR _glad_glMultiTexCoord1sv, eax

; 1363 : 	glad_glMultiTexCoord2d = (PFNGLMULTITEXCOORD2DPROC)load("glMultiTexCoord2d");

  001f8	8b f4		 mov	 esi, esp
  001fa	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@IFDJELKG@glMultiTexCoord2d@
  001ff	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00202	83 c4 04	 add	 esp, 4
  00205	3b f4		 cmp	 esi, esp
  00207	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0020c	a3 00 00 00 00	 mov	 DWORD PTR _glad_glMultiTexCoord2d, eax

; 1364 : 	glad_glMultiTexCoord2dv = (PFNGLMULTITEXCOORD2DVPROC)load("glMultiTexCoord2dv");

  00211	8b f4		 mov	 esi, esp
  00213	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@EGFFOBOG@glMultiTexCoord2dv@
  00218	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0021b	83 c4 04	 add	 esp, 4
  0021e	3b f4		 cmp	 esi, esp
  00220	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00225	a3 00 00 00 00	 mov	 DWORD PTR _glad_glMultiTexCoord2dv, eax

; 1365 : 	glad_glMultiTexCoord2f = (PFNGLMULTITEXCOORD2FPROC)load("glMultiTexCoord2f");

  0022a	8b f4		 mov	 esi, esp
  0022c	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@LHAPCJCE@glMultiTexCoord2f@
  00231	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00234	83 c4 04	 add	 esp, 4
  00237	3b f4		 cmp	 esi, esp
  00239	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0023e	a3 00 00 00 00	 mov	 DWORD PTR _glad_glMultiTexCoord2f, eax

; 1366 : 	glad_glMultiTexCoord2fv = (PFNGLMULTITEXCOORD2FVPROC)load("glMultiTexCoord2fv");

  00243	8b f4		 mov	 esi, esp
  00245	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@EFNBDFII@glMultiTexCoord2fv@
  0024a	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0024d	83 c4 04	 add	 esp, 4
  00250	3b f4		 cmp	 esi, esp
  00252	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00257	a3 00 00 00 00	 mov	 DWORD PTR _glad_glMultiTexCoord2fv, eax

; 1367 : 	glad_glMultiTexCoord2i = (PFNGLMULTITEXCOORD2IPROC)load("glMultiTexCoord2i");

  0025c	8b f4		 mov	 esi, esp
  0025e	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@DAJHDFOL@glMultiTexCoord2i@
  00263	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00266	83 c4 04	 add	 esp, 4
  00269	3b f4		 cmp	 esi, esp
  0026b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00270	a3 00 00 00 00	 mov	 DWORD PTR _glad_glMultiTexCoord2i, eax

; 1368 : 	glad_glMultiTexCoord2iv = (PFNGLMULTITEXCOORD2IVPROC)load("glMultiTexCoord2iv");

  00275	8b f4		 mov	 esi, esp
  00277	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@EOINHCLF@glMultiTexCoord2iv@
  0027c	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0027f	83 c4 04	 add	 esp, 4
  00282	3b f4		 cmp	 esi, esp
  00284	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00289	a3 00 00 00 00	 mov	 DWORD PTR _glad_glMultiTexCoord2iv, eax

; 1369 : 	glad_glMultiTexCoord2s = (PFNGLMULTITEXCOORD2SPROC)load("glMultiTexCoord2s");

  0028e	8b f4		 mov	 esi, esp
  00290	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@IALKMPDA@glMultiTexCoord2s@
  00295	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00298	83 c4 04	 add	 esp, 4
  0029b	3b f4		 cmp	 esi, esp
  0029d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002a2	a3 00 00 00 00	 mov	 DWORD PTR _glad_glMultiTexCoord2s, eax

; 1370 : 	glad_glMultiTexCoord2sv = (PFNGLMULTITEXCOORD2SVPROC)load("glMultiTexCoord2sv");

  002a7	8b f4		 mov	 esi, esp
  002a9	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@FPDMFEBD@glMultiTexCoord2sv@
  002ae	ff 55 08	 call	 DWORD PTR _load$[ebp]
  002b1	83 c4 04	 add	 esp, 4
  002b4	3b f4		 cmp	 esi, esp
  002b6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002bb	a3 00 00 00 00	 mov	 DWORD PTR _glad_glMultiTexCoord2sv, eax

; 1371 : 	glad_glMultiTexCoord3d = (PFNGLMULTITEXCOORD3DPROC)load("glMultiTexCoord3d");

  002c0	8b f4		 mov	 esi, esp
  002c2	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@IEPLCBJB@glMultiTexCoord3d@
  002c7	ff 55 08	 call	 DWORD PTR _load$[ebp]
  002ca	83 c4 04	 add	 esp, 4
  002cd	3b f4		 cmp	 esi, esp
  002cf	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002d4	a3 00 00 00 00	 mov	 DWORD PTR _glad_glMultiTexCoord3d, eax

; 1372 : 	glad_glMultiTexCoord3dv = (PFNGLMULTITEXCOORD3DVPROC)load("glMultiTexCoord3dv");

  002d9	8b f4		 mov	 esi, esp
  002db	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@POOJIGID@glMultiTexCoord3dv@
  002e0	ff 55 08	 call	 DWORD PTR _load$[ebp]
  002e3	83 c4 04	 add	 esp, 4
  002e6	3b f4		 cmp	 esi, esp
  002e8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002ed	a3 00 00 00 00	 mov	 DWORD PTR _glad_glMultiTexCoord3dv, eax

; 1373 : 	glad_glMultiTexCoord3f = (PFNGLMULTITEXCOORD3FPROC)load("glMultiTexCoord3f");

  002f2	8b f4		 mov	 esi, esp
  002f4	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@LGMNEDBD@glMultiTexCoord3f@
  002f9	ff 55 08	 call	 DWORD PTR _load$[ebp]
  002fc	83 c4 04	 add	 esp, 4
  002ff	3b f4		 cmp	 esi, esp
  00301	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00306	a3 00 00 00 00	 mov	 DWORD PTR _glad_glMultiTexCoord3f, eax

; 1374 : 	glad_glMultiTexCoord3fv = (PFNGLMULTITEXCOORD3FVPROC)load("glMultiTexCoord3fv");

  0030b	8b f4		 mov	 esi, esp
  0030d	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@PNGNFCON@glMultiTexCoord3fv@
  00312	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00315	83 c4 04	 add	 esp, 4
  00318	3b f4		 cmp	 esi, esp
  0031a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0031f	a3 00 00 00 00	 mov	 DWORD PTR _glad_glMultiTexCoord3fv, eax

; 1375 : 	glad_glMultiTexCoord3i = (PFNGLMULTITEXCOORD3IPROC)load("glMultiTexCoord3i");

  00324	8b f4		 mov	 esi, esp
  00326	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@DBFFFPNM@glMultiTexCoord3i@
  0032b	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0032e	83 c4 04	 add	 esp, 4
  00331	3b f4		 cmp	 esi, esp
  00333	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00338	a3 00 00 00 00	 mov	 DWORD PTR _glad_glMultiTexCoord3i, eax

; 1376 : 	glad_glMultiTexCoord3iv = (PFNGLMULTITEXCOORD3IVPROC)load("glMultiTexCoord3iv");

  0033d	8b f4		 mov	 esi, esp
  0033f	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@PGDBBFNA@glMultiTexCoord3iv@
  00344	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00347	83 c4 04	 add	 esp, 4
  0034a	3b f4		 cmp	 esi, esp
  0034c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00351	a3 00 00 00 00	 mov	 DWORD PTR _glad_glMultiTexCoord3iv, eax

; 1377 : 	glad_glMultiTexCoord3s = (PFNGLMULTITEXCOORD3SPROC)load("glMultiTexCoord3s");

  00356	8b f4		 mov	 esi, esp
  00358	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@IBHIKFAH@glMultiTexCoord3s@
  0035d	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00360	83 c4 04	 add	 esp, 4
  00363	3b f4		 cmp	 esi, esp
  00365	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0036a	a3 00 00 00 00	 mov	 DWORD PTR _glad_glMultiTexCoord3s, eax

; 1378 : 	glad_glMultiTexCoord3sv = (PFNGLMULTITEXCOORD3SVPROC)load("glMultiTexCoord3sv");

  0036f	8b f4		 mov	 esi, esp
  00371	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OHIADDHG@glMultiTexCoord3sv@
  00376	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00379	83 c4 04	 add	 esp, 4
  0037c	3b f4		 cmp	 esi, esp
  0037e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00383	a3 00 00 00 00	 mov	 DWORD PTR _glad_glMultiTexCoord3sv, eax

; 1379 : 	glad_glMultiTexCoord4d = (PFNGLMULTITEXCOORD4DPROC)load("glMultiTexCoord4d");

  00388	8b f4		 mov	 esi, esp
  0038a	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@IBLEDHBE@glMultiTexCoord4d@
  0038f	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00392	83 c4 04	 add	 esp, 4
  00395	3b f4		 cmp	 esi, esp
  00397	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0039c	a3 00 00 00 00	 mov	 DWORD PTR _glad_glMultiTexCoord4d, eax

; 1380 : 	glad_glMultiTexCoord4dv = (PFNGLMULTITEXCOORD4DVPROC)load("glMultiTexCoord4dv");

  003a1	8b f4		 mov	 esi, esp
  003a3	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@GDDOLODK@glMultiTexCoord4dv@
  003a8	ff 55 08	 call	 DWORD PTR _load$[ebp]
  003ab	83 c4 04	 add	 esp, 4
  003ae	3b f4		 cmp	 esi, esp
  003b0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003b5	a3 00 00 00 00	 mov	 DWORD PTR _glad_glMultiTexCoord4dv, eax

; 1381 : 	glad_glMultiTexCoord4f = (PFNGLMULTITEXCOORD4FPROC)load("glMultiTexCoord4f");

  003ba	8b f4		 mov	 esi, esp
  003bc	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@LDICFFJG@glMultiTexCoord4f@
  003c1	ff 55 08	 call	 DWORD PTR _load$[ebp]
  003c4	83 c4 04	 add	 esp, 4
  003c7	3b f4		 cmp	 esi, esp
  003c9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003ce	a3 00 00 00 00	 mov	 DWORD PTR _glad_glMultiTexCoord4f, eax

; 1382 : 	glad_glMultiTexCoord4fv = (PFNGLMULTITEXCOORD4FVPROC)load("glMultiTexCoord4fv");

  003d3	8b f4		 mov	 esi, esp
  003d5	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@GALKGKFE@glMultiTexCoord4fv@
  003da	ff 55 08	 call	 DWORD PTR _load$[ebp]
  003dd	83 c4 04	 add	 esp, 4
  003e0	3b f4		 cmp	 esi, esp
  003e2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003e7	a3 00 00 00 00	 mov	 DWORD PTR _glad_glMultiTexCoord4fv, eax

; 1383 : 	glad_glMultiTexCoord4i = (PFNGLMULTITEXCOORD4IPROC)load("glMultiTexCoord4i");

  003ec	8b f4		 mov	 esi, esp
  003ee	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@DEBKEJFJ@glMultiTexCoord4i@
  003f3	ff 55 08	 call	 DWORD PTR _load$[ebp]
  003f6	83 c4 04	 add	 esp, 4
  003f9	3b f4		 cmp	 esi, esp
  003fb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00400	a3 00 00 00 00	 mov	 DWORD PTR _glad_glMultiTexCoord4i, eax

; 1384 : 	glad_glMultiTexCoord4iv = (PFNGLMULTITEXCOORD4IVPROC)load("glMultiTexCoord4iv");

  00405	8b f4		 mov	 esi, esp
  00407	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@GLOGCNGJ@glMultiTexCoord4iv@
  0040c	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0040f	83 c4 04	 add	 esp, 4
  00412	3b f4		 cmp	 esi, esp
  00414	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00419	a3 00 00 00 00	 mov	 DWORD PTR _glad_glMultiTexCoord4iv, eax

; 1385 : 	glad_glMultiTexCoord4s = (PFNGLMULTITEXCOORD4SPROC)load("glMultiTexCoord4s");

  0041e	8b f4		 mov	 esi, esp
  00420	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@IEDHLDIC@glMultiTexCoord4s@
  00425	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00428	83 c4 04	 add	 esp, 4
  0042b	3b f4		 cmp	 esi, esp
  0042d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00432	a3 00 00 00 00	 mov	 DWORD PTR _glad_glMultiTexCoord4s, eax

; 1386 : 	glad_glMultiTexCoord4sv = (PFNGLMULTITEXCOORD4SVPROC)load("glMultiTexCoord4sv");

  00437	8b f4		 mov	 esi, esp
  00439	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@HKFHALMP@glMultiTexCoord4sv@
  0043e	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00441	83 c4 04	 add	 esp, 4
  00444	3b f4		 cmp	 esi, esp
  00446	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0044b	a3 00 00 00 00	 mov	 DWORD PTR _glad_glMultiTexCoord4sv, eax

; 1387 : 	glad_glLoadTransposeMatrixf = (PFNGLLOADTRANSPOSEMATRIXFPROC)load("glLoadTransposeMatrixf");

  00450	8b f4		 mov	 esi, esp
  00452	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@OJNLGHA@glLoadTransposeMatrixf@
  00457	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0045a	83 c4 04	 add	 esp, 4
  0045d	3b f4		 cmp	 esi, esp
  0045f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00464	a3 00 00 00 00	 mov	 DWORD PTR _glad_glLoadTransposeMatrixf, eax

; 1388 : 	glad_glLoadTransposeMatrixd = (PFNGLLOADTRANSPOSEMATRIXDPROC)load("glLoadTransposeMatrixd");

  00469	8b f4		 mov	 esi, esp
  0046b	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@DMKLNEPC@glLoadTransposeMatrixd@
  00470	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00473	83 c4 04	 add	 esp, 4
  00476	3b f4		 cmp	 esi, esp
  00478	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0047d	a3 00 00 00 00	 mov	 DWORD PTR _glad_glLoadTransposeMatrixd, eax

; 1389 : 	glad_glMultTransposeMatrixf = (PFNGLMULTTRANSPOSEMATRIXFPROC)load("glMultTransposeMatrixf");

  00482	8b f4		 mov	 esi, esp
  00484	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@DPBMPCNC@glMultTransposeMatrixf@
  00489	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0048c	83 c4 04	 add	 esp, 4
  0048f	3b f4		 cmp	 esi, esp
  00491	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00496	a3 00 00 00 00	 mov	 DWORD PTR _glad_glMultTransposeMatrixf, eax

; 1390 : 	glad_glMultTransposeMatrixd = (PFNGLMULTTRANSPOSEMATRIXDPROC)load("glMultTransposeMatrixd");

  0049b	8b f4		 mov	 esi, esp
  0049d	68 00 00 00 00	 push	 OFFSET ??_C@_0BH@NCKJAFA@glMultTransposeMatrixd@
  004a2	ff 55 08	 call	 DWORD PTR _load$[ebp]
  004a5	83 c4 04	 add	 esp, 4
  004a8	3b f4		 cmp	 esi, esp
  004aa	e8 00 00 00 00	 call	 __RTC_CheckEsp
  004af	a3 00 00 00 00	 mov	 DWORD PTR _glad_glMultTransposeMatrixd, eax
$LN1@load_GL_VE:

; 1391 : }

  004b4	5f		 pop	 edi
  004b5	5e		 pop	 esi
  004b6	5b		 pop	 ebx
  004b7	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  004bd	3b ec		 cmp	 ebp, esp
  004bf	e8 00 00 00 00	 call	 __RTC_CheckEsp
  004c4	8b e5		 mov	 esp, ebp
  004c6	5d		 pop	 ebp
  004c7	c3		 ret	 0
_load_GL_VERSION_1_3 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\Light\source\repos\Spacemonster\Spacemonster-code\glad\glad.c
;	COMDAT _load_GL_VERSION_1_2
_TEXT	SEGMENT
_load$ = 8						; size = 4
_load_GL_VERSION_1_2 PROC				; COMDAT

; 1336 : static void load_GL_VERSION_1_2(GLADloadproc load) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET __550F0BDD_glad@c
  00023	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1337 : 	if(!GLAD_GL_VERSION_1_2) return;

  00028	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _GLAD_GL_VERSION_1_2, 0
  0002f	75 02		 jne	 SHORT $LN2@load_GL_VE
  00031	eb 64		 jmp	 SHORT $LN1@load_GL_VE
$LN2@load_GL_VE:

; 1338 : 	glad_glDrawRangeElements = (PFNGLDRAWRANGEELEMENTSPROC)load("glDrawRangeElements");

  00033	8b f4		 mov	 esi, esp
  00035	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@IHNAGJGJ@glDrawRangeElements@
  0003a	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0003d	83 c4 04	 add	 esp, 4
  00040	3b f4		 cmp	 esi, esp
  00042	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00047	a3 00 00 00 00	 mov	 DWORD PTR _glad_glDrawRangeElements, eax

; 1339 : 	glad_glTexImage3D = (PFNGLTEXIMAGE3DPROC)load("glTexImage3D");

  0004c	8b f4		 mov	 esi, esp
  0004e	68 00 00 00 00	 push	 OFFSET ??_C@_0N@JAEIBBBF@glTexImage3D@
  00053	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00056	83 c4 04	 add	 esp, 4
  00059	3b f4		 cmp	 esi, esp
  0005b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00060	a3 00 00 00 00	 mov	 DWORD PTR _glad_glTexImage3D, eax

; 1340 : 	glad_glTexSubImage3D = (PFNGLTEXSUBIMAGE3DPROC)load("glTexSubImage3D");

  00065	8b f4		 mov	 esi, esp
  00067	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@NGGKPOPN@glTexSubImage3D@
  0006c	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0006f	83 c4 04	 add	 esp, 4
  00072	3b f4		 cmp	 esi, esp
  00074	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00079	a3 00 00 00 00	 mov	 DWORD PTR _glad_glTexSubImage3D, eax

; 1341 : 	glad_glCopyTexSubImage3D = (PFNGLCOPYTEXSUBIMAGE3DPROC)load("glCopyTexSubImage3D");

  0007e	8b f4		 mov	 esi, esp
  00080	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@PJFGNMAG@glCopyTexSubImage3D@
  00085	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00088	83 c4 04	 add	 esp, 4
  0008b	3b f4		 cmp	 esi, esp
  0008d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00092	a3 00 00 00 00	 mov	 DWORD PTR _glad_glCopyTexSubImage3D, eax
$LN1@load_GL_VE:

; 1342 : }

  00097	5f		 pop	 edi
  00098	5e		 pop	 esi
  00099	5b		 pop	 ebx
  0009a	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  000a0	3b ec		 cmp	 ebp, esp
  000a2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a7	8b e5		 mov	 esp, ebp
  000a9	5d		 pop	 ebp
  000aa	c3		 ret	 0
_load_GL_VERSION_1_2 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\Light\source\repos\Spacemonster\Spacemonster-code\glad\glad.c
;	COMDAT _load_GL_VERSION_1_1
_TEXT	SEGMENT
_load$ = 8						; size = 4
_load_GL_VERSION_1_1 PROC				; COMDAT

; 1303 : static void load_GL_VERSION_1_1(GLADloadproc load) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET __550F0BDD_glad@c
  00023	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1304 : 	if(!GLAD_GL_VERSION_1_1) return;

  00028	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _GLAD_GL_VERSION_1_1, 0
  0002f	75 05		 jne	 SHORT $LN2@load_GL_VE
  00031	e9 ee 02 00 00	 jmp	 $LN1@load_GL_VE
$LN2@load_GL_VE:

; 1305 : 	glad_glDrawArrays = (PFNGLDRAWARRAYSPROC)load("glDrawArrays");

  00036	8b f4		 mov	 esi, esp
  00038	68 00 00 00 00	 push	 OFFSET ??_C@_0N@CMNPPOHA@glDrawArrays@
  0003d	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00040	83 c4 04	 add	 esp, 4
  00043	3b f4		 cmp	 esi, esp
  00045	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004a	a3 00 00 00 00	 mov	 DWORD PTR _glad_glDrawArrays, eax

; 1306 : 	glad_glDrawElements = (PFNGLDRAWELEMENTSPROC)load("glDrawElements");

  0004f	8b f4		 mov	 esi, esp
  00051	68 00 00 00 00	 push	 OFFSET ??_C@_0P@MENFIFGE@glDrawElements@
  00056	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00059	83 c4 04	 add	 esp, 4
  0005c	3b f4		 cmp	 esi, esp
  0005e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00063	a3 00 00 00 00	 mov	 DWORD PTR _glad_glDrawElements, eax

; 1307 : 	glad_glGetPointerv = (PFNGLGETPOINTERVPROC)load("glGetPointerv");

  00068	8b f4		 mov	 esi, esp
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_0O@LADEDGJO@glGetPointerv@
  0006f	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00072	83 c4 04	 add	 esp, 4
  00075	3b f4		 cmp	 esi, esp
  00077	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007c	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetPointerv, eax

; 1308 : 	glad_glPolygonOffset = (PFNGLPOLYGONOFFSETPROC)load("glPolygonOffset");

  00081	8b f4		 mov	 esi, esp
  00083	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@FFBJGNC@glPolygonOffset@
  00088	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0008b	83 c4 04	 add	 esp, 4
  0008e	3b f4		 cmp	 esi, esp
  00090	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00095	a3 00 00 00 00	 mov	 DWORD PTR _glad_glPolygonOffset, eax

; 1309 : 	glad_glCopyTexImage1D = (PFNGLCOPYTEXIMAGE1DPROC)load("glCopyTexImage1D");

  0009a	8b f4		 mov	 esi, esp
  0009c	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@MEEDBHPL@glCopyTexImage1D@
  000a1	ff 55 08	 call	 DWORD PTR _load$[ebp]
  000a4	83 c4 04	 add	 esp, 4
  000a7	3b f4		 cmp	 esi, esp
  000a9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ae	a3 00 00 00 00	 mov	 DWORD PTR _glad_glCopyTexImage1D, eax

; 1310 : 	glad_glCopyTexImage2D = (PFNGLCOPYTEXIMAGE2DPROC)load("glCopyTexImage2D");

  000b3	8b f4		 mov	 esi, esp
  000b5	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@MGAFKJKC@glCopyTexImage2D@
  000ba	ff 55 08	 call	 DWORD PTR _load$[ebp]
  000bd	83 c4 04	 add	 esp, 4
  000c0	3b f4		 cmp	 esi, esp
  000c2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c7	a3 00 00 00 00	 mov	 DWORD PTR _glad_glCopyTexImage2D, eax

; 1311 : 	glad_glCopyTexSubImage1D = (PFNGLCOPYTEXSUBIMAGE1DPROC)load("glCopyTexSubImage1D");

  000cc	8b f4		 mov	 esi, esp
  000ce	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@PKNCAIGI@glCopyTexSubImage1D@
  000d3	ff 55 08	 call	 DWORD PTR _load$[ebp]
  000d6	83 c4 04	 add	 esp, 4
  000d9	3b f4		 cmp	 esi, esp
  000db	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e0	a3 00 00 00 00	 mov	 DWORD PTR _glad_glCopyTexSubImage1D, eax

; 1312 : 	glad_glCopyTexSubImage2D = (PFNGLCOPYTEXSUBIMAGE2DPROC)load("glCopyTexSubImage2D");

  000e5	8b f4		 mov	 esi, esp
  000e7	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@PIJELGDB@glCopyTexSubImage2D@
  000ec	ff 55 08	 call	 DWORD PTR _load$[ebp]
  000ef	83 c4 04	 add	 esp, 4
  000f2	3b f4		 cmp	 esi, esp
  000f4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f9	a3 00 00 00 00	 mov	 DWORD PTR _glad_glCopyTexSubImage2D, eax

; 1313 : 	glad_glTexSubImage1D = (PFNGLTEXSUBIMAGE1DPROC)load("glTexSubImage1D");

  000fe	8b f4		 mov	 esi, esp
  00100	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@NFOOCKJD@glTexSubImage1D@
  00105	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00108	83 c4 04	 add	 esp, 4
  0010b	3b f4		 cmp	 esi, esp
  0010d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00112	a3 00 00 00 00	 mov	 DWORD PTR _glad_glTexSubImage1D, eax

; 1314 : 	glad_glTexSubImage2D = (PFNGLTEXSUBIMAGE2DPROC)load("glTexSubImage2D");

  00117	8b f4		 mov	 esi, esp
  00119	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@NHKIJEMK@glTexSubImage2D@
  0011e	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00121	83 c4 04	 add	 esp, 4
  00124	3b f4		 cmp	 esi, esp
  00126	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0012b	a3 00 00 00 00	 mov	 DWORD PTR _glad_glTexSubImage2D, eax

; 1315 : 	glad_glBindTexture = (PFNGLBINDTEXTUREPROC)load("glBindTexture");

  00130	8b f4		 mov	 esi, esp
  00132	68 00 00 00 00	 push	 OFFSET ??_C@_0O@JKKCIBGC@glBindTexture@
  00137	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0013a	83 c4 04	 add	 esp, 4
  0013d	3b f4		 cmp	 esi, esp
  0013f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00144	a3 00 00 00 00	 mov	 DWORD PTR _glad_glBindTexture, eax

; 1316 : 	glad_glDeleteTextures = (PFNGLDELETETEXTURESPROC)load("glDeleteTextures");

  00149	8b f4		 mov	 esi, esp
  0014b	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@KMPLFJIC@glDeleteTextures@
  00150	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00153	83 c4 04	 add	 esp, 4
  00156	3b f4		 cmp	 esi, esp
  00158	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0015d	a3 00 00 00 00	 mov	 DWORD PTR _glad_glDeleteTextures, eax

; 1317 : 	glad_glGenTextures = (PFNGLGENTEXTURESPROC)load("glGenTextures");

  00162	8b f4		 mov	 esi, esp
  00164	68 00 00 00 00	 push	 OFFSET ??_C@_0O@LLMANLNK@glGenTextures@
  00169	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0016c	83 c4 04	 add	 esp, 4
  0016f	3b f4		 cmp	 esi, esp
  00171	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00176	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGenTextures, eax

; 1318 : 	glad_glIsTexture = (PFNGLISTEXTUREPROC)load("glIsTexture");

  0017b	8b f4		 mov	 esi, esp
  0017d	68 00 00 00 00	 push	 OFFSET ??_C@_0M@NJHAEPDN@glIsTexture@
  00182	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00185	83 c4 04	 add	 esp, 4
  00188	3b f4		 cmp	 esi, esp
  0018a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0018f	a3 00 00 00 00	 mov	 DWORD PTR _glad_glIsTexture, eax

; 1319 : 	glad_glArrayElement = (PFNGLARRAYELEMENTPROC)load("glArrayElement");

  00194	8b f4		 mov	 esi, esp
  00196	68 00 00 00 00	 push	 OFFSET ??_C@_0P@CKCIJELG@glArrayElement@
  0019b	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0019e	83 c4 04	 add	 esp, 4
  001a1	3b f4		 cmp	 esi, esp
  001a3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001a8	a3 00 00 00 00	 mov	 DWORD PTR _glad_glArrayElement, eax

; 1320 : 	glad_glColorPointer = (PFNGLCOLORPOINTERPROC)load("glColorPointer");

  001ad	8b f4		 mov	 esi, esp
  001af	68 00 00 00 00	 push	 OFFSET ??_C@_0P@DPKEGLKI@glColorPointer@
  001b4	ff 55 08	 call	 DWORD PTR _load$[ebp]
  001b7	83 c4 04	 add	 esp, 4
  001ba	3b f4		 cmp	 esi, esp
  001bc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001c1	a3 00 00 00 00	 mov	 DWORD PTR _glad_glColorPointer, eax

; 1321 : 	glad_glDisableClientState = (PFNGLDISABLECLIENTSTATEPROC)load("glDisableClientState");

  001c6	8b f4		 mov	 esi, esp
  001c8	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@LJDHBNBP@glDisableClientState@
  001cd	ff 55 08	 call	 DWORD PTR _load$[ebp]
  001d0	83 c4 04	 add	 esp, 4
  001d3	3b f4		 cmp	 esi, esp
  001d5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001da	a3 00 00 00 00	 mov	 DWORD PTR _glad_glDisableClientState, eax

; 1322 : 	glad_glEdgeFlagPointer = (PFNGLEDGEFLAGPOINTERPROC)load("glEdgeFlagPointer");

  001df	8b f4		 mov	 esi, esp
  001e1	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@LILGCNN@glEdgeFlagPointer@
  001e6	ff 55 08	 call	 DWORD PTR _load$[ebp]
  001e9	83 c4 04	 add	 esp, 4
  001ec	3b f4		 cmp	 esi, esp
  001ee	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001f3	a3 00 00 00 00	 mov	 DWORD PTR _glad_glEdgeFlagPointer, eax

; 1323 : 	glad_glEnableClientState = (PFNGLENABLECLIENTSTATEPROC)load("glEnableClientState");

  001f8	8b f4		 mov	 esi, esp
  001fa	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@KECPKGNE@glEnableClientState@
  001ff	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00202	83 c4 04	 add	 esp, 4
  00205	3b f4		 cmp	 esi, esp
  00207	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0020c	a3 00 00 00 00	 mov	 DWORD PTR _glad_glEnableClientState, eax

; 1324 : 	glad_glIndexPointer = (PFNGLINDEXPOINTERPROC)load("glIndexPointer");

  00211	8b f4		 mov	 esi, esp
  00213	68 00 00 00 00	 push	 OFFSET ??_C@_0P@KGJBLKPD@glIndexPointer@
  00218	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0021b	83 c4 04	 add	 esp, 4
  0021e	3b f4		 cmp	 esi, esp
  00220	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00225	a3 00 00 00 00	 mov	 DWORD PTR _glad_glIndexPointer, eax

; 1325 : 	glad_glInterleavedArrays = (PFNGLINTERLEAVEDARRAYSPROC)load("glInterleavedArrays");

  0022a	8b f4		 mov	 esi, esp
  0022c	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@EDEDCKLI@glInterleavedArrays@
  00231	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00234	83 c4 04	 add	 esp, 4
  00237	3b f4		 cmp	 esi, esp
  00239	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0023e	a3 00 00 00 00	 mov	 DWORD PTR _glad_glInterleavedArrays, eax

; 1326 : 	glad_glNormalPointer = (PFNGLNORMALPOINTERPROC)load("glNormalPointer");

  00243	8b f4		 mov	 esi, esp
  00245	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@DCLMCEOP@glNormalPointer@
  0024a	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0024d	83 c4 04	 add	 esp, 4
  00250	3b f4		 cmp	 esi, esp
  00252	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00257	a3 00 00 00 00	 mov	 DWORD PTR _glad_glNormalPointer, eax

; 1327 : 	glad_glTexCoordPointer = (PFNGLTEXCOORDPOINTERPROC)load("glTexCoordPointer");

  0025c	8b f4		 mov	 esi, esp
  0025e	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@DAOMILMO@glTexCoordPointer@
  00263	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00266	83 c4 04	 add	 esp, 4
  00269	3b f4		 cmp	 esi, esp
  0026b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00270	a3 00 00 00 00	 mov	 DWORD PTR _glad_glTexCoordPointer, eax

; 1328 : 	glad_glVertexPointer = (PFNGLVERTEXPOINTERPROC)load("glVertexPointer");

  00275	8b f4		 mov	 esi, esp
  00277	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@HAHECJNK@glVertexPointer@
  0027c	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0027f	83 c4 04	 add	 esp, 4
  00282	3b f4		 cmp	 esi, esp
  00284	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00289	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertexPointer, eax

; 1329 : 	glad_glAreTexturesResident = (PFNGLARETEXTURESRESIDENTPROC)load("glAreTexturesResident");

  0028e	8b f4		 mov	 esi, esp
  00290	68 00 00 00 00	 push	 OFFSET ??_C@_0BG@DHOKJLEP@glAreTexturesResident@
  00295	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00298	83 c4 04	 add	 esp, 4
  0029b	3b f4		 cmp	 esi, esp
  0029d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002a2	a3 00 00 00 00	 mov	 DWORD PTR _glad_glAreTexturesResident, eax

; 1330 : 	glad_glPrioritizeTextures = (PFNGLPRIORITIZETEXTURESPROC)load("glPrioritizeTextures");

  002a7	8b f4		 mov	 esi, esp
  002a9	68 00 00 00 00	 push	 OFFSET ??_C@_0BF@FFCGNNIA@glPrioritizeTextures@
  002ae	ff 55 08	 call	 DWORD PTR _load$[ebp]
  002b1	83 c4 04	 add	 esp, 4
  002b4	3b f4		 cmp	 esi, esp
  002b6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002bb	a3 00 00 00 00	 mov	 DWORD PTR _glad_glPrioritizeTextures, eax

; 1331 : 	glad_glIndexub = (PFNGLINDEXUBPROC)load("glIndexub");

  002c0	8b f4		 mov	 esi, esp
  002c2	68 00 00 00 00	 push	 OFFSET ??_C@_09BBIPIKNC@glIndexub@
  002c7	ff 55 08	 call	 DWORD PTR _load$[ebp]
  002ca	83 c4 04	 add	 esp, 4
  002cd	3b f4		 cmp	 esi, esp
  002cf	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002d4	a3 00 00 00 00	 mov	 DWORD PTR _glad_glIndexub, eax

; 1332 : 	glad_glIndexubv = (PFNGLINDEXUBVPROC)load("glIndexubv");

  002d9	8b f4		 mov	 esi, esp
  002db	68 00 00 00 00	 push	 OFFSET ??_C@_0L@BBKJOCAC@glIndexubv@
  002e0	ff 55 08	 call	 DWORD PTR _load$[ebp]
  002e3	83 c4 04	 add	 esp, 4
  002e6	3b f4		 cmp	 esi, esp
  002e8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002ed	a3 00 00 00 00	 mov	 DWORD PTR _glad_glIndexubv, eax

; 1333 : 	glad_glPopClientAttrib = (PFNGLPOPCLIENTATTRIBPROC)load("glPopClientAttrib");

  002f2	8b f4		 mov	 esi, esp
  002f4	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@GOOJKIDH@glPopClientAttrib@
  002f9	ff 55 08	 call	 DWORD PTR _load$[ebp]
  002fc	83 c4 04	 add	 esp, 4
  002ff	3b f4		 cmp	 esi, esp
  00301	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00306	a3 00 00 00 00	 mov	 DWORD PTR _glad_glPopClientAttrib, eax

; 1334 : 	glad_glPushClientAttrib = (PFNGLPUSHCLIENTATTRIBPROC)load("glPushClientAttrib");

  0030b	8b f4		 mov	 esi, esp
  0030d	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@JKGPLNEA@glPushClientAttrib@
  00312	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00315	83 c4 04	 add	 esp, 4
  00318	3b f4		 cmp	 esi, esp
  0031a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0031f	a3 00 00 00 00	 mov	 DWORD PTR _glad_glPushClientAttrib, eax
$LN1@load_GL_VE:

; 1335 : }

  00324	5f		 pop	 edi
  00325	5e		 pop	 esi
  00326	5b		 pop	 ebx
  00327	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  0032d	3b ec		 cmp	 ebp, esp
  0032f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00334	8b e5		 mov	 esp, ebp
  00336	5d		 pop	 ebp
  00337	c3		 ret	 0
_load_GL_VERSION_1_1 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\Light\source\repos\Spacemonster\Spacemonster-code\glad\glad.c
;	COMDAT _load_GL_VERSION_1_0
_TEXT	SEGMENT
_load$ = 8						; size = 4
_load_GL_VERSION_1_0 PROC				; COMDAT

; 994  : static void load_GL_VERSION_1_0(GLADloadproc load) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET __550F0BDD_glad@c
  00023	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 995  : 	if(!GLAD_GL_VERSION_1_0) return;

  00028	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _GLAD_GL_VERSION_1_0, 0
  0002f	75 05		 jne	 SHORT $LN2@load_GL_VE
  00031	e9 e2 1d 00 00	 jmp	 $LN1@load_GL_VE
$LN2@load_GL_VE:

; 996  : 	glad_glCullFace = (PFNGLCULLFACEPROC)load("glCullFace");

  00036	8b f4		 mov	 esi, esp
  00038	68 00 00 00 00	 push	 OFFSET ??_C@_0L@BAPBLHME@glCullFace@
  0003d	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00040	83 c4 04	 add	 esp, 4
  00043	3b f4		 cmp	 esi, esp
  00045	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004a	a3 00 00 00 00	 mov	 DWORD PTR _glad_glCullFace, eax

; 997  : 	glad_glFrontFace = (PFNGLFRONTFACEPROC)load("glFrontFace");

  0004f	8b f4		 mov	 esi, esp
  00051	68 00 00 00 00	 push	 OFFSET ??_C@_0M@ILBMDJDA@glFrontFace@
  00056	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00059	83 c4 04	 add	 esp, 4
  0005c	3b f4		 cmp	 esi, esp
  0005e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00063	a3 00 00 00 00	 mov	 DWORD PTR _glad_glFrontFace, eax

; 998  : 	glad_glHint = (PFNGLHINTPROC)load("glHint");

  00068	8b f4		 mov	 esi, esp
  0006a	68 00 00 00 00	 push	 OFFSET ??_C@_06HEADGMBC@glHint@
  0006f	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00072	83 c4 04	 add	 esp, 4
  00075	3b f4		 cmp	 esi, esp
  00077	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007c	a3 00 00 00 00	 mov	 DWORD PTR _glad_glHint, eax

; 999  : 	glad_glLineWidth = (PFNGLLINEWIDTHPROC)load("glLineWidth");

  00081	8b f4		 mov	 esi, esp
  00083	68 00 00 00 00	 push	 OFFSET ??_C@_0M@CFLGNFPG@glLineWidth@
  00088	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0008b	83 c4 04	 add	 esp, 4
  0008e	3b f4		 cmp	 esi, esp
  00090	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00095	a3 00 00 00 00	 mov	 DWORD PTR _glad_glLineWidth, eax

; 1000 : 	glad_glPointSize = (PFNGLPOINTSIZEPROC)load("glPointSize");

  0009a	8b f4		 mov	 esi, esp
  0009c	68 00 00 00 00	 push	 OFFSET ??_C@_0M@EEAPMMNM@glPointSize@
  000a1	ff 55 08	 call	 DWORD PTR _load$[ebp]
  000a4	83 c4 04	 add	 esp, 4
  000a7	3b f4		 cmp	 esi, esp
  000a9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ae	a3 00 00 00 00	 mov	 DWORD PTR _glad_glPointSize, eax

; 1001 : 	glad_glPolygonMode = (PFNGLPOLYGONMODEPROC)load("glPolygonMode");

  000b3	8b f4		 mov	 esi, esp
  000b5	68 00 00 00 00	 push	 OFFSET ??_C@_0O@DKMNBFMB@glPolygonMode@
  000ba	ff 55 08	 call	 DWORD PTR _load$[ebp]
  000bd	83 c4 04	 add	 esp, 4
  000c0	3b f4		 cmp	 esi, esp
  000c2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000c7	a3 00 00 00 00	 mov	 DWORD PTR _glad_glPolygonMode, eax

; 1002 : 	glad_glScissor = (PFNGLSCISSORPROC)load("glScissor");

  000cc	8b f4		 mov	 esi, esp
  000ce	68 00 00 00 00	 push	 OFFSET ??_C@_09ECGPAEPL@glScissor@
  000d3	ff 55 08	 call	 DWORD PTR _load$[ebp]
  000d6	83 c4 04	 add	 esp, 4
  000d9	3b f4		 cmp	 esi, esp
  000db	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000e0	a3 00 00 00 00	 mov	 DWORD PTR _glad_glScissor, eax

; 1003 : 	glad_glTexParameterf = (PFNGLTEXPARAMETERFPROC)load("glTexParameterf");

  000e5	8b f4		 mov	 esi, esp
  000e7	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@INKFIMGP@glTexParameterf@
  000ec	ff 55 08	 call	 DWORD PTR _load$[ebp]
  000ef	83 c4 04	 add	 esp, 4
  000f2	3b f4		 cmp	 esi, esp
  000f4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000f9	a3 00 00 00 00	 mov	 DWORD PTR _glad_glTexParameterf, eax

; 1004 : 	glad_glTexParameterfv = (PFNGLTEXPARAMETERFVPROC)load("glTexParameterfv");

  000fe	8b f4		 mov	 esi, esp
  00100	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@KEOFAHDF@glTexParameterfv@
  00105	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00108	83 c4 04	 add	 esp, 4
  0010b	3b f4		 cmp	 esi, esp
  0010d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00112	a3 00 00 00 00	 mov	 DWORD PTR _glad_glTexParameterfv, eax

; 1005 : 	glad_glTexParameteri = (PFNGLTEXPARAMETERIPROC)load("glTexParameteri");

  00117	8b f4		 mov	 esi, esp
  00119	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@KDNJAKA@glTexParameteri@
  0011e	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00121	83 c4 04	 add	 esp, 4
  00124	3b f4		 cmp	 esi, esp
  00126	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0012b	a3 00 00 00 00	 mov	 DWORD PTR _glad_glTexParameteri, eax

; 1006 : 	glad_glTexParameteriv = (PFNGLTEXPARAMETERIVPROC)load("glTexParameteriv");

  00130	8b f4		 mov	 esi, esp
  00132	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@KPLJEAAI@glTexParameteriv@
  00137	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0013a	83 c4 04	 add	 esp, 4
  0013d	3b f4		 cmp	 esi, esp
  0013f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00144	a3 00 00 00 00	 mov	 DWORD PTR _glad_glTexParameteriv, eax

; 1007 : 	glad_glTexImage1D = (PFNGLTEXIMAGE1DPROC)load("glTexImage1D");

  00149	8b f4		 mov	 esi, esp
  0014b	68 00 00 00 00	 push	 OFFSET ??_C@_0N@JDMMMFHL@glTexImage1D@
  00150	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00153	83 c4 04	 add	 esp, 4
  00156	3b f4		 cmp	 esi, esp
  00158	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0015d	a3 00 00 00 00	 mov	 DWORD PTR _glad_glTexImage1D, eax

; 1008 : 	glad_glTexImage2D = (PFNGLTEXIMAGE2DPROC)load("glTexImage2D");

  00162	8b f4		 mov	 esi, esp
  00164	68 00 00 00 00	 push	 OFFSET ??_C@_0N@JBIKHLCC@glTexImage2D@
  00169	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0016c	83 c4 04	 add	 esp, 4
  0016f	3b f4		 cmp	 esi, esp
  00171	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00176	a3 00 00 00 00	 mov	 DWORD PTR _glad_glTexImage2D, eax

; 1009 : 	glad_glDrawBuffer = (PFNGLDRAWBUFFERPROC)load("glDrawBuffer");

  0017b	8b f4		 mov	 esi, esp
  0017d	68 00 00 00 00	 push	 OFFSET ??_C@_0N@EKCLGPL@glDrawBuffer@
  00182	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00185	83 c4 04	 add	 esp, 4
  00188	3b f4		 cmp	 esi, esp
  0018a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0018f	a3 00 00 00 00	 mov	 DWORD PTR _glad_glDrawBuffer, eax

; 1010 : 	glad_glClear = (PFNGLCLEARPROC)load("glClear");

  00194	8b f4		 mov	 esi, esp
  00196	68 00 00 00 00	 push	 OFFSET ??_C@_07IBAPPAHJ@glClear@
  0019b	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0019e	83 c4 04	 add	 esp, 4
  001a1	3b f4		 cmp	 esi, esp
  001a3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001a8	a3 00 00 00 00	 mov	 DWORD PTR _glad_glClear, eax

; 1011 : 	glad_glClearColor = (PFNGLCLEARCOLORPROC)load("glClearColor");

  001ad	8b f4		 mov	 esi, esp
  001af	68 00 00 00 00	 push	 OFFSET ??_C@_0N@OGLMDNKC@glClearColor@
  001b4	ff 55 08	 call	 DWORD PTR _load$[ebp]
  001b7	83 c4 04	 add	 esp, 4
  001ba	3b f4		 cmp	 esi, esp
  001bc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001c1	a3 00 00 00 00	 mov	 DWORD PTR _glad_glClearColor, eax

; 1012 : 	glad_glClearStencil = (PFNGLCLEARSTENCILPROC)load("glClearStencil");

  001c6	8b f4		 mov	 esi, esp
  001c8	68 00 00 00 00	 push	 OFFSET ??_C@_0P@KBLPBBFP@glClearStencil@
  001cd	ff 55 08	 call	 DWORD PTR _load$[ebp]
  001d0	83 c4 04	 add	 esp, 4
  001d3	3b f4		 cmp	 esi, esp
  001d5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001da	a3 00 00 00 00	 mov	 DWORD PTR _glad_glClearStencil, eax

; 1013 : 	glad_glClearDepth = (PFNGLCLEARDEPTHPROC)load("glClearDepth");

  001df	8b f4		 mov	 esi, esp
  001e1	68 00 00 00 00	 push	 OFFSET ??_C@_0N@LJIELNG@glClearDepth@
  001e6	ff 55 08	 call	 DWORD PTR _load$[ebp]
  001e9	83 c4 04	 add	 esp, 4
  001ec	3b f4		 cmp	 esi, esp
  001ee	e8 00 00 00 00	 call	 __RTC_CheckEsp
  001f3	a3 00 00 00 00	 mov	 DWORD PTR _glad_glClearDepth, eax

; 1014 : 	glad_glStencilMask = (PFNGLSTENCILMASKPROC)load("glStencilMask");

  001f8	8b f4		 mov	 esi, esp
  001fa	68 00 00 00 00	 push	 OFFSET ??_C@_0O@DJFHPFEP@glStencilMask@
  001ff	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00202	83 c4 04	 add	 esp, 4
  00205	3b f4		 cmp	 esi, esp
  00207	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0020c	a3 00 00 00 00	 mov	 DWORD PTR _glad_glStencilMask, eax

; 1015 : 	glad_glColorMask = (PFNGLCOLORMASKPROC)load("glColorMask");

  00211	8b f4		 mov	 esi, esp
  00213	68 00 00 00 00	 push	 OFFSET ??_C@_0M@DLGOAHPH@glColorMask@
  00218	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0021b	83 c4 04	 add	 esp, 4
  0021e	3b f4		 cmp	 esi, esp
  00220	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00225	a3 00 00 00 00	 mov	 DWORD PTR _glad_glColorMask, eax

; 1016 : 	glad_glDepthMask = (PFNGLDEPTHMASKPROC)load("glDepthMask");

  0022a	8b f4		 mov	 esi, esp
  0022c	68 00 00 00 00	 push	 OFFSET ??_C@_0M@KABMFLLN@glDepthMask@
  00231	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00234	83 c4 04	 add	 esp, 4
  00237	3b f4		 cmp	 esi, esp
  00239	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0023e	a3 00 00 00 00	 mov	 DWORD PTR _glad_glDepthMask, eax

; 1017 : 	glad_glDisable = (PFNGLDISABLEPROC)load("glDisable");

  00243	8b f4		 mov	 esi, esp
  00245	68 00 00 00 00	 push	 OFFSET ??_C@_09MHGMIMKN@glDisable@
  0024a	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0024d	83 c4 04	 add	 esp, 4
  00250	3b f4		 cmp	 esi, esp
  00252	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00257	a3 00 00 00 00	 mov	 DWORD PTR _glad_glDisable, eax

; 1018 : 	glad_glEnable = (PFNGLENABLEPROC)load("glEnable");

  0025c	8b f4		 mov	 esi, esp
  0025e	68 00 00 00 00	 push	 OFFSET ??_C@_08OOEHEKOP@glEnable@
  00263	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00266	83 c4 04	 add	 esp, 4
  00269	3b f4		 cmp	 esi, esp
  0026b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00270	a3 00 00 00 00	 mov	 DWORD PTR _glad_glEnable, eax

; 1019 : 	glad_glFinish = (PFNGLFINISHPROC)load("glFinish");

  00275	8b f4		 mov	 esi, esp
  00277	68 00 00 00 00	 push	 OFFSET ??_C@_08DFCPOKBK@glFinish@
  0027c	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0027f	83 c4 04	 add	 esp, 4
  00282	3b f4		 cmp	 esi, esp
  00284	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00289	a3 00 00 00 00	 mov	 DWORD PTR _glad_glFinish, eax

; 1020 : 	glad_glFlush = (PFNGLFLUSHPROC)load("glFlush");

  0028e	8b f4		 mov	 esi, esp
  00290	68 00 00 00 00	 push	 OFFSET ??_C@_07COFELLJA@glFlush@
  00295	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00298	83 c4 04	 add	 esp, 4
  0029b	3b f4		 cmp	 esi, esp
  0029d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002a2	a3 00 00 00 00	 mov	 DWORD PTR _glad_glFlush, eax

; 1021 : 	glad_glBlendFunc = (PFNGLBLENDFUNCPROC)load("glBlendFunc");

  002a7	8b f4		 mov	 esi, esp
  002a9	68 00 00 00 00	 push	 OFFSET ??_C@_0M@PFBKOKOH@glBlendFunc@
  002ae	ff 55 08	 call	 DWORD PTR _load$[ebp]
  002b1	83 c4 04	 add	 esp, 4
  002b4	3b f4		 cmp	 esi, esp
  002b6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002bb	a3 00 00 00 00	 mov	 DWORD PTR _glad_glBlendFunc, eax

; 1022 : 	glad_glLogicOp = (PFNGLLOGICOPPROC)load("glLogicOp");

  002c0	8b f4		 mov	 esi, esp
  002c2	68 00 00 00 00	 push	 OFFSET ??_C@_09GKGMNAKG@glLogicOp@
  002c7	ff 55 08	 call	 DWORD PTR _load$[ebp]
  002ca	83 c4 04	 add	 esp, 4
  002cd	3b f4		 cmp	 esi, esp
  002cf	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002d4	a3 00 00 00 00	 mov	 DWORD PTR _glad_glLogicOp, eax

; 1023 : 	glad_glStencilFunc = (PFNGLSTENCILFUNCPROC)load("glStencilFunc");

  002d9	8b f4		 mov	 esi, esp
  002db	68 00 00 00 00	 push	 OFFSET ??_C@_0O@ENNLLOLN@glStencilFunc@
  002e0	ff 55 08	 call	 DWORD PTR _load$[ebp]
  002e3	83 c4 04	 add	 esp, 4
  002e6	3b f4		 cmp	 esi, esp
  002e8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  002ed	a3 00 00 00 00	 mov	 DWORD PTR _glad_glStencilFunc, eax

; 1024 : 	glad_glStencilOp = (PFNGLSTENCILOPPROC)load("glStencilOp");

  002f2	8b f4		 mov	 esi, esp
  002f4	68 00 00 00 00	 push	 OFFSET ??_C@_0M@BILBNGF@glStencilOp@
  002f9	ff 55 08	 call	 DWORD PTR _load$[ebp]
  002fc	83 c4 04	 add	 esp, 4
  002ff	3b f4		 cmp	 esi, esp
  00301	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00306	a3 00 00 00 00	 mov	 DWORD PTR _glad_glStencilOp, eax

; 1025 : 	glad_glDepthFunc = (PFNGLDEPTHFUNCPROC)load("glDepthFunc");

  0030b	8b f4		 mov	 esi, esp
  0030d	68 00 00 00 00	 push	 OFFSET ??_C@_0M@NEJABAEP@glDepthFunc@
  00312	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00315	83 c4 04	 add	 esp, 4
  00318	3b f4		 cmp	 esi, esp
  0031a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0031f	a3 00 00 00 00	 mov	 DWORD PTR _glad_glDepthFunc, eax

; 1026 : 	glad_glPixelStoref = (PFNGLPIXELSTOREFPROC)load("glPixelStoref");

  00324	8b f4		 mov	 esi, esp
  00326	68 00 00 00 00	 push	 OFFSET ??_C@_0O@BFLAHHCK@glPixelStoref@
  0032b	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0032e	83 c4 04	 add	 esp, 4
  00331	3b f4		 cmp	 esi, esp
  00333	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00338	a3 00 00 00 00	 mov	 DWORD PTR _glad_glPixelStoref, eax

; 1027 : 	glad_glPixelStorei = (PFNGLPIXELSTOREIPROC)load("glPixelStorei");

  0033d	8b f4		 mov	 esi, esp
  0033f	68 00 00 00 00	 push	 OFFSET ??_C@_0O@JCCIGLOF@glPixelStorei@
  00344	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00347	83 c4 04	 add	 esp, 4
  0034a	3b f4		 cmp	 esi, esp
  0034c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00351	a3 00 00 00 00	 mov	 DWORD PTR _glad_glPixelStorei, eax

; 1028 : 	glad_glReadBuffer = (PFNGLREADBUFFERPROC)load("glReadBuffer");

  00356	8b f4		 mov	 esi, esp
  00358	68 00 00 00 00	 push	 OFFSET ??_C@_0N@HFKHBECK@glReadBuffer@
  0035d	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00360	83 c4 04	 add	 esp, 4
  00363	3b f4		 cmp	 esi, esp
  00365	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0036a	a3 00 00 00 00	 mov	 DWORD PTR _glad_glReadBuffer, eax

; 1029 : 	glad_glReadPixels = (PFNGLREADPIXELSPROC)load("glReadPixels");

  0036f	8b f4		 mov	 esi, esp
  00371	68 00 00 00 00	 push	 OFFSET ??_C@_0N@CKFNNHOO@glReadPixels@
  00376	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00379	83 c4 04	 add	 esp, 4
  0037c	3b f4		 cmp	 esi, esp
  0037e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00383	a3 00 00 00 00	 mov	 DWORD PTR _glad_glReadPixels, eax

; 1030 : 	glad_glGetBooleanv = (PFNGLGETBOOLEANVPROC)load("glGetBooleanv");

  00388	8b f4		 mov	 esi, esp
  0038a	68 00 00 00 00	 push	 OFFSET ??_C@_0O@NLMELLCJ@glGetBooleanv@
  0038f	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00392	83 c4 04	 add	 esp, 4
  00395	3b f4		 cmp	 esi, esp
  00397	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0039c	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetBooleanv, eax

; 1031 : 	glad_glGetDoublev = (PFNGLGETDOUBLEVPROC)load("glGetDoublev");

  003a1	8b f4		 mov	 esi, esp
  003a3	68 00 00 00 00	 push	 OFFSET ??_C@_0N@OFBMMCDH@glGetDoublev@
  003a8	ff 55 08	 call	 DWORD PTR _load$[ebp]
  003ab	83 c4 04	 add	 esp, 4
  003ae	3b f4		 cmp	 esi, esp
  003b0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003b5	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetDoublev, eax

; 1032 : 	glad_glGetError = (PFNGLGETERRORPROC)load("glGetError");

  003ba	8b f4		 mov	 esi, esp
  003bc	68 00 00 00 00	 push	 OFFSET ??_C@_0L@FPKAMKHB@glGetError@
  003c1	ff 55 08	 call	 DWORD PTR _load$[ebp]
  003c4	83 c4 04	 add	 esp, 4
  003c7	3b f4		 cmp	 esi, esp
  003c9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003ce	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetError, eax

; 1033 : 	glad_glGetFloatv = (PFNGLGETFLOATVPROC)load("glGetFloatv");

  003d3	8b f4		 mov	 esi, esp
  003d5	68 00 00 00 00	 push	 OFFSET ??_C@_0M@CKCOBONE@glGetFloatv@
  003da	ff 55 08	 call	 DWORD PTR _load$[ebp]
  003dd	83 c4 04	 add	 esp, 4
  003e0	3b f4		 cmp	 esi, esp
  003e2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  003e7	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetFloatv, eax

; 1034 : 	glad_glGetIntegerv = (PFNGLGETINTEGERVPROC)load("glGetIntegerv");

  003ec	8b f4		 mov	 esi, esp
  003ee	68 00 00 00 00	 push	 OFFSET ??_C@_0O@DHHDCCLF@glGetIntegerv@
  003f3	ff 55 08	 call	 DWORD PTR _load$[ebp]
  003f6	83 c4 04	 add	 esp, 4
  003f9	3b f4		 cmp	 esi, esp
  003fb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00400	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetIntegerv, eax

; 1035 : 	glad_glGetString = (PFNGLGETSTRINGPROC)load("glGetString");

  00405	8b f4		 mov	 esi, esp
  00407	68 00 00 00 00	 push	 OFFSET ??_C@_0M@OPOBFDCB@glGetString@
  0040c	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0040f	83 c4 04	 add	 esp, 4
  00412	3b f4		 cmp	 esi, esp
  00414	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00419	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetString, eax

; 1036 : 	glad_glGetTexImage = (PFNGLGETTEXIMAGEPROC)load("glGetTexImage");

  0041e	8b f4		 mov	 esi, esp
  00420	68 00 00 00 00	 push	 OFFSET ??_C@_0O@DOIIJLAD@glGetTexImage@
  00425	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00428	83 c4 04	 add	 esp, 4
  0042b	3b f4		 cmp	 esi, esp
  0042d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00432	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetTexImage, eax

; 1037 : 	glad_glGetTexParameterfv = (PFNGLGETTEXPARAMETERFVPROC)load("glGetTexParameterfv");

  00437	8b f4		 mov	 esi, esp
  00439	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@DNHBPKMC@glGetTexParameterfv@
  0043e	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00441	83 c4 04	 add	 esp, 4
  00444	3b f4		 cmp	 esi, esp
  00446	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0044b	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetTexParameterfv, eax

; 1038 : 	glad_glGetTexParameteriv = (PFNGLGETTEXPARAMETERIVPROC)load("glGetTexParameteriv");

  00450	8b f4		 mov	 esi, esp
  00452	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@DGCNLNPP@glGetTexParameteriv@
  00457	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0045a	83 c4 04	 add	 esp, 4
  0045d	3b f4		 cmp	 esi, esp
  0045f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00464	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetTexParameteriv, eax

; 1039 : 	glad_glGetTexLevelParameterfv = (PFNGLGETTEXLEVELPARAMETERFVPROC)load("glGetTexLevelParameterfv");

  00469	8b f4		 mov	 esi, esp
  0046b	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@GAMLGIFF@glGetTexLevelParameterfv@
  00470	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00473	83 c4 04	 add	 esp, 4
  00476	3b f4		 cmp	 esi, esp
  00478	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0047d	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetTexLevelParameterfv, eax

; 1040 : 	glad_glGetTexLevelParameteriv = (PFNGLGETTEXLEVELPARAMETERIVPROC)load("glGetTexLevelParameteriv");

  00482	8b f4		 mov	 esi, esp
  00484	68 00 00 00 00	 push	 OFFSET ??_C@_0BJ@GLJHCPGI@glGetTexLevelParameteriv@
  00489	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0048c	83 c4 04	 add	 esp, 4
  0048f	3b f4		 cmp	 esi, esp
  00491	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00496	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetTexLevelParameteriv, eax

; 1041 : 	glad_glIsEnabled = (PFNGLISENABLEDPROC)load("glIsEnabled");

  0049b	8b f4		 mov	 esi, esp
  0049d	68 00 00 00 00	 push	 OFFSET ??_C@_0M@INHMIHKC@glIsEnabled@
  004a2	ff 55 08	 call	 DWORD PTR _load$[ebp]
  004a5	83 c4 04	 add	 esp, 4
  004a8	3b f4		 cmp	 esi, esp
  004aa	e8 00 00 00 00	 call	 __RTC_CheckEsp
  004af	a3 00 00 00 00	 mov	 DWORD PTR _glad_glIsEnabled, eax

; 1042 : 	glad_glDepthRange = (PFNGLDEPTHRANGEPROC)load("glDepthRange");

  004b4	8b f4		 mov	 esi, esp
  004b6	68 00 00 00 00	 push	 OFFSET ??_C@_0N@PEBDIKOA@glDepthRange@
  004bb	ff 55 08	 call	 DWORD PTR _load$[ebp]
  004be	83 c4 04	 add	 esp, 4
  004c1	3b f4		 cmp	 esi, esp
  004c3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  004c8	a3 00 00 00 00	 mov	 DWORD PTR _glad_glDepthRange, eax

; 1043 : 	glad_glViewport = (PFNGLVIEWPORTPROC)load("glViewport");

  004cd	8b f4		 mov	 esi, esp
  004cf	68 00 00 00 00	 push	 OFFSET ??_C@_0L@KBLIPDFH@glViewport@
  004d4	ff 55 08	 call	 DWORD PTR _load$[ebp]
  004d7	83 c4 04	 add	 esp, 4
  004da	3b f4		 cmp	 esi, esp
  004dc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  004e1	a3 00 00 00 00	 mov	 DWORD PTR _glad_glViewport, eax

; 1044 : 	glad_glNewList = (PFNGLNEWLISTPROC)load("glNewList");

  004e6	8b f4		 mov	 esi, esp
  004e8	68 00 00 00 00	 push	 OFFSET ??_C@_09KAGOBDOO@glNewList@
  004ed	ff 55 08	 call	 DWORD PTR _load$[ebp]
  004f0	83 c4 04	 add	 esp, 4
  004f3	3b f4		 cmp	 esi, esp
  004f5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  004fa	a3 00 00 00 00	 mov	 DWORD PTR _glad_glNewList, eax

; 1045 : 	glad_glEndList = (PFNGLENDLISTPROC)load("glEndList");

  004ff	8b f4		 mov	 esi, esp
  00501	68 00 00 00 00	 push	 OFFSET ??_C@_09HKEBCLHH@glEndList@
  00506	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00509	83 c4 04	 add	 esp, 4
  0050c	3b f4		 cmp	 esi, esp
  0050e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00513	a3 00 00 00 00	 mov	 DWORD PTR _glad_glEndList, eax

; 1046 : 	glad_glCallList = (PFNGLCALLLISTPROC)load("glCallList");

  00518	8b f4		 mov	 esi, esp
  0051a	68 00 00 00 00	 push	 OFFSET ??_C@_0L@CIPLDIDL@glCallList@
  0051f	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00522	83 c4 04	 add	 esp, 4
  00525	3b f4		 cmp	 esi, esp
  00527	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0052c	a3 00 00 00 00	 mov	 DWORD PTR _glad_glCallList, eax

; 1047 : 	glad_glCallLists = (PFNGLCALLLISTSPROC)load("glCallLists");

  00531	8b f4		 mov	 esi, esp
  00533	68 00 00 00 00	 push	 OFFSET ??_C@_0M@LFDBDICJ@glCallLists@
  00538	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0053b	83 c4 04	 add	 esp, 4
  0053e	3b f4		 cmp	 esi, esp
  00540	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00545	a3 00 00 00 00	 mov	 DWORD PTR _glad_glCallLists, eax

; 1048 : 	glad_glDeleteLists = (PFNGLDELETELISTSPROC)load("glDeleteLists");

  0054a	8b f4		 mov	 esi, esp
  0054c	68 00 00 00 00	 push	 OFFSET ??_C@_0O@KPJIJAFM@glDeleteLists@
  00551	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00554	83 c4 04	 add	 esp, 4
  00557	3b f4		 cmp	 esi, esp
  00559	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0055e	a3 00 00 00 00	 mov	 DWORD PTR _glad_glDeleteLists, eax

; 1049 : 	glad_glGenLists = (PFNGLGENLISTSPROC)load("glGenLists");

  00563	8b f4		 mov	 esi, esp
  00565	68 00 00 00 00	 push	 OFFSET ??_C@_0L@BNOFOEBP@glGenLists@
  0056a	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0056d	83 c4 04	 add	 esp, 4
  00570	3b f4		 cmp	 esi, esp
  00572	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00577	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGenLists, eax

; 1050 : 	glad_glListBase = (PFNGLLISTBASEPROC)load("glListBase");

  0057c	8b f4		 mov	 esi, esp
  0057e	68 00 00 00 00	 push	 OFFSET ??_C@_0L@HDOJDFBA@glListBase@
  00583	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00586	83 c4 04	 add	 esp, 4
  00589	3b f4		 cmp	 esi, esp
  0058b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00590	a3 00 00 00 00	 mov	 DWORD PTR _glad_glListBase, eax

; 1051 : 	glad_glBegin = (PFNGLBEGINPROC)load("glBegin");

  00595	8b f4		 mov	 esi, esp
  00597	68 00 00 00 00	 push	 OFFSET ??_C@_07FCOIFMD@glBegin@
  0059c	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0059f	83 c4 04	 add	 esp, 4
  005a2	3b f4		 cmp	 esi, esp
  005a4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  005a9	a3 00 00 00 00	 mov	 DWORD PTR _glad_glBegin, eax

; 1052 : 	glad_glBitmap = (PFNGLBITMAPPROC)load("glBitmap");

  005ae	8b f4		 mov	 esi, esp
  005b0	68 00 00 00 00	 push	 OFFSET ??_C@_08PJOLDJDK@glBitmap@
  005b5	ff 55 08	 call	 DWORD PTR _load$[ebp]
  005b8	83 c4 04	 add	 esp, 4
  005bb	3b f4		 cmp	 esi, esp
  005bd	e8 00 00 00 00	 call	 __RTC_CheckEsp
  005c2	a3 00 00 00 00	 mov	 DWORD PTR _glad_glBitmap, eax

; 1053 : 	glad_glColor3b = (PFNGLCOLOR3BPROC)load("glColor3b");

  005c7	8b f4		 mov	 esi, esp
  005c9	68 00 00 00 00	 push	 OFFSET ??_C@_09JLHBBGHE@glColor3b@
  005ce	ff 55 08	 call	 DWORD PTR _load$[ebp]
  005d1	83 c4 04	 add	 esp, 4
  005d4	3b f4		 cmp	 esi, esp
  005d6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  005db	a3 00 00 00 00	 mov	 DWORD PTR _glad_glColor3b, eax

; 1054 : 	glad_glColor3bv = (PFNGLCOLOR3BVPROC)load("glColor3bv");

  005e0	8b f4		 mov	 esi, esp
  005e2	68 00 00 00 00	 push	 OFFSET ??_C@_0L@COJGBKED@glColor3bv@
  005e7	ff 55 08	 call	 DWORD PTR _load$[ebp]
  005ea	83 c4 04	 add	 esp, 4
  005ed	3b f4		 cmp	 esi, esp
  005ef	e8 00 00 00 00	 call	 __RTC_CheckEsp
  005f4	a3 00 00 00 00	 mov	 DWORD PTR _glad_glColor3bv, eax

; 1055 : 	glad_glColor3d = (PFNGLCOLOR3DPROC)load("glColor3d");

  005f9	8b f4		 mov	 esi, esp
  005fb	68 00 00 00 00	 push	 OFFSET ??_C@_09MNCLLBPC@glColor3d@
  00600	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00603	83 c4 04	 add	 esp, 4
  00606	3b f4		 cmp	 esi, esp
  00608	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0060d	a3 00 00 00 00	 mov	 DWORD PTR _glad_glColor3d, eax

; 1056 : 	glad_glColor3dv = (PFNGLCOLOR3DVPROC)load("glColor3dv");

  00612	8b f4		 mov	 esi, esp
  00614	68 00 00 00 00	 push	 OFFSET ??_C@_0L@CKBLGGPB@glColor3dv@
  00619	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0061c	83 c4 04	 add	 esp, 4
  0061f	3b f4		 cmp	 esi, esp
  00621	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00626	a3 00 00 00 00	 mov	 DWORD PTR _glad_glColor3dv, eax

; 1057 : 	glad_glColor3f = (PFNGLCOLOR3FPROC)load("glColor3f");

  0062b	8b f4		 mov	 esi, esp
  0062d	68 00 00 00 00	 push	 OFFSET ??_C@_09PPBNNDHA@glColor3f@
  00632	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00635	83 c4 04	 add	 esp, 4
  00638	3b f4		 cmp	 esi, esp
  0063a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0063f	a3 00 00 00 00	 mov	 DWORD PTR _glad_glColor3f, eax

; 1058 : 	glad_glColor3fv = (PFNGLCOLOR3FVPROC)load("glColor3fv");

  00644	8b f4		 mov	 esi, esp
  00646	68 00 00 00 00	 push	 OFFSET ??_C@_0L@CJJPLCJP@glColor3fv@
  0064b	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0064e	83 c4 04	 add	 esp, 4
  00651	3b f4		 cmp	 esi, esp
  00653	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00658	a3 00 00 00 00	 mov	 DWORD PTR _glad_glColor3fv, eax

; 1059 : 	glad_glColor3i = (PFNGLCOLOR3IPROC)load("glColor3i");

  0065d	8b f4		 mov	 esi, esp
  0065f	68 00 00 00 00	 push	 OFFSET ??_C@_09HIIFMPLP@glColor3i@
  00664	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00667	83 c4 04	 add	 esp, 4
  0066a	3b f4		 cmp	 esi, esp
  0066c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00671	a3 00 00 00 00	 mov	 DWORD PTR _glad_glColor3i, eax

; 1060 : 	glad_glColor3iv = (PFNGLCOLOR3IVPROC)load("glColor3iv");

  00676	8b f4		 mov	 esi, esp
  00678	68 00 00 00 00	 push	 OFFSET ??_C@_0L@CCMDPFKC@glColor3iv@
  0067d	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00680	83 c4 04	 add	 esp, 4
  00683	3b f4		 cmp	 esi, esp
  00685	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0068a	a3 00 00 00 00	 mov	 DWORD PTR _glad_glColor3iv, eax

; 1061 : 	glad_glColor3s = (PFNGLCOLOR3SPROC)load("glColor3s");

  0068f	8b f4		 mov	 esi, esp
  00691	68 00 00 00 00	 push	 OFFSET ??_C@_09MIKIDFGE@glColor3s@
  00696	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00699	83 c4 04	 add	 esp, 4
  0069c	3b f4		 cmp	 esi, esp
  0069e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  006a3	a3 00 00 00 00	 mov	 DWORD PTR _glad_glColor3s, eax

; 1062 : 	glad_glColor3sv = (PFNGLCOLOR3SVPROC)load("glColor3sv");

  006a8	8b f4		 mov	 esi, esp
  006aa	68 00 00 00 00	 push	 OFFSET ??_C@_0L@DDHCNDAE@glColor3sv@
  006af	ff 55 08	 call	 DWORD PTR _load$[ebp]
  006b2	83 c4 04	 add	 esp, 4
  006b5	3b f4		 cmp	 esi, esp
  006b7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  006bc	a3 00 00 00 00	 mov	 DWORD PTR _glad_glColor3sv, eax

; 1063 : 	glad_glColor3ub = (PFNGLCOLOR3UBPROC)load("glColor3ub");

  006c1	8b f4		 mov	 esi, esp
  006c3	68 00 00 00 00	 push	 OFFSET ??_C@_0L@BJFBHIOD@glColor3ub@
  006c8	ff 55 08	 call	 DWORD PTR _load$[ebp]
  006cb	83 c4 04	 add	 esp, 4
  006ce	3b f4		 cmp	 esi, esp
  006d0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  006d5	a3 00 00 00 00	 mov	 DWORD PTR _glad_glColor3ub, eax

; 1064 : 	glad_glColor3ubv = (PFNGLCOLOR3UBVPROC)load("glColor3ubv");

  006da	8b f4		 mov	 esi, esp
  006dc	68 00 00 00 00	 push	 OFFSET ??_C@_0M@EAHPDMMK@glColor3ubv@
  006e1	ff 55 08	 call	 DWORD PTR _load$[ebp]
  006e4	83 c4 04	 add	 esp, 4
  006e7	3b f4		 cmp	 esi, esp
  006e9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  006ee	a3 00 00 00 00	 mov	 DWORD PTR _glad_glColor3ubv, eax

; 1065 : 	glad_glColor3ui = (PFNGLCOLOR3UIPROC)load("glColor3ui");

  006f3	8b f4		 mov	 esi, esp
  006f5	68 00 00 00 00	 push	 OFFSET ??_C@_0L@PKKFKBCI@glColor3ui@
  006fa	ff 55 08	 call	 DWORD PTR _load$[ebp]
  006fd	83 c4 04	 add	 esp, 4
  00700	3b f4		 cmp	 esi, esp
  00702	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00707	a3 00 00 00 00	 mov	 DWORD PTR _glad_glColor3ui, eax

; 1066 : 	glad_glColor3uiv = (PFNGLCOLOR3UIVPROC)load("glColor3uiv");

  0070c	8b f4		 mov	 esi, esp
  0070e	68 00 00 00 00	 push	 OFFSET ??_C@_0M@EMCKNDCL@glColor3uiv@
  00713	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00716	83 c4 04	 add	 esp, 4
  00719	3b f4		 cmp	 esi, esp
  0071b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00720	a3 00 00 00 00	 mov	 DWORD PTR _glad_glColor3uiv, eax

; 1067 : 	glad_glColor3us = (PFNGLCOLOR3USPROC)load("glColor3us");

  00725	8b f4		 mov	 esi, esp
  00727	68 00 00 00 00	 push	 OFFSET ??_C@_0L@EKIIFLPD@glColor3us@
  0072c	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0072f	83 c4 04	 add	 esp, 4
  00732	3b f4		 cmp	 esi, esp
  00734	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00739	a3 00 00 00 00	 mov	 DWORD PTR _glad_glColor3us, eax

; 1068 : 	glad_glColor3usv = (PFNGLCOLOR3USVPROC)load("glColor3usv");

  0073e	8b f4		 mov	 esi, esp
  00740	68 00 00 00 00	 push	 OFFSET ??_C@_0M@FNJLPFIN@glColor3usv@
  00745	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00748	83 c4 04	 add	 esp, 4
  0074b	3b f4		 cmp	 esi, esp
  0074d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00752	a3 00 00 00 00	 mov	 DWORD PTR _glad_glColor3usv, eax

; 1069 : 	glad_glColor4b = (PFNGLCOLOR4BPROC)load("glColor4b");

  00757	8b f4		 mov	 esi, esp
  00759	68 00 00 00 00	 push	 OFFSET ??_C@_09JODOAAPB@glColor4b@
  0075e	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00761	83 c4 04	 add	 esp, 4
  00764	3b f4		 cmp	 esi, esp
  00766	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0076b	a3 00 00 00 00	 mov	 DWORD PTR _glad_glColor4b, eax

; 1070 : 	glad_glColor4bv = (PFNGLCOLOR4BVPROC)load("glColor4bv");

  00770	8b f4		 mov	 esi, esp
  00772	68 00 00 00 00	 push	 OFFSET ??_C@_0L@LDEBCCPK@glColor4bv@
  00777	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0077a	83 c4 04	 add	 esp, 4
  0077d	3b f4		 cmp	 esi, esp
  0077f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00784	a3 00 00 00 00	 mov	 DWORD PTR _glad_glColor4bv, eax

; 1071 : 	glad_glColor4d = (PFNGLCOLOR4DPROC)load("glColor4d");

  00789	8b f4		 mov	 esi, esp
  0078b	68 00 00 00 00	 push	 OFFSET ??_C@_09MIGEKHHH@glColor4d@
  00790	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00793	83 c4 04	 add	 esp, 4
  00796	3b f4		 cmp	 esi, esp
  00798	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0079d	a3 00 00 00 00	 mov	 DWORD PTR _glad_glColor4d, eax

; 1072 : 	glad_glColor4dv = (PFNGLCOLOR4DVPROC)load("glColor4dv");

  007a2	8b f4		 mov	 esi, esp
  007a4	68 00 00 00 00	 push	 OFFSET ??_C@_0L@LHMMFOEI@glColor4dv@
  007a9	ff 55 08	 call	 DWORD PTR _load$[ebp]
  007ac	83 c4 04	 add	 esp, 4
  007af	3b f4		 cmp	 esi, esp
  007b1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  007b6	a3 00 00 00 00	 mov	 DWORD PTR _glad_glColor4dv, eax

; 1073 : 	glad_glColor4f = (PFNGLCOLOR4FPROC)load("glColor4f");

  007bb	8b f4		 mov	 esi, esp
  007bd	68 00 00 00 00	 push	 OFFSET ??_C@_09PKFCMFPF@glColor4f@
  007c2	ff 55 08	 call	 DWORD PTR _load$[ebp]
  007c5	83 c4 04	 add	 esp, 4
  007c8	3b f4		 cmp	 esi, esp
  007ca	e8 00 00 00 00	 call	 __RTC_CheckEsp
  007cf	a3 00 00 00 00	 mov	 DWORD PTR _glad_glColor4f, eax

; 1074 : 	glad_glColor4fv = (PFNGLCOLOR4FVPROC)load("glColor4fv");

  007d4	8b f4		 mov	 esi, esp
  007d6	68 00 00 00 00	 push	 OFFSET ??_C@_0L@LEEIIKCG@glColor4fv@
  007db	ff 55 08	 call	 DWORD PTR _load$[ebp]
  007de	83 c4 04	 add	 esp, 4
  007e1	3b f4		 cmp	 esi, esp
  007e3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  007e8	a3 00 00 00 00	 mov	 DWORD PTR _glad_glColor4fv, eax

; 1075 : 	glad_glColor4i = (PFNGLCOLOR4IPROC)load("glColor4i");

  007ed	8b f4		 mov	 esi, esp
  007ef	68 00 00 00 00	 push	 OFFSET ??_C@_09HNMKNJDK@glColor4i@
  007f4	ff 55 08	 call	 DWORD PTR _load$[ebp]
  007f7	83 c4 04	 add	 esp, 4
  007fa	3b f4		 cmp	 esi, esp
  007fc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00801	a3 00 00 00 00	 mov	 DWORD PTR _glad_glColor4i, eax

; 1076 : 	glad_glColor4iv = (PFNGLCOLOR4IVPROC)load("glColor4iv");

  00806	8b f4		 mov	 esi, esp
  00808	68 00 00 00 00	 push	 OFFSET ??_C@_0L@LPBEMNBL@glColor4iv@
  0080d	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00810	83 c4 04	 add	 esp, 4
  00813	3b f4		 cmp	 esi, esp
  00815	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0081a	a3 00 00 00 00	 mov	 DWORD PTR _glad_glColor4iv, eax

; 1077 : 	glad_glColor4s = (PFNGLCOLOR4SPROC)load("glColor4s");

  0081f	8b f4		 mov	 esi, esp
  00821	68 00 00 00 00	 push	 OFFSET ??_C@_09MNOHCDOB@glColor4s@
  00826	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00829	83 c4 04	 add	 esp, 4
  0082c	3b f4		 cmp	 esi, esp
  0082e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00833	a3 00 00 00 00	 mov	 DWORD PTR _glad_glColor4s, eax

; 1078 : 	glad_glColor4sv = (PFNGLCOLOR4SVPROC)load("glColor4sv");

  00838	8b f4		 mov	 esi, esp
  0083a	68 00 00 00 00	 push	 OFFSET ??_C@_0L@KOKFOLLN@glColor4sv@
  0083f	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00842	83 c4 04	 add	 esp, 4
  00845	3b f4		 cmp	 esi, esp
  00847	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0084c	a3 00 00 00 00	 mov	 DWORD PTR _glad_glColor4sv, eax

; 1079 : 	glad_glColor4ub = (PFNGLCOLOR4UBPROC)load("glColor4ub");

  00851	8b f4		 mov	 esi, esp
  00853	68 00 00 00 00	 push	 OFFSET ??_C@_0L@IEIGEAFK@glColor4ub@
  00858	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0085b	83 c4 04	 add	 esp, 4
  0085e	3b f4		 cmp	 esi, esp
  00860	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00865	a3 00 00 00 00	 mov	 DWORD PTR _glad_glColor4ub, eax

; 1080 : 	glad_glColor4ubv = (PFNGLCOLOR4UBVPROC)load("glColor4ubv");

  0086a	8b f4		 mov	 esi, esp
  0086c	68 00 00 00 00	 push	 OFFSET ??_C@_0M@PCFPOANK@glColor4ubv@
  00871	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00874	83 c4 04	 add	 esp, 4
  00877	3b f4		 cmp	 esi, esp
  00879	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0087e	a3 00 00 00 00	 mov	 DWORD PTR _glad_glColor4ubv, eax

; 1081 : 	glad_glColor4ui = (PFNGLCOLOR4UIPROC)load("glColor4ui");

  00883	8b f4		 mov	 esi, esp
  00885	68 00 00 00 00	 push	 OFFSET ??_C@_0L@GHHCJJJB@glColor4ui@
  0088a	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0088d	83 c4 04	 add	 esp, 4
  00890	3b f4		 cmp	 esi, esp
  00892	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00897	a3 00 00 00 00	 mov	 DWORD PTR _glad_glColor4ui, eax

; 1082 : 	glad_glColor4uiv = (PFNGLCOLOR4UIVPROC)load("glColor4uiv");

  0089c	8b f4		 mov	 esi, esp
  0089e	68 00 00 00 00	 push	 OFFSET ??_C@_0M@POAKAPDL@glColor4uiv@
  008a3	ff 55 08	 call	 DWORD PTR _load$[ebp]
  008a6	83 c4 04	 add	 esp, 4
  008a9	3b f4		 cmp	 esi, esp
  008ab	e8 00 00 00 00	 call	 __RTC_CheckEsp
  008b0	a3 00 00 00 00	 mov	 DWORD PTR _glad_glColor4uiv, eax

; 1083 : 	glad_glColor4us = (PFNGLCOLOR4USPROC)load("glColor4us");

  008b5	8b f4		 mov	 esi, esp
  008b7	68 00 00 00 00	 push	 OFFSET ??_C@_0L@NHFPGDEK@glColor4us@
  008bc	ff 55 08	 call	 DWORD PTR _load$[ebp]
  008bf	83 c4 04	 add	 esp, 4
  008c2	3b f4		 cmp	 esi, esp
  008c4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  008c9	a3 00 00 00 00	 mov	 DWORD PTR _glad_glColor4us, eax

; 1084 : 	glad_glColor4usv = (PFNGLCOLOR4USVPROC)load("glColor4usv");

  008ce	8b f4		 mov	 esi, esp
  008d0	68 00 00 00 00	 push	 OFFSET ??_C@_0M@OPLLCJJN@glColor4usv@
  008d5	ff 55 08	 call	 DWORD PTR _load$[ebp]
  008d8	83 c4 04	 add	 esp, 4
  008db	3b f4		 cmp	 esi, esp
  008dd	e8 00 00 00 00	 call	 __RTC_CheckEsp
  008e2	a3 00 00 00 00	 mov	 DWORD PTR _glad_glColor4usv, eax

; 1085 : 	glad_glEdgeFlag = (PFNGLEDGEFLAGPROC)load("glEdgeFlag");

  008e7	8b f4		 mov	 esi, esp
  008e9	68 00 00 00 00	 push	 OFFSET ??_C@_0L@DFCKJEPI@glEdgeFlag@
  008ee	ff 55 08	 call	 DWORD PTR _load$[ebp]
  008f1	83 c4 04	 add	 esp, 4
  008f4	3b f4		 cmp	 esi, esp
  008f6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  008fb	a3 00 00 00 00	 mov	 DWORD PTR _glad_glEdgeFlag, eax

; 1086 : 	glad_glEdgeFlagv = (PFNGLEDGEFLAGVPROC)load("glEdgeFlagv");

  00900	8b f4		 mov	 esi, esp
  00902	68 00 00 00 00	 push	 OFFSET ??_C@_0M@MKDGIOMK@glEdgeFlagv@
  00907	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0090a	83 c4 04	 add	 esp, 4
  0090d	3b f4		 cmp	 esi, esp
  0090f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00914	a3 00 00 00 00	 mov	 DWORD PTR _glad_glEdgeFlagv, eax

; 1087 : 	glad_glEnd = (PFNGLENDPROC)load("glEnd");

  00919	8b f4		 mov	 esi, esp
  0091b	68 00 00 00 00	 push	 OFFSET ??_C@_05OIBMBLHE@glEnd@
  00920	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00923	83 c4 04	 add	 esp, 4
  00926	3b f4		 cmp	 esi, esp
  00928	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0092d	a3 00 00 00 00	 mov	 DWORD PTR _glad_glEnd, eax

; 1088 : 	glad_glIndexd = (PFNGLINDEXDPROC)load("glIndexd");

  00932	8b f4		 mov	 esi, esp
  00934	68 00 00 00 00	 push	 OFFSET ??_C@_08HOOEKNLP@glIndexd@
  00939	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0093c	83 c4 04	 add	 esp, 4
  0093f	3b f4		 cmp	 esi, esp
  00941	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00946	a3 00 00 00 00	 mov	 DWORD PTR _glad_glIndexd, eax

; 1089 : 	glad_glIndexdv = (PFNGLINDEXDVPROC)load("glIndexdv");

  0094b	8b f4		 mov	 esi, esp
  0094d	68 00 00 00 00	 push	 OFFSET ??_C@_09CCMFJEMA@glIndexdv@
  00952	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00955	83 c4 04	 add	 esp, 4
  00958	3b f4		 cmp	 esi, esp
  0095a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0095f	a3 00 00 00 00	 mov	 DWORD PTR _glad_glIndexdv, eax

; 1090 : 	glad_glIndexf = (PFNGLINDEXFPROC)load("glIndexf");

  00964	8b f4		 mov	 esi, esp
  00966	68 00 00 00 00	 push	 OFFSET ??_C@_08EMNCMPDN@glIndexf@
  0096b	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0096e	83 c4 04	 add	 esp, 4
  00971	3b f4		 cmp	 esi, esp
  00973	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00978	a3 00 00 00 00	 mov	 DWORD PTR _glad_glIndexf, eax

; 1091 : 	glad_glIndexfv = (PFNGLINDEXFVPROC)load("glIndexfv");

  0097d	8b f4		 mov	 esi, esp
  0097f	68 00 00 00 00	 push	 OFFSET ??_C@_09CBEBEAKO@glIndexfv@
  00984	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00987	83 c4 04	 add	 esp, 4
  0098a	3b f4		 cmp	 esi, esp
  0098c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00991	a3 00 00 00 00	 mov	 DWORD PTR _glad_glIndexfv, eax

; 1092 : 	glad_glIndexi = (PFNGLINDEXIPROC)load("glIndexi");

  00996	8b f4		 mov	 esi, esp
  00998	68 00 00 00 00	 push	 OFFSET ??_C@_08MLEKNDPC@glIndexi@
  0099d	ff 55 08	 call	 DWORD PTR _load$[ebp]
  009a0	83 c4 04	 add	 esp, 4
  009a3	3b f4		 cmp	 esi, esp
  009a5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  009aa	a3 00 00 00 00	 mov	 DWORD PTR _glad_glIndexi, eax

; 1093 : 	glad_glIndexiv = (PFNGLINDEXIVPROC)load("glIndexiv");

  009af	8b f4		 mov	 esi, esp
  009b1	68 00 00 00 00	 push	 OFFSET ??_C@_09CKBNAHJD@glIndexiv@
  009b6	ff 55 08	 call	 DWORD PTR _load$[ebp]
  009b9	83 c4 04	 add	 esp, 4
  009bc	3b f4		 cmp	 esi, esp
  009be	e8 00 00 00 00	 call	 __RTC_CheckEsp
  009c3	a3 00 00 00 00	 mov	 DWORD PTR _glad_glIndexiv, eax

; 1094 : 	glad_glIndexs = (PFNGLINDEXSPROC)load("glIndexs");

  009c8	8b f4		 mov	 esi, esp
  009ca	68 00 00 00 00	 push	 OFFSET ??_C@_08HLGHCJCJ@glIndexs@
  009cf	ff 55 08	 call	 DWORD PTR _load$[ebp]
  009d2	83 c4 04	 add	 esp, 4
  009d5	3b f4		 cmp	 esi, esp
  009d7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  009dc	a3 00 00 00 00	 mov	 DWORD PTR _glad_glIndexs, eax

; 1095 : 	glad_glIndexsv = (PFNGLINDEXSVPROC)load("glIndexsv");

  009e1	8b f4		 mov	 esi, esp
  009e3	68 00 00 00 00	 push	 OFFSET ??_C@_09DLKMCBDF@glIndexsv@
  009e8	ff 55 08	 call	 DWORD PTR _load$[ebp]
  009eb	83 c4 04	 add	 esp, 4
  009ee	3b f4		 cmp	 esi, esp
  009f0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  009f5	a3 00 00 00 00	 mov	 DWORD PTR _glad_glIndexsv, eax

; 1096 : 	glad_glNormal3b = (PFNGLNORMAL3BPROC)load("glNormal3b");

  009fa	8b f4		 mov	 esi, esp
  009fc	68 00 00 00 00	 push	 OFFSET ??_C@_0L@FCAONKPI@glNormal3b@
  00a01	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00a04	83 c4 04	 add	 esp, 4
  00a07	3b f4		 cmp	 esi, esp
  00a09	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00a0e	a3 00 00 00 00	 mov	 DWORD PTR _glad_glNormal3b, eax

; 1097 : 	glad_glNormal3bv = (PFNGLNORMAL3BVPROC)load("glNormal3bv");

  00a13	8b f4		 mov	 esi, esp
  00a15	68 00 00 00 00	 push	 OFFSET ??_C@_0M@MKFBKKIE@glNormal3bv@
  00a1a	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00a1d	83 c4 04	 add	 esp, 4
  00a20	3b f4		 cmp	 esi, esp
  00a22	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00a27	a3 00 00 00 00	 mov	 DWORD PTR _glad_glNormal3bv, eax

; 1098 : 	glad_glNormal3d = (PFNGLNORMAL3DPROC)load("glNormal3d");

  00a2c	8b f4		 mov	 esi, esp
  00a2e	68 00 00 00 00	 push	 OFFSET ??_C@_0L@EFEHNHO@glNormal3d@
  00a33	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00a36	83 c4 04	 add	 esp, 4
  00a39	3b f4		 cmp	 esi, esp
  00a3b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00a40	a3 00 00 00 00	 mov	 DWORD PTR _glad_glNormal3d, eax

; 1099 : 	glad_glNormal3dv = (PFNGLNORMAL3DVPROC)load("glNormal3dv");

  00a45	8b f4		 mov	 esi, esp
  00a47	68 00 00 00 00	 push	 OFFSET ??_C@_0M@MONMNGDG@glNormal3dv@
  00a4c	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00a4f	83 c4 04	 add	 esp, 4
  00a52	3b f4		 cmp	 esi, esp
  00a54	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00a59	a3 00 00 00 00	 mov	 DWORD PTR _glad_glNormal3dv, eax

; 1100 : 	glad_glNormal3f = (PFNGLNORMAL3FPROC)load("glNormal3f");

  00a5e	8b f4		 mov	 esi, esp
  00a60	68 00 00 00 00	 push	 OFFSET ??_C@_0L@DGGCBPPM@glNormal3f@
  00a65	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00a68	83 c4 04	 add	 esp, 4
  00a6b	3b f4		 cmp	 esi, esp
  00a6d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00a72	a3 00 00 00 00	 mov	 DWORD PTR _glad_glNormal3f, eax

; 1101 : 	glad_glNormal3fv = (PFNGLNORMAL3FVPROC)load("glNormal3fv");

  00a77	8b f4		 mov	 esi, esp
  00a79	68 00 00 00 00	 push	 OFFSET ??_C@_0M@MNFIACFI@glNormal3fv@
  00a7e	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00a81	83 c4 04	 add	 esp, 4
  00a84	3b f4		 cmp	 esi, esp
  00a86	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00a8b	a3 00 00 00 00	 mov	 DWORD PTR _glad_glNormal3fv, eax

; 1102 : 	glad_glNormal3i = (PFNGLNORMAL3IPROC)load("glNormal3i");

  00a90	8b f4		 mov	 esi, esp
  00a92	68 00 00 00 00	 push	 OFFSET ??_C@_0L@LBPKADDD@glNormal3i@
  00a97	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00a9a	83 c4 04	 add	 esp, 4
  00a9d	3b f4		 cmp	 esi, esp
  00a9f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00aa4	a3 00 00 00 00	 mov	 DWORD PTR _glad_glNormal3i, eax

; 1103 : 	glad_glNormal3iv = (PFNGLNORMAL3IVPROC)load("glNormal3iv");

  00aa9	8b f4		 mov	 esi, esp
  00aab	68 00 00 00 00	 push	 OFFSET ??_C@_0M@MGAEEFGF@glNormal3iv@
  00ab0	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00ab3	83 c4 04	 add	 esp, 4
  00ab6	3b f4		 cmp	 esi, esp
  00ab8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00abd	a3 00 00 00 00	 mov	 DWORD PTR _glad_glNormal3iv, eax

; 1104 : 	glad_glNormal3s = (PFNGLNORMAL3SPROC)load("glNormal3s");

  00ac2	8b f4		 mov	 esi, esp
  00ac4	68 00 00 00 00	 push	 OFFSET ??_C@_0L@BNHPJOI@glNormal3s@
  00ac9	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00acc	83 c4 04	 add	 esp, 4
  00acf	3b f4		 cmp	 esi, esp
  00ad1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00ad6	a3 00 00 00 00	 mov	 DWORD PTR _glad_glNormal3s, eax

; 1105 : 	glad_glNormal3sv = (PFNGLNORMAL3SVPROC)load("glNormal3sv");

  00adb	8b f4		 mov	 esi, esp
  00add	68 00 00 00 00	 push	 OFFSET ??_C@_0M@NHLFGDMD@glNormal3sv@
  00ae2	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00ae5	83 c4 04	 add	 esp, 4
  00ae8	3b f4		 cmp	 esi, esp
  00aea	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00aef	a3 00 00 00 00	 mov	 DWORD PTR _glad_glNormal3sv, eax

; 1106 : 	glad_glRasterPos2d = (PFNGLRASTERPOS2DPROC)load("glRasterPos2d");

  00af4	8b f4		 mov	 esi, esp
  00af6	68 00 00 00 00	 push	 OFFSET ??_C@_0O@JNCPGME@glRasterPos2d@
  00afb	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00afe	83 c4 04	 add	 esp, 4
  00b01	3b f4		 cmp	 esi, esp
  00b03	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00b08	a3 00 00 00 00	 mov	 DWORD PTR _glad_glRasterPos2d, eax

; 1107 : 	glad_glRasterPos2dv = (PFNGLRASTERPOS2DVPROC)load("glRasterPos2dv");

  00b0d	8b f4		 mov	 esi, esp
  00b0f	68 00 00 00 00	 push	 OFFSET ??_C@_0P@OFGFAKCP@glRasterPos2dv@
  00b14	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00b17	83 c4 04	 add	 esp, 4
  00b1a	3b f4		 cmp	 esi, esp
  00b1c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00b21	a3 00 00 00 00	 mov	 DWORD PTR _glad_glRasterPos2dv, eax

; 1108 : 	glad_glRasterPos2f = (PFNGLRASTERPOS2FPROC)load("glRasterPos2f");

  00b26	8b f4		 mov	 esi, esp
  00b28	68 00 00 00 00	 push	 OFFSET ??_C@_0O@DLOEJEEG@glRasterPos2f@
  00b2d	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00b30	83 c4 04	 add	 esp, 4
  00b33	3b f4		 cmp	 esi, esp
  00b35	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00b3a	a3 00 00 00 00	 mov	 DWORD PTR _glad_glRasterPos2f, eax

; 1109 : 	glad_glRasterPos2fv = (PFNGLRASTERPOS2FVPROC)load("glRasterPos2fv");

  00b3f	8b f4		 mov	 esi, esp
  00b41	68 00 00 00 00	 push	 OFFSET ??_C@_0P@OGOBNOEB@glRasterPos2fv@
  00b46	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00b49	83 c4 04	 add	 esp, 4
  00b4c	3b f4		 cmp	 esi, esp
  00b4e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00b53	a3 00 00 00 00	 mov	 DWORD PTR _glad_glRasterPos2fv, eax

; 1110 : 	glad_glRasterPos2i = (PFNGLRASTERPOS2IPROC)load("glRasterPos2i");

  00b58	8b f4		 mov	 esi, esp
  00b5a	68 00 00 00 00	 push	 OFFSET ??_C@_0O@LMHMIIIJ@glRasterPos2i@
  00b5f	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00b62	83 c4 04	 add	 esp, 4
  00b65	3b f4		 cmp	 esi, esp
  00b67	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00b6c	a3 00 00 00 00	 mov	 DWORD PTR _glad_glRasterPos2i, eax

; 1111 : 	glad_glRasterPos2iv = (PFNGLRASTERPOS2IVPROC)load("glRasterPos2iv");

  00b71	8b f4		 mov	 esi, esp
  00b73	68 00 00 00 00	 push	 OFFSET ??_C@_0P@ONLNJJHM@glRasterPos2iv@
  00b78	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00b7b	83 c4 04	 add	 esp, 4
  00b7e	3b f4		 cmp	 esi, esp
  00b80	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00b85	a3 00 00 00 00	 mov	 DWORD PTR _glad_glRasterPos2iv, eax

; 1112 : 	glad_glRasterPos2s = (PFNGLRASTERPOS2SPROC)load("glRasterPos2s");

  00b8a	8b f4		 mov	 esi, esp
  00b8c	68 00 00 00 00	 push	 OFFSET ??_C@_0O@MFBHCFC@glRasterPos2s@
  00b91	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00b94	83 c4 04	 add	 esp, 4
  00b97	3b f4		 cmp	 esi, esp
  00b99	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00b9e	a3 00 00 00 00	 mov	 DWORD PTR _glad_glRasterPos2s, eax

; 1113 : 	glad_glRasterPos2sv = (PFNGLRASTERPOS2SVPROC)load("glRasterPos2sv");

  00ba3	8b f4		 mov	 esi, esp
  00ba5	68 00 00 00 00	 push	 OFFSET ??_C@_0P@PMAMLPNK@glRasterPos2sv@
  00baa	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00bad	83 c4 04	 add	 esp, 4
  00bb0	3b f4		 cmp	 esi, esp
  00bb2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00bb7	a3 00 00 00 00	 mov	 DWORD PTR _glad_glRasterPos2sv, eax

; 1114 : 	glad_glRasterPos3d = (PFNGLRASTERPOS3DPROC)load("glRasterPos3d");

  00bbc	8b f4		 mov	 esi, esp
  00bbe	68 00 00 00 00	 push	 OFFSET ??_C@_0O@IBAJMPD@glRasterPos3d@
  00bc3	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00bc6	83 c4 04	 add	 esp, 4
  00bc9	3b f4		 cmp	 esi, esp
  00bcb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00bd0	a3 00 00 00 00	 mov	 DWORD PTR _glad_glRasterPos3d, eax

; 1115 : 	glad_glRasterPos3dv = (PFNGLRASTERPOS3DVPROC)load("glRasterPos3dv");

  00bd5	8b f4		 mov	 esi, esp
  00bd7	68 00 00 00 00	 push	 OFFSET ??_C@_0P@FNNJGNEK@glRasterPos3dv@
  00bdc	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00bdf	83 c4 04	 add	 esp, 4
  00be2	3b f4		 cmp	 esi, esp
  00be4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00be9	a3 00 00 00 00	 mov	 DWORD PTR _glad_glRasterPos3dv, eax

; 1116 : 	glad_glRasterPos3f = (PFNGLRASTERPOS3FPROC)load("glRasterPos3f");

  00bee	8b f4		 mov	 esi, esp
  00bf0	68 00 00 00 00	 push	 OFFSET ??_C@_0O@DKCGPOHB@glRasterPos3f@
  00bf5	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00bf8	83 c4 04	 add	 esp, 4
  00bfb	3b f4		 cmp	 esi, esp
  00bfd	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00c02	a3 00 00 00 00	 mov	 DWORD PTR _glad_glRasterPos3f, eax

; 1117 : 	glad_glRasterPos3fv = (PFNGLRASTERPOS3FVPROC)load("glRasterPos3fv");

  00c07	8b f4		 mov	 esi, esp
  00c09	68 00 00 00 00	 push	 OFFSET ??_C@_0P@FOFNLJCE@glRasterPos3fv@
  00c0e	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00c11	83 c4 04	 add	 esp, 4
  00c14	3b f4		 cmp	 esi, esp
  00c16	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00c1b	a3 00 00 00 00	 mov	 DWORD PTR _glad_glRasterPos3fv, eax

; 1118 : 	glad_glRasterPos3i = (PFNGLRASTERPOS3IPROC)load("glRasterPos3i");

  00c20	8b f4		 mov	 esi, esp
  00c22	68 00 00 00 00	 push	 OFFSET ??_C@_0O@LNLOOCLO@glRasterPos3i@
  00c27	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00c2a	83 c4 04	 add	 esp, 4
  00c2d	3b f4		 cmp	 esi, esp
  00c2f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00c34	a3 00 00 00 00	 mov	 DWORD PTR _glad_glRasterPos3i, eax

; 1119 : 	glad_glRasterPos3iv = (PFNGLRASTERPOS3IVPROC)load("glRasterPos3iv");

  00c39	8b f4		 mov	 esi, esp
  00c3b	68 00 00 00 00	 push	 OFFSET ??_C@_0P@FFABPOBJ@glRasterPos3iv@
  00c40	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00c43	83 c4 04	 add	 esp, 4
  00c46	3b f4		 cmp	 esi, esp
  00c48	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00c4d	a3 00 00 00 00	 mov	 DWORD PTR _glad_glRasterPos3iv, eax

; 1120 : 	glad_glRasterPos3s = (PFNGLRASTERPOS3SPROC)load("glRasterPos3s");

  00c52	8b f4		 mov	 esi, esp
  00c54	68 00 00 00 00	 push	 OFFSET ??_C@_0O@NJDBIGF@glRasterPos3s@
  00c59	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00c5c	83 c4 04	 add	 esp, 4
  00c5f	3b f4		 cmp	 esi, esp
  00c61	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00c66	a3 00 00 00 00	 mov	 DWORD PTR _glad_glRasterPos3s, eax

; 1121 : 	glad_glRasterPos3sv = (PFNGLRASTERPOS3SVPROC)load("glRasterPos3sv");

  00c6b	8b f4		 mov	 esi, esp
  00c6d	68 00 00 00 00	 push	 OFFSET ??_C@_0P@EELANILP@glRasterPos3sv@
  00c72	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00c75	83 c4 04	 add	 esp, 4
  00c78	3b f4		 cmp	 esi, esp
  00c7a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00c7f	a3 00 00 00 00	 mov	 DWORD PTR _glad_glRasterPos3sv, eax

; 1122 : 	glad_glRasterPos4d = (PFNGLRASTERPOS4DPROC)load("glRasterPos4d");

  00c84	8b f4		 mov	 esi, esp
  00c86	68 00 00 00 00	 push	 OFFSET ??_C@_0O@NFPIKHG@glRasterPos4d@
  00c8b	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00c8e	83 c4 04	 add	 esp, 4
  00c91	3b f4		 cmp	 esi, esp
  00c93	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00c98	a3 00 00 00 00	 mov	 DWORD PTR _glad_glRasterPos4d, eax

; 1123 : 	glad_glRasterPos4dv = (PFNGLRASTERPOS4DVPROC)load("glRasterPos4dv");

  00c9d	8b f4		 mov	 esi, esp
  00c9f	68 00 00 00 00	 push	 OFFSET ??_C@_0P@MAAOFFPD@glRasterPos4dv@
  00ca4	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00ca7	83 c4 04	 add	 esp, 4
  00caa	3b f4		 cmp	 esi, esp
  00cac	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00cb1	a3 00 00 00 00	 mov	 DWORD PTR _glad_glRasterPos4dv, eax

; 1124 : 	glad_glRasterPos4f = (PFNGLRASTERPOS4FPROC)load("glRasterPos4f");

  00cb6	8b f4		 mov	 esi, esp
  00cb8	68 00 00 00 00	 push	 OFFSET ??_C@_0O@DPGJOIPE@glRasterPos4f@
  00cbd	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00cc0	83 c4 04	 add	 esp, 4
  00cc3	3b f4		 cmp	 esi, esp
  00cc5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00cca	a3 00 00 00 00	 mov	 DWORD PTR _glad_glRasterPos4f, eax

; 1125 : 	glad_glRasterPos4fv = (PFNGLRASTERPOS4FVPROC)load("glRasterPos4fv");

  00ccf	8b f4		 mov	 esi, esp
  00cd1	68 00 00 00 00	 push	 OFFSET ??_C@_0P@MDIKIBJN@glRasterPos4fv@
  00cd6	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00cd9	83 c4 04	 add	 esp, 4
  00cdc	3b f4		 cmp	 esi, esp
  00cde	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00ce3	a3 00 00 00 00	 mov	 DWORD PTR _glad_glRasterPos4fv, eax

; 1126 : 	glad_glRasterPos4i = (PFNGLRASTERPOS4IPROC)load("glRasterPos4i");

  00ce8	8b f4		 mov	 esi, esp
  00cea	68 00 00 00 00	 push	 OFFSET ??_C@_0O@LIPBPEDL@glRasterPos4i@
  00cef	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00cf2	83 c4 04	 add	 esp, 4
  00cf5	3b f4		 cmp	 esi, esp
  00cf7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00cfc	a3 00 00 00 00	 mov	 DWORD PTR _glad_glRasterPos4i, eax

; 1127 : 	glad_glRasterPos4iv = (PFNGLRASTERPOS4IVPROC)load("glRasterPos4iv");

  00d01	8b f4		 mov	 esi, esp
  00d03	68 00 00 00 00	 push	 OFFSET ??_C@_0P@MINGMGKA@glRasterPos4iv@
  00d08	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00d0b	83 c4 04	 add	 esp, 4
  00d0e	3b f4		 cmp	 esi, esp
  00d10	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00d15	a3 00 00 00 00	 mov	 DWORD PTR _glad_glRasterPos4iv, eax

; 1128 : 	glad_glRasterPos4s = (PFNGLRASTERPOS4SPROC)load("glRasterPos4s");

  00d1a	8b f4		 mov	 esi, esp
  00d1c	68 00 00 00 00	 push	 OFFSET ??_C@_0O@INMAOOA@glRasterPos4s@
  00d21	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00d24	83 c4 04	 add	 esp, 4
  00d27	3b f4		 cmp	 esi, esp
  00d29	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00d2e	a3 00 00 00 00	 mov	 DWORD PTR _glad_glRasterPos4s, eax

; 1129 : 	glad_glRasterPos4sv = (PFNGLRASTERPOS4SVPROC)load("glRasterPos4sv");

  00d33	8b f4		 mov	 esi, esp
  00d35	68 00 00 00 00	 push	 OFFSET ??_C@_0P@NJGHOAAG@glRasterPos4sv@
  00d3a	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00d3d	83 c4 04	 add	 esp, 4
  00d40	3b f4		 cmp	 esi, esp
  00d42	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00d47	a3 00 00 00 00	 mov	 DWORD PTR _glad_glRasterPos4sv, eax

; 1130 : 	glad_glRectd = (PFNGLRECTDPROC)load("glRectd");

  00d4c	8b f4		 mov	 esi, esp
  00d4e	68 00 00 00 00	 push	 OFFSET ??_C@_07GHILMIKG@glRectd@
  00d53	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00d56	83 c4 04	 add	 esp, 4
  00d59	3b f4		 cmp	 esi, esp
  00d5b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00d60	a3 00 00 00 00	 mov	 DWORD PTR _glad_glRectd, eax

; 1131 : 	glad_glRectdv = (PFNGLRECTDVPROC)load("glRectdv");

  00d65	8b f4		 mov	 esi, esp
  00d67	68 00 00 00 00	 push	 OFFSET ??_C@_08EGLHFDGF@glRectdv@
  00d6c	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00d6f	83 c4 04	 add	 esp, 4
  00d72	3b f4		 cmp	 esi, esp
  00d74	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00d79	a3 00 00 00 00	 mov	 DWORD PTR _glad_glRectdv, eax

; 1132 : 	glad_glRectf = (PFNGLRECTFPROC)load("glRectf");

  00d7e	8b f4		 mov	 esi, esp
  00d80	68 00 00 00 00	 push	 OFFSET ??_C@_07FFLNKKCE@glRectf@
  00d85	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00d88	83 c4 04	 add	 esp, 4
  00d8b	3b f4		 cmp	 esi, esp
  00d8d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00d92	a3 00 00 00 00	 mov	 DWORD PTR _glad_glRectf, eax

; 1133 : 	glad_glRectfv = (PFNGLRECTFVPROC)load("glRectfv");

  00d97	8b f4		 mov	 esi, esp
  00d99	68 00 00 00 00	 push	 OFFSET ??_C@_08EFDDIHAL@glRectfv@
  00d9e	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00da1	83 c4 04	 add	 esp, 4
  00da4	3b f4		 cmp	 esi, esp
  00da6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00dab	a3 00 00 00 00	 mov	 DWORD PTR _glad_glRectfv, eax

; 1134 : 	glad_glRecti = (PFNGLRECTIPROC)load("glRecti");

  00db0	8b f4		 mov	 esi, esp
  00db2	68 00 00 00 00	 push	 OFFSET ??_C@_07NCCFLGOL@glRecti@
  00db7	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00dba	83 c4 04	 add	 esp, 4
  00dbd	3b f4		 cmp	 esi, esp
  00dbf	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00dc4	a3 00 00 00 00	 mov	 DWORD PTR _glad_glRecti, eax

; 1135 : 	glad_glRectiv = (PFNGLRECTIVPROC)load("glRectiv");

  00dc9	8b f4		 mov	 esi, esp
  00dcb	68 00 00 00 00	 push	 OFFSET ??_C@_08EOGPMADG@glRectiv@
  00dd0	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00dd3	83 c4 04	 add	 esp, 4
  00dd6	3b f4		 cmp	 esi, esp
  00dd8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00ddd	a3 00 00 00 00	 mov	 DWORD PTR _glad_glRectiv, eax

; 1136 : 	glad_glRects = (PFNGLRECTSPROC)load("glRects");

  00de2	8b f4		 mov	 esi, esp
  00de4	68 00 00 00 00	 push	 OFFSET ??_C@_07GCAIEMDA@glRects@
  00de9	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00dec	83 c4 04	 add	 esp, 4
  00def	3b f4		 cmp	 esi, esp
  00df1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00df6	a3 00 00 00 00	 mov	 DWORD PTR _glad_glRects, eax

; 1137 : 	glad_glRectsv = (PFNGLRECTSVPROC)load("glRectsv");

  00dfb	8b f4		 mov	 esi, esp
  00dfd	68 00 00 00 00	 push	 OFFSET ??_C@_08FPNOOGJA@glRectsv@
  00e02	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00e05	83 c4 04	 add	 esp, 4
  00e08	3b f4		 cmp	 esi, esp
  00e0a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00e0f	a3 00 00 00 00	 mov	 DWORD PTR _glad_glRectsv, eax

; 1138 : 	glad_glTexCoord1d = (PFNGLTEXCOORD1DPROC)load("glTexCoord1d");

  00e14	8b f4		 mov	 esi, esp
  00e16	68 00 00 00 00	 push	 OFFSET ??_C@_0N@CKKBPCNP@glTexCoord1d@
  00e1b	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00e1e	83 c4 04	 add	 esp, 4
  00e21	3b f4		 cmp	 esi, esp
  00e23	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00e28	a3 00 00 00 00	 mov	 DWORD PTR _glad_glTexCoord1d, eax

; 1139 : 	glad_glTexCoord1dv = (PFNGLTEXCOORD1DVPROC)load("glTexCoord1dv");

  00e2d	8b f4		 mov	 esi, esp
  00e2f	68 00 00 00 00	 push	 OFFSET ??_C@_0O@GPCDLAMH@glTexCoord1dv@
  00e34	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00e37	83 c4 04	 add	 esp, 4
  00e3a	3b f4		 cmp	 esi, esp
  00e3c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00e41	a3 00 00 00 00	 mov	 DWORD PTR _glad_glTexCoord1dv, eax

; 1140 : 	glad_glTexCoord1f = (PFNGLTEXCOORD1FPROC)load("glTexCoord1f");

  00e46	8b f4		 mov	 esi, esp
  00e48	68 00 00 00 00	 push	 OFFSET ??_C@_0N@BIJHJAFN@glTexCoord1f@
  00e4d	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00e50	83 c4 04	 add	 esp, 4
  00e53	3b f4		 cmp	 esi, esp
  00e55	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00e5a	a3 00 00 00 00	 mov	 DWORD PTR _glad_glTexCoord1f, eax

; 1141 : 	glad_glTexCoord1fv = (PFNGLTEXCOORD1FVPROC)load("glTexCoord1fv");

  00e5f	8b f4		 mov	 esi, esp
  00e61	68 00 00 00 00	 push	 OFFSET ??_C@_0O@GMKHGEKJ@glTexCoord1fv@
  00e66	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00e69	83 c4 04	 add	 esp, 4
  00e6c	3b f4		 cmp	 esi, esp
  00e6e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00e73	a3 00 00 00 00	 mov	 DWORD PTR _glad_glTexCoord1fv, eax

; 1142 : 	glad_glTexCoord1i = (PFNGLTEXCOORD1IPROC)load("glTexCoord1i");

  00e78	8b f4		 mov	 esi, esp
  00e7a	68 00 00 00 00	 push	 OFFSET ??_C@_0N@JPAPIMJC@glTexCoord1i@
  00e7f	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00e82	83 c4 04	 add	 esp, 4
  00e85	3b f4		 cmp	 esi, esp
  00e87	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00e8c	a3 00 00 00 00	 mov	 DWORD PTR _glad_glTexCoord1i, eax

; 1143 : 	glad_glTexCoord1iv = (PFNGLTEXCOORD1IVPROC)load("glTexCoord1iv");

  00e91	8b f4		 mov	 esi, esp
  00e93	68 00 00 00 00	 push	 OFFSET ??_C@_0O@GHPLCDJE@glTexCoord1iv@
  00e98	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00e9b	83 c4 04	 add	 esp, 4
  00e9e	3b f4		 cmp	 esi, esp
  00ea0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00ea5	a3 00 00 00 00	 mov	 DWORD PTR _glad_glTexCoord1iv, eax

; 1144 : 	glad_glTexCoord1s = (PFNGLTEXCOORD1SPROC)load("glTexCoord1s");

  00eaa	8b f4		 mov	 esi, esp
  00eac	68 00 00 00 00	 push	 OFFSET ??_C@_0N@CPCCHGEJ@glTexCoord1s@
  00eb1	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00eb4	83 c4 04	 add	 esp, 4
  00eb7	3b f4		 cmp	 esi, esp
  00eb9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00ebe	a3 00 00 00 00	 mov	 DWORD PTR _glad_glTexCoord1s, eax

; 1145 : 	glad_glTexCoord1sv = (PFNGLTEXCOORD1SVPROC)load("glTexCoord1sv");

  00ec3	8b f4		 mov	 esi, esp
  00ec5	68 00 00 00 00	 push	 OFFSET ??_C@_0O@HGEKAFDC@glTexCoord1sv@
  00eca	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00ecd	83 c4 04	 add	 esp, 4
  00ed0	3b f4		 cmp	 esi, esp
  00ed2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00ed7	a3 00 00 00 00	 mov	 DWORD PTR _glad_glTexCoord1sv, eax

; 1146 : 	glad_glTexCoord2d = (PFNGLTEXCOORD2DPROC)load("glTexCoord2d");

  00edc	8b f4		 mov	 esi, esp
  00ede	68 00 00 00 00	 push	 OFFSET ??_C@_0N@CIOHEMIG@glTexCoord2d@
  00ee3	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00ee6	83 c4 04	 add	 esp, 4
  00ee9	3b f4		 cmp	 esi, esp
  00eeb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00ef0	a3 00 00 00 00	 mov	 DWORD PTR _glad_glTexCoord2d, eax

; 1147 : 	glad_glTexCoord2dv = (PFNGLTEXCOORD2DVPROC)load("glTexCoord2dv");

  00ef5	8b f4		 mov	 esi, esp
  00ef7	68 00 00 00 00	 push	 OFFSET ??_C@_0O@HNJGBPCJ@glTexCoord2dv@
  00efc	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00eff	83 c4 04	 add	 esp, 4
  00f02	3b f4		 cmp	 esi, esp
  00f04	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00f09	a3 00 00 00 00	 mov	 DWORD PTR _glad_glTexCoord2dv, eax

; 1148 : 	glad_glTexCoord2f = (PFNGLTEXCOORD2FPROC)load("glTexCoord2f");

  00f0e	8b f4		 mov	 esi, esp
  00f10	68 00 00 00 00	 push	 OFFSET ??_C@_0N@BKNBCOAE@glTexCoord2f@
  00f15	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00f18	83 c4 04	 add	 esp, 4
  00f1b	3b f4		 cmp	 esi, esp
  00f1d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00f22	a3 00 00 00 00	 mov	 DWORD PTR _glad_glTexCoord2f, eax

; 1149 : 	glad_glTexCoord2fv = (PFNGLTEXCOORD2FVPROC)load("glTexCoord2fv");

  00f27	8b f4		 mov	 esi, esp
  00f29	68 00 00 00 00	 push	 OFFSET ??_C@_0O@HOBCMLEH@glTexCoord2fv@
  00f2e	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00f31	83 c4 04	 add	 esp, 4
  00f34	3b f4		 cmp	 esi, esp
  00f36	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00f3b	a3 00 00 00 00	 mov	 DWORD PTR _glad_glTexCoord2fv, eax

; 1150 : 	glad_glTexCoord2i = (PFNGLTEXCOORD2IPROC)load("glTexCoord2i");

  00f40	8b f4		 mov	 esi, esp
  00f42	68 00 00 00 00	 push	 OFFSET ??_C@_0N@JNEJDCML@glTexCoord2i@
  00f47	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00f4a	83 c4 04	 add	 esp, 4
  00f4d	3b f4		 cmp	 esi, esp
  00f4f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00f54	a3 00 00 00 00	 mov	 DWORD PTR _glad_glTexCoord2i, eax

; 1151 : 	glad_glTexCoord2iv = (PFNGLTEXCOORD2IVPROC)load("glTexCoord2iv");

  00f59	8b f4		 mov	 esi, esp
  00f5b	68 00 00 00 00	 push	 OFFSET ??_C@_0O@HFEOIMHK@glTexCoord2iv@
  00f60	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00f63	83 c4 04	 add	 esp, 4
  00f66	3b f4		 cmp	 esi, esp
  00f68	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00f6d	a3 00 00 00 00	 mov	 DWORD PTR _glad_glTexCoord2iv, eax

; 1152 : 	glad_glTexCoord2s = (PFNGLTEXCOORD2SPROC)load("glTexCoord2s");

  00f72	8b f4		 mov	 esi, esp
  00f74	68 00 00 00 00	 push	 OFFSET ??_C@_0N@CNGEMIBA@glTexCoord2s@
  00f79	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00f7c	83 c4 04	 add	 esp, 4
  00f7f	3b f4		 cmp	 esi, esp
  00f81	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00f86	a3 00 00 00 00	 mov	 DWORD PTR _glad_glTexCoord2s, eax

; 1153 : 	glad_glTexCoord2sv = (PFNGLTEXCOORD2SVPROC)load("glTexCoord2sv");

  00f8b	8b f4		 mov	 esi, esp
  00f8d	68 00 00 00 00	 push	 OFFSET ??_C@_0O@GEPPKKNM@glTexCoord2sv@
  00f92	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00f95	83 c4 04	 add	 esp, 4
  00f98	3b f4		 cmp	 esi, esp
  00f9a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00f9f	a3 00 00 00 00	 mov	 DWORD PTR _glad_glTexCoord2sv, eax

; 1154 : 	glad_glTexCoord3d = (PFNGLTEXCOORD3DPROC)load("glTexCoord3d");

  00fa4	8b f4		 mov	 esi, esp
  00fa6	68 00 00 00 00	 push	 OFFSET ??_C@_0N@CJCFCGLB@glTexCoord3d@
  00fab	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00fae	83 c4 04	 add	 esp, 4
  00fb1	3b f4		 cmp	 esi, esp
  00fb3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00fb8	a3 00 00 00 00	 mov	 DWORD PTR _glad_glTexCoord3d, eax

; 1155 : 	glad_glTexCoord3dv = (PFNGLTEXCOORD3DVPROC)load("glTexCoord3dv");

  00fbd	8b f4		 mov	 esi, esp
  00fbf	68 00 00 00 00	 push	 OFFSET ??_C@_0O@MFCKHIEM@glTexCoord3dv@
  00fc4	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00fc7	83 c4 04	 add	 esp, 4
  00fca	3b f4		 cmp	 esi, esp
  00fcc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00fd1	a3 00 00 00 00	 mov	 DWORD PTR _glad_glTexCoord3dv, eax

; 1156 : 	glad_glTexCoord3f = (PFNGLTEXCOORD3FPROC)load("glTexCoord3f");

  00fd6	8b f4		 mov	 esi, esp
  00fd8	68 00 00 00 00	 push	 OFFSET ??_C@_0N@BLBDEEDD@glTexCoord3f@
  00fdd	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00fe0	83 c4 04	 add	 esp, 4
  00fe3	3b f4		 cmp	 esi, esp
  00fe5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00fea	a3 00 00 00 00	 mov	 DWORD PTR _glad_glTexCoord3f, eax

; 1157 : 	glad_glTexCoord3fv = (PFNGLTEXCOORD3FVPROC)load("glTexCoord3fv");

  00fef	8b f4		 mov	 esi, esp
  00ff1	68 00 00 00 00	 push	 OFFSET ??_C@_0O@MGKOKMCC@glTexCoord3fv@
  00ff6	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00ff9	83 c4 04	 add	 esp, 4
  00ffc	3b f4		 cmp	 esi, esp
  00ffe	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01003	a3 00 00 00 00	 mov	 DWORD PTR _glad_glTexCoord3fv, eax

; 1158 : 	glad_glTexCoord3i = (PFNGLTEXCOORD3IPROC)load("glTexCoord3i");

  01008	8b f4		 mov	 esi, esp
  0100a	68 00 00 00 00	 push	 OFFSET ??_C@_0N@JMILFIPM@glTexCoord3i@
  0100f	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01012	83 c4 04	 add	 esp, 4
  01015	3b f4		 cmp	 esi, esp
  01017	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0101c	a3 00 00 00 00	 mov	 DWORD PTR _glad_glTexCoord3i, eax

; 1159 : 	glad_glTexCoord3iv = (PFNGLTEXCOORD3IVPROC)load("glTexCoord3iv");

  01021	8b f4		 mov	 esi, esp
  01023	68 00 00 00 00	 push	 OFFSET ??_C@_0O@MNPCOLBP@glTexCoord3iv@
  01028	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0102b	83 c4 04	 add	 esp, 4
  0102e	3b f4		 cmp	 esi, esp
  01030	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01035	a3 00 00 00 00	 mov	 DWORD PTR _glad_glTexCoord3iv, eax

; 1160 : 	glad_glTexCoord3s = (PFNGLTEXCOORD3SPROC)load("glTexCoord3s");

  0103a	8b f4		 mov	 esi, esp
  0103c	68 00 00 00 00	 push	 OFFSET ??_C@_0N@CMKGKCCH@glTexCoord3s@
  01041	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01044	83 c4 04	 add	 esp, 4
  01047	3b f4		 cmp	 esi, esp
  01049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0104e	a3 00 00 00 00	 mov	 DWORD PTR _glad_glTexCoord3s, eax

; 1161 : 	glad_glTexCoord3sv = (PFNGLTEXCOORD3SVPROC)load("glTexCoord3sv");

  01053	8b f4		 mov	 esi, esp
  01055	68 00 00 00 00	 push	 OFFSET ??_C@_0O@NMEDMNLJ@glTexCoord3sv@
  0105a	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0105d	83 c4 04	 add	 esp, 4
  01060	3b f4		 cmp	 esi, esp
  01062	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01067	a3 00 00 00 00	 mov	 DWORD PTR _glad_glTexCoord3sv, eax

; 1162 : 	glad_glTexCoord4d = (PFNGLTEXCOORD4DPROC)load("glTexCoord4d");

  0106c	8b f4		 mov	 esi, esp
  0106e	68 00 00 00 00	 push	 OFFSET ??_C@_0N@CMGKDADE@glTexCoord4d@
  01073	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01076	83 c4 04	 add	 esp, 4
  01079	3b f4		 cmp	 esi, esp
  0107b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01080	a3 00 00 00 00	 mov	 DWORD PTR _glad_glTexCoord4d, eax

; 1163 : 	glad_glTexCoord4dv = (PFNGLTEXCOORD4DVPROC)load("glTexCoord4dv");

  01085	8b f4		 mov	 esi, esp
  01087	68 00 00 00 00	 push	 OFFSET ??_C@_0O@FIPNEAPF@glTexCoord4dv@
  0108c	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0108f	83 c4 04	 add	 esp, 4
  01092	3b f4		 cmp	 esi, esp
  01094	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01099	a3 00 00 00 00	 mov	 DWORD PTR _glad_glTexCoord4dv, eax

; 1164 : 	glad_glTexCoord4f = (PFNGLTEXCOORD4FPROC)load("glTexCoord4f");

  0109e	8b f4		 mov	 esi, esp
  010a0	68 00 00 00 00	 push	 OFFSET ??_C@_0N@BOFMFCLG@glTexCoord4f@
  010a5	ff 55 08	 call	 DWORD PTR _load$[ebp]
  010a8	83 c4 04	 add	 esp, 4
  010ab	3b f4		 cmp	 esi, esp
  010ad	e8 00 00 00 00	 call	 __RTC_CheckEsp
  010b2	a3 00 00 00 00	 mov	 DWORD PTR _glad_glTexCoord4f, eax

; 1165 : 	glad_glTexCoord4fv = (PFNGLTEXCOORD4FVPROC)load("glTexCoord4fv");

  010b7	8b f4		 mov	 esi, esp
  010b9	68 00 00 00 00	 push	 OFFSET ??_C@_0O@FLHJJEJL@glTexCoord4fv@
  010be	ff 55 08	 call	 DWORD PTR _load$[ebp]
  010c1	83 c4 04	 add	 esp, 4
  010c4	3b f4		 cmp	 esi, esp
  010c6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  010cb	a3 00 00 00 00	 mov	 DWORD PTR _glad_glTexCoord4fv, eax

; 1166 : 	glad_glTexCoord4i = (PFNGLTEXCOORD4IPROC)load("glTexCoord4i");

  010d0	8b f4		 mov	 esi, esp
  010d2	68 00 00 00 00	 push	 OFFSET ??_C@_0N@JJMEEOHJ@glTexCoord4i@
  010d7	ff 55 08	 call	 DWORD PTR _load$[ebp]
  010da	83 c4 04	 add	 esp, 4
  010dd	3b f4		 cmp	 esi, esp
  010df	e8 00 00 00 00	 call	 __RTC_CheckEsp
  010e4	a3 00 00 00 00	 mov	 DWORD PTR _glad_glTexCoord4i, eax

; 1167 : 	glad_glTexCoord4iv = (PFNGLTEXCOORD4IVPROC)load("glTexCoord4iv");

  010e9	8b f4		 mov	 esi, esp
  010eb	68 00 00 00 00	 push	 OFFSET ??_C@_0O@FACFNDKG@glTexCoord4iv@
  010f0	ff 55 08	 call	 DWORD PTR _load$[ebp]
  010f3	83 c4 04	 add	 esp, 4
  010f6	3b f4		 cmp	 esi, esp
  010f8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  010fd	a3 00 00 00 00	 mov	 DWORD PTR _glad_glTexCoord4iv, eax

; 1168 : 	glad_glTexCoord4s = (PFNGLTEXCOORD4SPROC)load("glTexCoord4s");

  01102	8b f4		 mov	 esi, esp
  01104	68 00 00 00 00	 push	 OFFSET ??_C@_0N@CJOJLEKC@glTexCoord4s@
  01109	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0110c	83 c4 04	 add	 esp, 4
  0110f	3b f4		 cmp	 esi, esp
  01111	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01116	a3 00 00 00 00	 mov	 DWORD PTR _glad_glTexCoord4s, eax

; 1169 : 	glad_glTexCoord4sv = (PFNGLTEXCOORD4SVPROC)load("glTexCoord4sv");

  0111b	8b f4		 mov	 esi, esp
  0111d	68 00 00 00 00	 push	 OFFSET ??_C@_0O@EBJEPFAA@glTexCoord4sv@
  01122	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01125	83 c4 04	 add	 esp, 4
  01128	3b f4		 cmp	 esi, esp
  0112a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0112f	a3 00 00 00 00	 mov	 DWORD PTR _glad_glTexCoord4sv, eax

; 1170 : 	glad_glVertex2d = (PFNGLVERTEX2DPROC)load("glVertex2d");

  01134	8b f4		 mov	 esi, esp
  01136	68 00 00 00 00	 push	 OFFSET ??_C@_0L@INGMNOLD@glVertex2d@
  0113b	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0113e	83 c4 04	 add	 esp, 4
  01141	3b f4		 cmp	 esi, esp
  01143	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01148	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertex2d, eax

; 1171 : 	glad_glVertex2dv = (PFNGLVERTEX2DVPROC)load("glVertex2dv");

  0114d	8b f4		 mov	 esi, esp
  0114f	68 00 00 00 00	 push	 OFFSET ??_C@_0M@CLIAFAJI@glVertex2dv@
  01154	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01157	83 c4 04	 add	 esp, 4
  0115a	3b f4		 cmp	 esi, esp
  0115c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01161	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertex2dv, eax

; 1172 : 	glad_glVertex2f = (PFNGLVERTEX2FPROC)load("glVertex2f");

  01166	8b f4		 mov	 esi, esp
  01168	68 00 00 00 00	 push	 OFFSET ??_C@_0L@LPFKLMDB@glVertex2f@
  0116d	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01170	83 c4 04	 add	 esp, 4
  01173	3b f4		 cmp	 esi, esp
  01175	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0117a	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertex2f, eax

; 1173 : 	glad_glVertex2fv = (PFNGLVERTEX2FVPROC)load("glVertex2fv");

  0117f	8b f4		 mov	 esi, esp
  01181	68 00 00 00 00	 push	 OFFSET ??_C@_0M@CIAEIEPG@glVertex2fv@
  01186	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01189	83 c4 04	 add	 esp, 4
  0118c	3b f4		 cmp	 esi, esp
  0118e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01193	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertex2fv, eax

; 1174 : 	glad_glVertex2i = (PFNGLVERTEX2IPROC)load("glVertex2i");

  01198	8b f4		 mov	 esi, esp
  0119a	68 00 00 00 00	 push	 OFFSET ??_C@_0L@DIMCKAPO@glVertex2i@
  0119f	ff 55 08	 call	 DWORD PTR _load$[ebp]
  011a2	83 c4 04	 add	 esp, 4
  011a5	3b f4		 cmp	 esi, esp
  011a7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  011ac	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertex2i, eax

; 1175 : 	glad_glVertex2iv = (PFNGLVERTEX2IVPROC)load("glVertex2iv");

  011b1	8b f4		 mov	 esi, esp
  011b3	68 00 00 00 00	 push	 OFFSET ??_C@_0M@CDFIMDML@glVertex2iv@
  011b8	ff 55 08	 call	 DWORD PTR _load$[ebp]
  011bb	83 c4 04	 add	 esp, 4
  011be	3b f4		 cmp	 esi, esp
  011c0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  011c5	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertex2iv, eax

; 1176 : 	glad_glVertex2s = (PFNGLVERTEX2SPROC)load("glVertex2s");

  011ca	8b f4		 mov	 esi, esp
  011cc	68 00 00 00 00	 push	 OFFSET ??_C@_0L@IIOPFKCF@glVertex2s@
  011d1	ff 55 08	 call	 DWORD PTR _load$[ebp]
  011d4	83 c4 04	 add	 esp, 4
  011d7	3b f4		 cmp	 esi, esp
  011d9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  011de	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertex2s, eax

; 1177 : 	glad_glVertex2sv = (PFNGLVERTEX2SVPROC)load("glVertex2sv");

  011e3	8b f4		 mov	 esi, esp
  011e5	68 00 00 00 00	 push	 OFFSET ??_C@_0M@DCOJOFGN@glVertex2sv@
  011ea	ff 55 08	 call	 DWORD PTR _load$[ebp]
  011ed	83 c4 04	 add	 esp, 4
  011f0	3b f4		 cmp	 esi, esp
  011f2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  011f7	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertex2sv, eax

; 1178 : 	glad_glVertex3d = (PFNGLVERTEX3DPROC)load("glVertex3d");

  011fc	8b f4		 mov	 esi, esp
  011fe	68 00 00 00 00	 push	 OFFSET ??_C@_0L@IMKOLEIE@glVertex3d@
  01203	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01206	83 c4 04	 add	 esp, 4
  01209	3b f4		 cmp	 esi, esp
  0120b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01210	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertex3d, eax

; 1179 : 	glad_glVertex3dv = (PFNGLVERTEX3DVPROC)load("glVertex3dv");

  01215	8b f4		 mov	 esi, esp
  01217	68 00 00 00 00	 push	 OFFSET ??_C@_0M@JDDMDHPN@glVertex3dv@
  0121c	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0121f	83 c4 04	 add	 esp, 4
  01222	3b f4		 cmp	 esi, esp
  01224	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01229	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertex3dv, eax

; 1180 : 	glad_glVertex3f = (PFNGLVERTEX3FPROC)load("glVertex3f");

  0122e	8b f4		 mov	 esi, esp
  01230	68 00 00 00 00	 push	 OFFSET ??_C@_0L@LOJINGAG@glVertex3f@
  01235	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01238	83 c4 04	 add	 esp, 4
  0123b	3b f4		 cmp	 esi, esp
  0123d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01242	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertex3f, eax

; 1181 : 	glad_glVertex3fv = (PFNGLVERTEX3FVPROC)load("glVertex3fv");

  01247	8b f4		 mov	 esi, esp
  01249	68 00 00 00 00	 push	 OFFSET ??_C@_0M@JALIODJD@glVertex3fv@
  0124e	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01251	83 c4 04	 add	 esp, 4
  01254	3b f4		 cmp	 esi, esp
  01256	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0125b	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertex3fv, eax

; 1182 : 	glad_glVertex3i = (PFNGLVERTEX3IPROC)load("glVertex3i");

  01260	8b f4		 mov	 esi, esp
  01262	68 00 00 00 00	 push	 OFFSET ??_C@_0L@DJAAMKMJ@glVertex3i@
  01267	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0126a	83 c4 04	 add	 esp, 4
  0126d	3b f4		 cmp	 esi, esp
  0126f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01274	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertex3i, eax

; 1183 : 	glad_glVertex3iv = (PFNGLVERTEX3IVPROC)load("glVertex3iv");

  01279	8b f4		 mov	 esi, esp
  0127b	68 00 00 00 00	 push	 OFFSET ??_C@_0M@JLOEKEKO@glVertex3iv@
  01280	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01283	83 c4 04	 add	 esp, 4
  01286	3b f4		 cmp	 esi, esp
  01288	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0128d	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertex3iv, eax

; 1184 : 	glad_glVertex3s = (PFNGLVERTEX3SPROC)load("glVertex3s");

  01292	8b f4		 mov	 esi, esp
  01294	68 00 00 00 00	 push	 OFFSET ??_C@_0L@IJCNDABC@glVertex3s@
  01299	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0129c	83 c4 04	 add	 esp, 4
  0129f	3b f4		 cmp	 esi, esp
  012a1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  012a6	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertex3s, eax

; 1185 : 	glad_glVertex3sv = (PFNGLVERTEX3SVPROC)load("glVertex3sv");

  012ab	8b f4		 mov	 esi, esp
  012ad	68 00 00 00 00	 push	 OFFSET ??_C@_0M@IKFFICAI@glVertex3sv@
  012b2	ff 55 08	 call	 DWORD PTR _load$[ebp]
  012b5	83 c4 04	 add	 esp, 4
  012b8	3b f4		 cmp	 esi, esp
  012ba	e8 00 00 00 00	 call	 __RTC_CheckEsp
  012bf	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertex3sv, eax

; 1186 : 	glad_glVertex4d = (PFNGLVERTEX4DPROC)load("glVertex4d");

  012c4	8b f4		 mov	 esi, esp
  012c6	68 00 00 00 00	 push	 OFFSET ??_C@_0L@IJOBKCAB@glVertex4d@
  012cb	ff 55 08	 call	 DWORD PTR _load$[ebp]
  012ce	83 c4 04	 add	 esp, 4
  012d1	3b f4		 cmp	 esi, esp
  012d3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  012d8	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertex4d, eax

; 1187 : 	glad_glVertex4dv = (PFNGLVERTEX4DVPROC)load("glVertex4dv");

  012dd	8b f4		 mov	 esi, esp
  012df	68 00 00 00 00	 push	 OFFSET ??_C@_0M@OOLAPEE@glVertex4dv@
  012e4	ff 55 08	 call	 DWORD PTR _load$[ebp]
  012e7	83 c4 04	 add	 esp, 4
  012ea	3b f4		 cmp	 esi, esp
  012ec	e8 00 00 00 00	 call	 __RTC_CheckEsp
  012f1	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertex4dv, eax

; 1188 : 	glad_glVertex4f = (PFNGLVERTEX4FPROC)load("glVertex4f");

  012f6	8b f4		 mov	 esi, esp
  012f8	68 00 00 00 00	 push	 OFFSET ??_C@_0L@LLNHMAID@glVertex4f@
  012fd	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01300	83 c4 04	 add	 esp, 4
  01303	3b f4		 cmp	 esi, esp
  01305	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0130a	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertex4f, eax

; 1189 : 	glad_glVertex4fv = (PFNGLVERTEX4FVPROC)load("glVertex4fv");

  0130f	8b f4		 mov	 esi, esp
  01311	68 00 00 00 00	 push	 OFFSET ??_C@_0M@NGPNLCK@glVertex4fv@
  01316	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01319	83 c4 04	 add	 esp, 4
  0131c	3b f4		 cmp	 esi, esp
  0131e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01323	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertex4fv, eax

; 1190 : 	glad_glVertex4i = (PFNGLVERTEX4IPROC)load("glVertex4i");

  01328	8b f4		 mov	 esi, esp
  0132a	68 00 00 00 00	 push	 OFFSET ??_C@_0L@DMEPNMEM@glVertex4i@
  0132f	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01332	83 c4 04	 add	 esp, 4
  01335	3b f4		 cmp	 esi, esp
  01337	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0133c	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertex4i, eax

; 1191 : 	glad_glVertex4iv = (PFNGLVERTEX4IVPROC)load("glVertex4iv");

  01341	8b f4		 mov	 esi, esp
  01343	68 00 00 00 00	 push	 OFFSET ??_C@_0M@GDDJMBH@glVertex4iv@
  01348	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0134b	83 c4 04	 add	 esp, 4
  0134e	3b f4		 cmp	 esi, esp
  01350	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01355	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertex4iv, eax

; 1192 : 	glad_glVertex4s = (PFNGLVERTEX4SPROC)load("glVertex4s");

  0135a	8b f4		 mov	 esi, esp
  0135c	68 00 00 00 00	 push	 OFFSET ??_C@_0L@IMGCCGJH@glVertex4s@
  01361	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01364	83 c4 04	 add	 esp, 4
  01367	3b f4		 cmp	 esi, esp
  01369	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0136e	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertex4s, eax

; 1193 : 	glad_glVertex4sv = (PFNGLVERTEX4SVPROC)load("glVertex4sv");

  01373	8b f4		 mov	 esi, esp
  01375	68 00 00 00 00	 push	 OFFSET ??_C@_0M@BHICLKLB@glVertex4sv@
  0137a	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0137d	83 c4 04	 add	 esp, 4
  01380	3b f4		 cmp	 esi, esp
  01382	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01387	a3 00 00 00 00	 mov	 DWORD PTR _glad_glVertex4sv, eax

; 1194 : 	glad_glClipPlane = (PFNGLCLIPPLANEPROC)load("glClipPlane");

  0138c	8b f4		 mov	 esi, esp
  0138e	68 00 00 00 00	 push	 OFFSET ??_C@_0M@OHCNGGFF@glClipPlane@
  01393	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01396	83 c4 04	 add	 esp, 4
  01399	3b f4		 cmp	 esi, esp
  0139b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  013a0	a3 00 00 00 00	 mov	 DWORD PTR _glad_glClipPlane, eax

; 1195 : 	glad_glColorMaterial = (PFNGLCOLORMATERIALPROC)load("glColorMaterial");

  013a5	8b f4		 mov	 esi, esp
  013a7	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@OOEHEGPC@glColorMaterial@
  013ac	ff 55 08	 call	 DWORD PTR _load$[ebp]
  013af	83 c4 04	 add	 esp, 4
  013b2	3b f4		 cmp	 esi, esp
  013b4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  013b9	a3 00 00 00 00	 mov	 DWORD PTR _glad_glColorMaterial, eax

; 1196 : 	glad_glFogf = (PFNGLFOGFPROC)load("glFogf");

  013be	8b f4		 mov	 esi, esp
  013c0	68 00 00 00 00	 push	 OFFSET ??_C@_06JJHNMGPD@glFogf@
  013c5	ff 55 08	 call	 DWORD PTR _load$[ebp]
  013c8	83 c4 04	 add	 esp, 4
  013cb	3b f4		 cmp	 esi, esp
  013cd	e8 00 00 00 00	 call	 __RTC_CheckEsp
  013d2	a3 00 00 00 00	 mov	 DWORD PTR _glad_glFogf, eax

; 1197 : 	glad_glFogfv = (PFNGLFOGFVPROC)load("glFogfv");

  013d7	8b f4		 mov	 esi, esp
  013d9	68 00 00 00 00	 push	 OFFSET ??_C@_07FNEIAABA@glFogfv@
  013de	ff 55 08	 call	 DWORD PTR _load$[ebp]
  013e1	83 c4 04	 add	 esp, 4
  013e4	3b f4		 cmp	 esi, esp
  013e6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  013eb	a3 00 00 00 00	 mov	 DWORD PTR _glad_glFogfv, eax

; 1198 : 	glad_glFogi = (PFNGLFOGIPROC)load("glFogi");

  013f0	8b f4		 mov	 esi, esp
  013f2	68 00 00 00 00	 push	 OFFSET ??_C@_06BOOFNKDM@glFogi@
  013f7	ff 55 08	 call	 DWORD PTR _load$[ebp]
  013fa	83 c4 04	 add	 esp, 4
  013fd	3b f4		 cmp	 esi, esp
  013ff	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01404	a3 00 00 00 00	 mov	 DWORD PTR _glad_glFogi, eax

; 1199 : 	glad_glFogiv = (PFNGLFOGIVPROC)load("glFogiv");

  01409	8b f4		 mov	 esi, esp
  0140b	68 00 00 00 00	 push	 OFFSET ??_C@_07FGBEEHCN@glFogiv@
  01410	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01413	83 c4 04	 add	 esp, 4
  01416	3b f4		 cmp	 esi, esp
  01418	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0141d	a3 00 00 00 00	 mov	 DWORD PTR _glad_glFogiv, eax

; 1200 : 	glad_glLightf = (PFNGLLIGHTFPROC)load("glLightf");

  01422	8b f4		 mov	 esi, esp
  01424	68 00 00 00 00	 push	 OFFSET ??_C@_08LPDPILEL@glLightf@
  01429	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0142c	83 c4 04	 add	 esp, 4
  0142f	3b f4		 cmp	 esi, esp
  01431	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01436	a3 00 00 00 00	 mov	 DWORD PTR _glad_glLightf, eax

; 1201 : 	glad_glLightfv = (PFNGLLIGHTFVPROC)load("glLightfv");

  0143b	8b f4		 mov	 esi, esp
  0143d	68 00 00 00 00	 push	 OFFSET ??_C@_09JINEHJOD@glLightfv@
  01442	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01445	83 c4 04	 add	 esp, 4
  01448	3b f4		 cmp	 esi, esp
  0144a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0144f	a3 00 00 00 00	 mov	 DWORD PTR _glad_glLightfv, eax

; 1202 : 	glad_glLighti = (PFNGLLIGHTIPROC)load("glLighti");

  01454	8b f4		 mov	 esi, esp
  01456	68 00 00 00 00	 push	 OFFSET ??_C@_08DIKHJHIE@glLighti@
  0145b	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0145e	83 c4 04	 add	 esp, 4
  01461	3b f4		 cmp	 esi, esp
  01463	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01468	a3 00 00 00 00	 mov	 DWORD PTR _glad_glLighti, eax

; 1203 : 	glad_glLightiv = (PFNGLLIGHTIVPROC)load("glLightiv");

  0146d	8b f4		 mov	 esi, esp
  0146f	68 00 00 00 00	 push	 OFFSET ??_C@_09JDIIDONO@glLightiv@
  01474	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01477	83 c4 04	 add	 esp, 4
  0147a	3b f4		 cmp	 esi, esp
  0147c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01481	a3 00 00 00 00	 mov	 DWORD PTR _glad_glLightiv, eax

; 1204 : 	glad_glLightModelf = (PFNGLLIGHTMODELFPROC)load("glLightModelf");

  01486	8b f4		 mov	 esi, esp
  01488	68 00 00 00 00	 push	 OFFSET ??_C@_0O@HPCJLAII@glLightModelf@
  0148d	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01490	83 c4 04	 add	 esp, 4
  01493	3b f4		 cmp	 esi, esp
  01495	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0149a	a3 00 00 00 00	 mov	 DWORD PTR _glad_glLightModelf, eax

; 1205 : 	glad_glLightModelfv = (PFNGLLIGHTMODELFVPROC)load("glLightModelfv");

  0149f	8b f4		 mov	 esi, esp
  014a1	68 00 00 00 00	 push	 OFFSET ??_C@_0P@JKHJPMNC@glLightModelfv@
  014a6	ff 55 08	 call	 DWORD PTR _load$[ebp]
  014a9	83 c4 04	 add	 esp, 4
  014ac	3b f4		 cmp	 esi, esp
  014ae	e8 00 00 00 00	 call	 __RTC_CheckEsp
  014b3	a3 00 00 00 00	 mov	 DWORD PTR _glad_glLightModelfv, eax

; 1206 : 	glad_glLightModeli = (PFNGLLIGHTMODELIPROC)load("glLightModeli");

  014b8	8b f4		 mov	 esi, esp
  014ba	68 00 00 00 00	 push	 OFFSET ??_C@_0O@PILBKMEH@glLightModeli@
  014bf	ff 55 08	 call	 DWORD PTR _load$[ebp]
  014c2	83 c4 04	 add	 esp, 4
  014c5	3b f4		 cmp	 esi, esp
  014c7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  014cc	a3 00 00 00 00	 mov	 DWORD PTR _glad_glLightModeli, eax

; 1207 : 	glad_glLightModeliv = (PFNGLLIGHTMODELIVPROC)load("glLightModeliv");

  014d1	8b f4		 mov	 esi, esp
  014d3	68 00 00 00 00	 push	 OFFSET ??_C@_0P@JBCFLLOP@glLightModeliv@
  014d8	ff 55 08	 call	 DWORD PTR _load$[ebp]
  014db	83 c4 04	 add	 esp, 4
  014de	3b f4		 cmp	 esi, esp
  014e0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  014e5	a3 00 00 00 00	 mov	 DWORD PTR _glad_glLightModeliv, eax

; 1208 : 	glad_glLineStipple = (PFNGLLINESTIPPLEPROC)load("glLineStipple");

  014ea	8b f4		 mov	 esi, esp
  014ec	68 00 00 00 00	 push	 OFFSET ??_C@_0O@LDOINBOK@glLineStipple@
  014f1	ff 55 08	 call	 DWORD PTR _load$[ebp]
  014f4	83 c4 04	 add	 esp, 4
  014f7	3b f4		 cmp	 esi, esp
  014f9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  014fe	a3 00 00 00 00	 mov	 DWORD PTR _glad_glLineStipple, eax

; 1209 : 	glad_glMaterialf = (PFNGLMATERIALFPROC)load("glMaterialf");

  01503	8b f4		 mov	 esi, esp
  01505	68 00 00 00 00	 push	 OFFSET ??_C@_0M@HANOIKMC@glMaterialf@
  0150a	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0150d	83 c4 04	 add	 esp, 4
  01510	3b f4		 cmp	 esi, esp
  01512	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01517	a3 00 00 00 00	 mov	 DWORD PTR _glad_glMaterialf, eax

; 1210 : 	glad_glMaterialfv = (PFNGLMATERIALFVPROC)load("glMaterialfv");

  0151c	8b f4		 mov	 esi, esp
  0151e	68 00 00 00 00	 push	 OFFSET ??_C@_0N@MHPKDGG@glMaterialfv@
  01523	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01526	83 c4 04	 add	 esp, 4
  01529	3b f4		 cmp	 esi, esp
  0152b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01530	a3 00 00 00 00	 mov	 DWORD PTR _glad_glMaterialfv, eax

; 1211 : 	glad_glMateriali = (PFNGLMATERIALIPROC)load("glMateriali");

  01535	8b f4		 mov	 esi, esp
  01537	68 00 00 00 00	 push	 OFFSET ??_C@_0M@PHEGJGAN@glMateriali@
  0153c	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0153f	83 c4 04	 add	 esp, 4
  01542	3b f4		 cmp	 esi, esp
  01544	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01549	a3 00 00 00 00	 mov	 DWORD PTR _glad_glMateriali, eax

; 1212 : 	glad_glMaterialiv = (PFNGLMATERIALIVPROC)load("glMaterialiv");

  0154e	8b f4		 mov	 esi, esp
  01550	68 00 00 00 00	 push	 OFFSET ??_C@_0N@HCDOEFL@glMaterialiv@
  01555	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01558	83 c4 04	 add	 esp, 4
  0155b	3b f4		 cmp	 esi, esp
  0155d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01562	a3 00 00 00 00	 mov	 DWORD PTR _glad_glMaterialiv, eax

; 1213 : 	glad_glPolygonStipple = (PFNGLPOLYGONSTIPPLEPROC)load("glPolygonStipple");

  01567	8b f4		 mov	 esi, esp
  01569	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@GIADEJGP@glPolygonStipple@
  0156e	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01571	83 c4 04	 add	 esp, 4
  01574	3b f4		 cmp	 esi, esp
  01576	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0157b	a3 00 00 00 00	 mov	 DWORD PTR _glad_glPolygonStipple, eax

; 1214 : 	glad_glShadeModel = (PFNGLSHADEMODELPROC)load("glShadeModel");

  01580	8b f4		 mov	 esi, esp
  01582	68 00 00 00 00	 push	 OFFSET ??_C@_0N@NALMFHKN@glShadeModel@
  01587	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0158a	83 c4 04	 add	 esp, 4
  0158d	3b f4		 cmp	 esi, esp
  0158f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01594	a3 00 00 00 00	 mov	 DWORD PTR _glad_glShadeModel, eax

; 1215 : 	glad_glTexEnvf = (PFNGLTEXENVFPROC)load("glTexEnvf");

  01599	8b f4		 mov	 esi, esp
  0159b	68 00 00 00 00	 push	 OFFSET ??_C@_09FCLLGECI@glTexEnvf@
  015a0	ff 55 08	 call	 DWORD PTR _load$[ebp]
  015a3	83 c4 04	 add	 esp, 4
  015a6	3b f4		 cmp	 esi, esp
  015a8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  015ad	a3 00 00 00 00	 mov	 DWORD PTR _glad_glTexEnvf, eax

; 1216 : 	glad_glTexEnvfv = (PFNGLTEXENVFVPROC)load("glTexEnvfv");

  015b2	8b f4		 mov	 esi, esp
  015b4	68 00 00 00 00	 push	 OFFSET ??_C@_0L@EMICMNOO@glTexEnvfv@
  015b9	ff 55 08	 call	 DWORD PTR _load$[ebp]
  015bc	83 c4 04	 add	 esp, 4
  015bf	3b f4		 cmp	 esi, esp
  015c1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  015c6	a3 00 00 00 00	 mov	 DWORD PTR _glad_glTexEnvfv, eax

; 1217 : 	glad_glTexEnvi = (PFNGLTEXENVIPROC)load("glTexEnvi");

  015cb	8b f4		 mov	 esi, esp
  015cd	68 00 00 00 00	 push	 OFFSET ??_C@_09NFCDHIOH@glTexEnvi@
  015d2	ff 55 08	 call	 DWORD PTR _load$[ebp]
  015d5	83 c4 04	 add	 esp, 4
  015d8	3b f4		 cmp	 esi, esp
  015da	e8 00 00 00 00	 call	 __RTC_CheckEsp
  015df	a3 00 00 00 00	 mov	 DWORD PTR _glad_glTexEnvi, eax

; 1218 : 	glad_glTexEnviv = (PFNGLTEXENVIVPROC)load("glTexEnviv");

  015e4	8b f4		 mov	 esi, esp
  015e6	68 00 00 00 00	 push	 OFFSET ??_C@_0L@EHNOIKND@glTexEnviv@
  015eb	ff 55 08	 call	 DWORD PTR _load$[ebp]
  015ee	83 c4 04	 add	 esp, 4
  015f1	3b f4		 cmp	 esi, esp
  015f3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  015f8	a3 00 00 00 00	 mov	 DWORD PTR _glad_glTexEnviv, eax

; 1219 : 	glad_glTexGend = (PFNGLTEXGENDPROC)load("glTexGend");

  015fd	8b f4		 mov	 esi, esp
  015ff	68 00 00 00 00	 push	 OFFSET ??_C@_09NPHJCAAD@glTexGend@
  01604	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01607	83 c4 04	 add	 esp, 4
  0160a	3b f4		 cmp	 esi, esp
  0160c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01611	a3 00 00 00 00	 mov	 DWORD PTR _glad_glTexGend, eax

; 1220 : 	glad_glTexGendv = (PFNGLTEXGENDVPROC)load("glTexGendv");

  01616	8b f4		 mov	 esi, esp
  01618	68 00 00 00 00	 push	 OFFSET ??_C@_0L@OALDPGOK@glTexGendv@
  0161d	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01620	83 c4 04	 add	 esp, 4
  01623	3b f4		 cmp	 esi, esp
  01625	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0162a	a3 00 00 00 00	 mov	 DWORD PTR _glad_glTexGendv, eax

; 1221 : 	glad_glTexGenf = (PFNGLTEXGENFPROC)load("glTexGenf");

  0162f	8b f4		 mov	 esi, esp
  01631	68 00 00 00 00	 push	 OFFSET ??_C@_09ONEPECIB@glTexGenf@
  01636	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01639	83 c4 04	 add	 esp, 4
  0163c	3b f4		 cmp	 esi, esp
  0163e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01643	a3 00 00 00 00	 mov	 DWORD PTR _glad_glTexGenf, eax

; 1222 : 	glad_glTexGenfv = (PFNGLTEXGENFVPROC)load("glTexGenfv");

  01648	8b f4		 mov	 esi, esp
  0164a	68 00 00 00 00	 push	 OFFSET ??_C@_0L@ODDHCCIE@glTexGenfv@
  0164f	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01652	83 c4 04	 add	 esp, 4
  01655	3b f4		 cmp	 esi, esp
  01657	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0165c	a3 00 00 00 00	 mov	 DWORD PTR _glad_glTexGenfv, eax

; 1223 : 	glad_glTexGeni = (PFNGLTEXGENIPROC)load("glTexGeni");

  01661	8b f4		 mov	 esi, esp
  01663	68 00 00 00 00	 push	 OFFSET ??_C@_09GKNHFOEO@glTexGeni@
  01668	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0166b	83 c4 04	 add	 esp, 4
  0166e	3b f4		 cmp	 esi, esp
  01670	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01675	a3 00 00 00 00	 mov	 DWORD PTR _glad_glTexGeni, eax

; 1224 : 	glad_glTexGeniv = (PFNGLTEXGENIVPROC)load("glTexGeniv");

  0167a	8b f4		 mov	 esi, esp
  0167c	68 00 00 00 00	 push	 OFFSET ??_C@_0L@OIGLGFLJ@glTexGeniv@
  01681	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01684	83 c4 04	 add	 esp, 4
  01687	3b f4		 cmp	 esi, esp
  01689	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0168e	a3 00 00 00 00	 mov	 DWORD PTR _glad_glTexGeniv, eax

; 1225 : 	glad_glFeedbackBuffer = (PFNGLFEEDBACKBUFFERPROC)load("glFeedbackBuffer");

  01693	8b f4		 mov	 esi, esp
  01695	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@COFAIKCN@glFeedbackBuffer@
  0169a	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0169d	83 c4 04	 add	 esp, 4
  016a0	3b f4		 cmp	 esi, esp
  016a2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  016a7	a3 00 00 00 00	 mov	 DWORD PTR _glad_glFeedbackBuffer, eax

; 1226 : 	glad_glSelectBuffer = (PFNGLSELECTBUFFERPROC)load("glSelectBuffer");

  016ac	8b f4		 mov	 esi, esp
  016ae	68 00 00 00 00	 push	 OFFSET ??_C@_0P@KACPMBCN@glSelectBuffer@
  016b3	ff 55 08	 call	 DWORD PTR _load$[ebp]
  016b6	83 c4 04	 add	 esp, 4
  016b9	3b f4		 cmp	 esi, esp
  016bb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  016c0	a3 00 00 00 00	 mov	 DWORD PTR _glad_glSelectBuffer, eax

; 1227 : 	glad_glRenderMode = (PFNGLRENDERMODEPROC)load("glRenderMode");

  016c5	8b f4		 mov	 esi, esp
  016c7	68 00 00 00 00	 push	 OFFSET ??_C@_0N@HCFJFDGP@glRenderMode@
  016cc	ff 55 08	 call	 DWORD PTR _load$[ebp]
  016cf	83 c4 04	 add	 esp, 4
  016d2	3b f4		 cmp	 esi, esp
  016d4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  016d9	a3 00 00 00 00	 mov	 DWORD PTR _glad_glRenderMode, eax

; 1228 : 	glad_glInitNames = (PFNGLINITNAMESPROC)load("glInitNames");

  016de	8b f4		 mov	 esi, esp
  016e0	68 00 00 00 00	 push	 OFFSET ??_C@_0M@LBOBLINN@glInitNames@
  016e5	ff 55 08	 call	 DWORD PTR _load$[ebp]
  016e8	83 c4 04	 add	 esp, 4
  016eb	3b f4		 cmp	 esi, esp
  016ed	e8 00 00 00 00	 call	 __RTC_CheckEsp
  016f2	a3 00 00 00 00	 mov	 DWORD PTR _glad_glInitNames, eax

; 1229 : 	glad_glLoadName = (PFNGLLOADNAMEPROC)load("glLoadName");

  016f7	8b f4		 mov	 esi, esp
  016f9	68 00 00 00 00	 push	 OFFSET ??_C@_0L@JFFJNAJA@glLoadName@
  016fe	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01701	83 c4 04	 add	 esp, 4
  01704	3b f4		 cmp	 esi, esp
  01706	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0170b	a3 00 00 00 00	 mov	 DWORD PTR _glad_glLoadName, eax

; 1230 : 	glad_glPassThrough = (PFNGLPASSTHROUGHPROC)load("glPassThrough");

  01710	8b f4		 mov	 esi, esp
  01712	68 00 00 00 00	 push	 OFFSET ??_C@_0O@KCIMMNEH@glPassThrough@
  01717	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0171a	83 c4 04	 add	 esp, 4
  0171d	3b f4		 cmp	 esi, esp
  0171f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01724	a3 00 00 00 00	 mov	 DWORD PTR _glad_glPassThrough, eax

; 1231 : 	glad_glPopName = (PFNGLPOPNAMEPROC)load("glPopName");

  01729	8b f4		 mov	 esi, esp
  0172b	68 00 00 00 00	 push	 OFFSET ??_C@_09IKDPIJOE@glPopName@
  01730	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01733	83 c4 04	 add	 esp, 4
  01736	3b f4		 cmp	 esi, esp
  01738	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0173d	a3 00 00 00 00	 mov	 DWORD PTR _glad_glPopName, eax

; 1232 : 	glad_glPushName = (PFNGLPUSHNAMEPROC)load("glPushName");

  01742	8b f4		 mov	 esi, esp
  01744	68 00 00 00 00	 push	 OFFSET ??_C@_0L@LFFFABIK@glPushName@
  01749	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0174c	83 c4 04	 add	 esp, 4
  0174f	3b f4		 cmp	 esi, esp
  01751	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01756	a3 00 00 00 00	 mov	 DWORD PTR _glad_glPushName, eax

; 1233 : 	glad_glClearAccum = (PFNGLCLEARACCUMPROC)load("glClearAccum");

  0175b	8b f4		 mov	 esi, esp
  0175d	68 00 00 00 00	 push	 OFFSET ??_C@_0N@OKAMEJMG@glClearAccum@
  01762	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01765	83 c4 04	 add	 esp, 4
  01768	3b f4		 cmp	 esi, esp
  0176a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0176f	a3 00 00 00 00	 mov	 DWORD PTR _glad_glClearAccum, eax

; 1234 : 	glad_glClearIndex = (PFNGLCLEARINDEXPROC)load("glClearIndex");

  01774	8b f4		 mov	 esi, esp
  01776	68 00 00 00 00	 push	 OFFSET ??_C@_0N@EIILHCMH@glClearIndex@
  0177b	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0177e	83 c4 04	 add	 esp, 4
  01781	3b f4		 cmp	 esi, esp
  01783	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01788	a3 00 00 00 00	 mov	 DWORD PTR _glad_glClearIndex, eax

; 1235 : 	glad_glIndexMask = (PFNGLINDEXMASKPROC)load("glIndexMask");

  0178d	8b f4		 mov	 esi, esp
  0178f	68 00 00 00 00	 push	 OFFSET ??_C@_0M@ONDJOEOA@glIndexMask@
  01794	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01797	83 c4 04	 add	 esp, 4
  0179a	3b f4		 cmp	 esi, esp
  0179c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  017a1	a3 00 00 00 00	 mov	 DWORD PTR _glad_glIndexMask, eax

; 1236 : 	glad_glAccum = (PFNGLACCUMPROC)load("glAccum");

  017a6	8b f4		 mov	 esi, esp
  017a8	68 00 00 00 00	 push	 OFFSET ??_C@_07LNIJJMEN@glAccum@
  017ad	ff 55 08	 call	 DWORD PTR _load$[ebp]
  017b0	83 c4 04	 add	 esp, 4
  017b3	3b f4		 cmp	 esi, esp
  017b5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  017ba	a3 00 00 00 00	 mov	 DWORD PTR _glad_glAccum, eax

; 1237 : 	glad_glPopAttrib = (PFNGLPOPATTRIBPROC)load("glPopAttrib");

  017bf	8b f4		 mov	 esi, esp
  017c1	68 00 00 00 00	 push	 OFFSET ??_C@_0M@LLNGAHMN@glPopAttrib@
  017c6	ff 55 08	 call	 DWORD PTR _load$[ebp]
  017c9	83 c4 04	 add	 esp, 4
  017cc	3b f4		 cmp	 esi, esp
  017ce	e8 00 00 00 00	 call	 __RTC_CheckEsp
  017d3	a3 00 00 00 00	 mov	 DWORD PTR _glad_glPopAttrib, eax

; 1238 : 	glad_glPushAttrib = (PFNGLPUSHATTRIBPROC)load("glPushAttrib");

  017d8	8b f4		 mov	 esi, esp
  017da	68 00 00 00 00	 push	 OFFSET ??_C@_0N@KDMLHFJM@glPushAttrib@
  017df	ff 55 08	 call	 DWORD PTR _load$[ebp]
  017e2	83 c4 04	 add	 esp, 4
  017e5	3b f4		 cmp	 esi, esp
  017e7	e8 00 00 00 00	 call	 __RTC_CheckEsp
  017ec	a3 00 00 00 00	 mov	 DWORD PTR _glad_glPushAttrib, eax

; 1239 : 	glad_glMap1d = (PFNGLMAP1DPROC)load("glMap1d");

  017f1	8b f4		 mov	 esi, esp
  017f3	68 00 00 00 00	 push	 OFFSET ??_C@_07FEHGGJHC@glMap1d@
  017f8	ff 55 08	 call	 DWORD PTR _load$[ebp]
  017fb	83 c4 04	 add	 esp, 4
  017fe	3b f4		 cmp	 esi, esp
  01800	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01805	a3 00 00 00 00	 mov	 DWORD PTR _glad_glMap1d, eax

; 1240 : 	glad_glMap1f = (PFNGLMAP1FPROC)load("glMap1f");

  0180a	8b f4		 mov	 esi, esp
  0180c	68 00 00 00 00	 push	 OFFSET ??_C@_07GGEAALPA@glMap1f@
  01811	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01814	83 c4 04	 add	 esp, 4
  01817	3b f4		 cmp	 esi, esp
  01819	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0181e	a3 00 00 00 00	 mov	 DWORD PTR _glad_glMap1f, eax

; 1241 : 	glad_glMap2d = (PFNGLMAP2DPROC)load("glMap2d");

  01823	8b f4		 mov	 esi, esp
  01825	68 00 00 00 00	 push	 OFFSET ??_C@_07FGDANHCL@glMap2d@
  0182a	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0182d	83 c4 04	 add	 esp, 4
  01830	3b f4		 cmp	 esi, esp
  01832	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01837	a3 00 00 00 00	 mov	 DWORD PTR _glad_glMap2d, eax

; 1242 : 	glad_glMap2f = (PFNGLMAP2FPROC)load("glMap2f");

  0183c	8b f4		 mov	 esi, esp
  0183e	68 00 00 00 00	 push	 OFFSET ??_C@_07GEAGLFKJ@glMap2f@
  01843	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01846	83 c4 04	 add	 esp, 4
  01849	3b f4		 cmp	 esi, esp
  0184b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01850	a3 00 00 00 00	 mov	 DWORD PTR _glad_glMap2f, eax

; 1243 : 	glad_glMapGrid1d = (PFNGLMAPGRID1DPROC)load("glMapGrid1d");

  01855	8b f4		 mov	 esi, esp
  01857	68 00 00 00 00	 push	 OFFSET ??_C@_0M@MNDKIDNO@glMapGrid1d@
  0185c	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0185f	83 c4 04	 add	 esp, 4
  01862	3b f4		 cmp	 esi, esp
  01864	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01869	a3 00 00 00 00	 mov	 DWORD PTR _glad_glMapGrid1d, eax

; 1244 : 	glad_glMapGrid1f = (PFNGLMAPGRID1FPROC)load("glMapGrid1f");

  0186e	8b f4		 mov	 esi, esp
  01870	68 00 00 00 00	 push	 OFFSET ??_C@_0M@PPAMOBFM@glMapGrid1f@
  01875	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01878	83 c4 04	 add	 esp, 4
  0187b	3b f4		 cmp	 esi, esp
  0187d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01882	a3 00 00 00 00	 mov	 DWORD PTR _glad_glMapGrid1f, eax

; 1245 : 	glad_glMapGrid2d = (PFNGLMAPGRID2DPROC)load("glMapGrid2d");

  01887	8b f4		 mov	 esi, esp
  01889	68 00 00 00 00	 push	 OFFSET ??_C@_0M@MPHMDNIH@glMapGrid2d@
  0188e	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01891	83 c4 04	 add	 esp, 4
  01894	3b f4		 cmp	 esi, esp
  01896	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0189b	a3 00 00 00 00	 mov	 DWORD PTR _glad_glMapGrid2d, eax

; 1246 : 	glad_glMapGrid2f = (PFNGLMAPGRID2FPROC)load("glMapGrid2f");

  018a0	8b f4		 mov	 esi, esp
  018a2	68 00 00 00 00	 push	 OFFSET ??_C@_0M@PNEKFPAF@glMapGrid2f@
  018a7	ff 55 08	 call	 DWORD PTR _load$[ebp]
  018aa	83 c4 04	 add	 esp, 4
  018ad	3b f4		 cmp	 esi, esp
  018af	e8 00 00 00 00	 call	 __RTC_CheckEsp
  018b4	a3 00 00 00 00	 mov	 DWORD PTR _glad_glMapGrid2f, eax

; 1247 : 	glad_glEvalCoord1d = (PFNGLEVALCOORD1DPROC)load("glEvalCoord1d");

  018b9	8b f4		 mov	 esi, esp
  018bb	68 00 00 00 00	 push	 OFFSET ??_C@_0O@FJBIDDKI@glEvalCoord1d@
  018c0	ff 55 08	 call	 DWORD PTR _load$[ebp]
  018c3	83 c4 04	 add	 esp, 4
  018c6	3b f4		 cmp	 esi, esp
  018c8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  018cd	a3 00 00 00 00	 mov	 DWORD PTR _glad_glEvalCoord1d, eax

; 1248 : 	glad_glEvalCoord1dv = (PFNGLEVALCOORD1DVPROC)load("glEvalCoord1dv");

  018d2	8b f4		 mov	 esi, esp
  018d4	68 00 00 00 00	 push	 OFFSET ??_C@_0P@KBDBONJJ@glEvalCoord1dv@
  018d9	ff 55 08	 call	 DWORD PTR _load$[ebp]
  018dc	83 c4 04	 add	 esp, 4
  018df	3b f4		 cmp	 esi, esp
  018e1	e8 00 00 00 00	 call	 __RTC_CheckEsp
  018e6	a3 00 00 00 00	 mov	 DWORD PTR _glad_glEvalCoord1dv, eax

; 1249 : 	glad_glEvalCoord1f = (PFNGLEVALCOORD1FPROC)load("glEvalCoord1f");

  018eb	8b f4		 mov	 esi, esp
  018ed	68 00 00 00 00	 push	 OFFSET ??_C@_0O@GLCOFBCK@glEvalCoord1f@
  018f2	ff 55 08	 call	 DWORD PTR _load$[ebp]
  018f5	83 c4 04	 add	 esp, 4
  018f8	3b f4		 cmp	 esi, esp
  018fa	e8 00 00 00 00	 call	 __RTC_CheckEsp
  018ff	a3 00 00 00 00	 mov	 DWORD PTR _glad_glEvalCoord1f, eax

; 1250 : 	glad_glEvalCoord1fv = (PFNGLEVALCOORD1FVPROC)load("glEvalCoord1fv");

  01904	8b f4		 mov	 esi, esp
  01906	68 00 00 00 00	 push	 OFFSET ??_C@_0P@KCLFDJPH@glEvalCoord1fv@
  0190b	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0190e	83 c4 04	 add	 esp, 4
  01911	3b f4		 cmp	 esi, esp
  01913	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01918	a3 00 00 00 00	 mov	 DWORD PTR _glad_glEvalCoord1fv, eax

; 1251 : 	glad_glEvalCoord2d = (PFNGLEVALCOORD2DPROC)load("glEvalCoord2d");

  0191d	8b f4		 mov	 esi, esp
  0191f	68 00 00 00 00	 push	 OFFSET ??_C@_0O@FLFOINPB@glEvalCoord2d@
  01924	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01927	83 c4 04	 add	 esp, 4
  0192a	3b f4		 cmp	 esi, esp
  0192c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01931	a3 00 00 00 00	 mov	 DWORD PTR _glad_glEvalCoord2d, eax

; 1252 : 	glad_glEvalCoord2dv = (PFNGLEVALCOORD2DVPROC)load("glEvalCoord2dv");

  01936	8b f4		 mov	 esi, esp
  01938	68 00 00 00 00	 push	 OFFSET ??_C@_0P@LDIEECHH@glEvalCoord2dv@
  0193d	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01940	83 c4 04	 add	 esp, 4
  01943	3b f4		 cmp	 esi, esp
  01945	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0194a	a3 00 00 00 00	 mov	 DWORD PTR _glad_glEvalCoord2dv, eax

; 1253 : 	glad_glEvalCoord2f = (PFNGLEVALCOORD2FPROC)load("glEvalCoord2f");

  0194f	8b f4		 mov	 esi, esp
  01951	68 00 00 00 00	 push	 OFFSET ??_C@_0O@GJGIOPHD@glEvalCoord2f@
  01956	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01959	83 c4 04	 add	 esp, 4
  0195c	3b f4		 cmp	 esi, esp
  0195e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01963	a3 00 00 00 00	 mov	 DWORD PTR _glad_glEvalCoord2f, eax

; 1254 : 	glad_glEvalCoord2fv = (PFNGLEVALCOORD2FVPROC)load("glEvalCoord2fv");

  01968	8b f4		 mov	 esi, esp
  0196a	68 00 00 00 00	 push	 OFFSET ??_C@_0P@LAAAJGBJ@glEvalCoord2fv@
  0196f	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01972	83 c4 04	 add	 esp, 4
  01975	3b f4		 cmp	 esi, esp
  01977	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0197c	a3 00 00 00 00	 mov	 DWORD PTR _glad_glEvalCoord2fv, eax

; 1255 : 	glad_glEvalMesh1 = (PFNGLEVALMESH1PROC)load("glEvalMesh1");

  01981	8b f4		 mov	 esi, esp
  01983	68 00 00 00 00	 push	 OFFSET ??_C@_0M@DCFEDLDA@glEvalMesh1@
  01988	ff 55 08	 call	 DWORD PTR _load$[ebp]
  0198b	83 c4 04	 add	 esp, 4
  0198e	3b f4		 cmp	 esi, esp
  01990	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01995	a3 00 00 00 00	 mov	 DWORD PTR _glad_glEvalMesh1, eax

; 1256 : 	glad_glEvalPoint1 = (PFNGLEVALPOINT1PROC)load("glEvalPoint1");

  0199a	8b f4		 mov	 esi, esp
  0199c	68 00 00 00 00	 push	 OFFSET ??_C@_0N@DOEOCCJJ@glEvalPoint1@
  019a1	ff 55 08	 call	 DWORD PTR _load$[ebp]
  019a4	83 c4 04	 add	 esp, 4
  019a7	3b f4		 cmp	 esi, esp
  019a9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  019ae	a3 00 00 00 00	 mov	 DWORD PTR _glad_glEvalPoint1, eax

; 1257 : 	glad_glEvalMesh2 = (PFNGLEVALMESH2PROC)load("glEvalMesh2");

  019b3	8b f4		 mov	 esi, esp
  019b5	68 00 00 00 00	 push	 OFFSET ??_C@_0M@BJHJGIPD@glEvalMesh2@
  019ba	ff 55 08	 call	 DWORD PTR _load$[ebp]
  019bd	83 c4 04	 add	 esp, 4
  019c0	3b f4		 cmp	 esi, esp
  019c2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  019c7	a3 00 00 00 00	 mov	 DWORD PTR _glad_glEvalMesh2, eax

; 1258 : 	glad_glEvalPoint2 = (PFNGLEVALPOINT2PROC)load("glEvalPoint2");

  019cc	8b f4		 mov	 esi, esp
  019ce	68 00 00 00 00	 push	 OFFSET ??_C@_0N@BFGDHBFK@glEvalPoint2@
  019d3	ff 55 08	 call	 DWORD PTR _load$[ebp]
  019d6	83 c4 04	 add	 esp, 4
  019d9	3b f4		 cmp	 esi, esp
  019db	e8 00 00 00 00	 call	 __RTC_CheckEsp
  019e0	a3 00 00 00 00	 mov	 DWORD PTR _glad_glEvalPoint2, eax

; 1259 : 	glad_glAlphaFunc = (PFNGLALPHAFUNCPROC)load("glAlphaFunc");

  019e5	8b f4		 mov	 esi, esp
  019e7	68 00 00 00 00	 push	 OFFSET ??_C@_0M@BJGLMKCC@glAlphaFunc@
  019ec	ff 55 08	 call	 DWORD PTR _load$[ebp]
  019ef	83 c4 04	 add	 esp, 4
  019f2	3b f4		 cmp	 esi, esp
  019f4	e8 00 00 00 00	 call	 __RTC_CheckEsp
  019f9	a3 00 00 00 00	 mov	 DWORD PTR _glad_glAlphaFunc, eax

; 1260 : 	glad_glPixelZoom = (PFNGLPIXELZOOMPROC)load("glPixelZoom");

  019fe	8b f4		 mov	 esi, esp
  01a00	68 00 00 00 00	 push	 OFFSET ??_C@_0M@JAMJIGNB@glPixelZoom@
  01a05	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01a08	83 c4 04	 add	 esp, 4
  01a0b	3b f4		 cmp	 esi, esp
  01a0d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01a12	a3 00 00 00 00	 mov	 DWORD PTR _glad_glPixelZoom, eax

; 1261 : 	glad_glPixelTransferf = (PFNGLPIXELTRANSFERFPROC)load("glPixelTransferf");

  01a17	8b f4		 mov	 esi, esp
  01a19	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@HFCIPEN@glPixelTransferf@
  01a1e	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01a21	83 c4 04	 add	 esp, 4
  01a24	3b f4		 cmp	 esi, esp
  01a26	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01a2b	a3 00 00 00 00	 mov	 DWORD PTR _glad_glPixelTransferf, eax

; 1262 : 	glad_glPixelTransferi = (PFNGLPIXELTRANSFERIPROC)load("glPixelTransferi");

  01a30	8b f4		 mov	 esi, esp
  01a32	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@IAMKJDIC@glPixelTransferi@
  01a37	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01a3a	83 c4 04	 add	 esp, 4
  01a3d	3b f4		 cmp	 esi, esp
  01a3f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01a44	a3 00 00 00 00	 mov	 DWORD PTR _glad_glPixelTransferi, eax

; 1263 : 	glad_glPixelMapfv = (PFNGLPIXELMAPFVPROC)load("glPixelMapfv");

  01a49	8b f4		 mov	 esi, esp
  01a4b	68 00 00 00 00	 push	 OFFSET ??_C@_0N@CNONNBNO@glPixelMapfv@
  01a50	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01a53	83 c4 04	 add	 esp, 4
  01a56	3b f4		 cmp	 esi, esp
  01a58	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01a5d	a3 00 00 00 00	 mov	 DWORD PTR _glad_glPixelMapfv, eax

; 1264 : 	glad_glPixelMapuiv = (PFNGLPIXELMAPUIVPROC)load("glPixelMapuiv");

  01a62	8b f4		 mov	 esi, esp
  01a64	68 00 00 00 00	 push	 OFFSET ??_C@_0O@ENPFNAEO@glPixelMapuiv@
  01a69	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01a6c	83 c4 04	 add	 esp, 4
  01a6f	3b f4		 cmp	 esi, esp
  01a71	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01a76	a3 00 00 00 00	 mov	 DWORD PTR _glad_glPixelMapuiv, eax

; 1265 : 	glad_glPixelMapusv = (PFNGLPIXELMAPUSVPROC)load("glPixelMapusv");

  01a7b	8b f4		 mov	 esi, esp
  01a7d	68 00 00 00 00	 push	 OFFSET ??_C@_0O@FMEEPGOI@glPixelMapusv@
  01a82	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01a85	83 c4 04	 add	 esp, 4
  01a88	3b f4		 cmp	 esi, esp
  01a8a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01a8f	a3 00 00 00 00	 mov	 DWORD PTR _glad_glPixelMapusv, eax

; 1266 : 	glad_glCopyPixels = (PFNGLCOPYPIXELSPROC)load("glCopyPixels");

  01a94	8b f4		 mov	 esi, esp
  01a96	68 00 00 00 00	 push	 OFFSET ??_C@_0N@OACCOOE@glCopyPixels@
  01a9b	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01a9e	83 c4 04	 add	 esp, 4
  01aa1	3b f4		 cmp	 esi, esp
  01aa3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01aa8	a3 00 00 00 00	 mov	 DWORD PTR _glad_glCopyPixels, eax

; 1267 : 	glad_glDrawPixels = (PFNGLDRAWPIXELSPROC)load("glDrawPixels");

  01aad	8b f4		 mov	 esi, esp
  01aaf	68 00 00 00 00	 push	 OFFSET ??_C@_0N@FLFIHFDP@glDrawPixels@
  01ab4	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01ab7	83 c4 04	 add	 esp, 4
  01aba	3b f4		 cmp	 esi, esp
  01abc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01ac1	a3 00 00 00 00	 mov	 DWORD PTR _glad_glDrawPixels, eax

; 1268 : 	glad_glGetClipPlane = (PFNGLGETCLIPPLANEPROC)load("glGetClipPlane");

  01ac6	8b f4		 mov	 esi, esp
  01ac8	68 00 00 00 00	 push	 OFFSET ??_C@_0P@MMMNLMC@glGetClipPlane@
  01acd	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01ad0	83 c4 04	 add	 esp, 4
  01ad3	3b f4		 cmp	 esi, esp
  01ad5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01ada	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetClipPlane, eax

; 1269 : 	glad_glGetLightfv = (PFNGLGETLIGHTFVPROC)load("glGetLightfv");

  01adf	8b f4		 mov	 esi, esp
  01ae1	68 00 00 00 00	 push	 OFFSET ??_C@_0N@MGGMJGKA@glGetLightfv@
  01ae6	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01ae9	83 c4 04	 add	 esp, 4
  01aec	3b f4		 cmp	 esi, esp
  01aee	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01af3	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetLightfv, eax

; 1270 : 	glad_glGetLightiv = (PFNGLGETLIGHTIVPROC)load("glGetLightiv");

  01af8	8b f4		 mov	 esi, esp
  01afa	68 00 00 00 00	 push	 OFFSET ??_C@_0N@MNDANBJN@glGetLightiv@
  01aff	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01b02	83 c4 04	 add	 esp, 4
  01b05	3b f4		 cmp	 esi, esp
  01b07	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01b0c	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetLightiv, eax

; 1271 : 	glad_glGetMapdv = (PFNGLGETMAPDVPROC)load("glGetMapdv");

  01b11	8b f4		 mov	 esi, esp
  01b13	68 00 00 00 00	 push	 OFFSET ??_C@_0L@FGIDEHCA@glGetMapdv@
  01b18	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01b1b	83 c4 04	 add	 esp, 4
  01b1e	3b f4		 cmp	 esi, esp
  01b20	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01b25	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetMapdv, eax

; 1272 : 	glad_glGetMapfv = (PFNGLGETMAPFVPROC)load("glGetMapfv");

  01b2a	8b f4		 mov	 esi, esp
  01b2c	68 00 00 00 00	 push	 OFFSET ??_C@_0L@FFAHJDEO@glGetMapfv@
  01b31	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01b34	83 c4 04	 add	 esp, 4
  01b37	3b f4		 cmp	 esi, esp
  01b39	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01b3e	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetMapfv, eax

; 1273 : 	glad_glGetMapiv = (PFNGLGETMAPIVPROC)load("glGetMapiv");

  01b43	8b f4		 mov	 esi, esp
  01b45	68 00 00 00 00	 push	 OFFSET ??_C@_0L@FOFLNEHD@glGetMapiv@
  01b4a	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01b4d	83 c4 04	 add	 esp, 4
  01b50	3b f4		 cmp	 esi, esp
  01b52	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01b57	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetMapiv, eax

; 1274 : 	glad_glGetMaterialfv = (PFNGLGETMATERIALFVPROC)load("glGetMaterialfv");

  01b5c	8b f4		 mov	 esi, esp
  01b5e	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@GCPPEEDM@glGetMaterialfv@
  01b63	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01b66	83 c4 04	 add	 esp, 4
  01b69	3b f4		 cmp	 esi, esp
  01b6b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01b70	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetMaterialfv, eax

; 1275 : 	glad_glGetMaterialiv = (PFNGLGETMATERIALIVPROC)load("glGetMaterialiv");

  01b75	8b f4		 mov	 esi, esp
  01b77	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@GJKDADAB@glGetMaterialiv@
  01b7c	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01b7f	83 c4 04	 add	 esp, 4
  01b82	3b f4		 cmp	 esi, esp
  01b84	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01b89	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetMaterialiv, eax

; 1276 : 	glad_glGetPixelMapfv = (PFNGLGETPIXELMAPFVPROC)load("glGetPixelMapfv");

  01b8e	8b f4		 mov	 esi, esp
  01b90	68 00 00 00 00	 push	 OFFSET ??_C@_0BA@EDGNDGIE@glGetPixelMapfv@
  01b95	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01b98	83 c4 04	 add	 esp, 4
  01b9b	3b f4		 cmp	 esi, esp
  01b9d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01ba2	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetPixelMapfv, eax

; 1277 : 	glad_glGetPixelMapuiv = (PFNGLGETPIXELMAPUIVPROC)load("glGetPixelMapuiv");

  01ba7	8b f4		 mov	 esi, esp
  01ba9	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@MGCFOIED@glGetPixelMapuiv@
  01bae	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01bb1	83 c4 04	 add	 esp, 4
  01bb4	3b f4		 cmp	 esi, esp
  01bb6	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01bbb	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetPixelMapuiv, eax

; 1278 : 	glad_glGetPixelMapusv = (PFNGLGETPIXELMAPUSVPROC)load("glGetPixelMapusv");

  01bc0	8b f4		 mov	 esi, esp
  01bc2	68 00 00 00 00	 push	 OFFSET ??_C@_0BB@NHJEMOOF@glGetPixelMapusv@
  01bc7	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01bca	83 c4 04	 add	 esp, 4
  01bcd	3b f4		 cmp	 esi, esp
  01bcf	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01bd4	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetPixelMapusv, eax

; 1279 : 	glad_glGetPolygonStipple = (PFNGLGETPOLYGONSTIPPLEPROC)load("glGetPolygonStipple");

  01bd9	8b f4		 mov	 esi, esp
  01bdb	68 00 00 00 00	 push	 OFFSET ??_C@_0BE@PBJHLEJI@glGetPolygonStipple@
  01be0	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01be3	83 c4 04	 add	 esp, 4
  01be6	3b f4		 cmp	 esi, esp
  01be8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01bed	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetPolygonStipple, eax

; 1280 : 	glad_glGetTexEnvfv = (PFNGLGETTEXENVFVPROC)load("glGetTexEnvfv");

  01bf2	8b f4		 mov	 esi, esp
  01bf4	68 00 00 00 00	 push	 OFFSET ??_C@_0O@KDAJGFCL@glGetTexEnvfv@
  01bf9	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01bfc	83 c4 04	 add	 esp, 4
  01bff	3b f4		 cmp	 esi, esp
  01c01	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01c06	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetTexEnvfv, eax

; 1281 : 	glad_glGetTexEnviv = (PFNGLGETTEXENVIVPROC)load("glGetTexEnviv");

  01c0b	8b f4		 mov	 esi, esp
  01c0d	68 00 00 00 00	 push	 OFFSET ??_C@_0O@KIFFCCBG@glGetTexEnviv@
  01c12	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01c15	83 c4 04	 add	 esp, 4
  01c18	3b f4		 cmp	 esi, esp
  01c1a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01c1f	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetTexEnviv, eax

; 1282 : 	glad_glGetTexGendv = (PFNGLGETTEXGENDVPROC)load("glGetTexGendv");

  01c24	8b f4		 mov	 esi, esp
  01c26	68 00 00 00 00	 push	 OFFSET ??_C@_0O@PDIFOCP@glGetTexGendv@
  01c2b	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01c2e	83 c4 04	 add	 esp, 4
  01c31	3b f4		 cmp	 esi, esp
  01c33	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01c38	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetTexGendv, eax

; 1283 : 	glad_glGetTexGenfv = (PFNGLGETTEXGENFVPROC)load("glGetTexGenfv");

  01c3d	8b f4		 mov	 esi, esp
  01c3f	68 00 00 00 00	 push	 OFFSET ??_C@_0O@MLMIKEB@glGetTexGenfv@
  01c44	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01c47	83 c4 04	 add	 esp, 4
  01c4a	3b f4		 cmp	 esi, esp
  01c4c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01c51	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetTexGenfv, eax

; 1284 : 	glad_glGetTexGeniv = (PFNGLGETTEXGENIVPROC)load("glGetTexGeniv");

  01c56	8b f4		 mov	 esi, esp
  01c58	68 00 00 00 00	 push	 OFFSET ??_C@_0O@HOAMNHM@glGetTexGeniv@
  01c5d	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01c60	83 c4 04	 add	 esp, 4
  01c63	3b f4		 cmp	 esi, esp
  01c65	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01c6a	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetTexGeniv, eax

; 1285 : 	glad_glIsList = (PFNGLISLISTPROC)load("glIsList");

  01c6f	8b f4		 mov	 esi, esp
  01c71	68 00 00 00 00	 push	 OFFSET ??_C@_08DMFMJKDH@glIsList@
  01c76	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01c79	83 c4 04	 add	 esp, 4
  01c7c	3b f4		 cmp	 esi, esp
  01c7e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01c83	a3 00 00 00 00	 mov	 DWORD PTR _glad_glIsList, eax

; 1286 : 	glad_glFrustum = (PFNGLFRUSTUMPROC)load("glFrustum");

  01c88	8b f4		 mov	 esi, esp
  01c8a	68 00 00 00 00	 push	 OFFSET ??_C@_09ICLFHOKP@glFrustum@
  01c8f	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01c92	83 c4 04	 add	 esp, 4
  01c95	3b f4		 cmp	 esi, esp
  01c97	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01c9c	a3 00 00 00 00	 mov	 DWORD PTR _glad_glFrustum, eax

; 1287 : 	glad_glLoadIdentity = (PFNGLLOADIDENTITYPROC)load("glLoadIdentity");

  01ca1	8b f4		 mov	 esi, esp
  01ca3	68 00 00 00 00	 push	 OFFSET ??_C@_0P@EJAFHEPO@glLoadIdentity@
  01ca8	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01cab	83 c4 04	 add	 esp, 4
  01cae	3b f4		 cmp	 esi, esp
  01cb0	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01cb5	a3 00 00 00 00	 mov	 DWORD PTR _glad_glLoadIdentity, eax

; 1288 : 	glad_glLoadMatrixf = (PFNGLLOADMATRIXFPROC)load("glLoadMatrixf");

  01cba	8b f4		 mov	 esi, esp
  01cbc	68 00 00 00 00	 push	 OFFSET ??_C@_0O@DJGBMGEI@glLoadMatrixf@
  01cc1	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01cc4	83 c4 04	 add	 esp, 4
  01cc7	3b f4		 cmp	 esi, esp
  01cc9	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01cce	a3 00 00 00 00	 mov	 DWORD PTR _glad_glLoadMatrixf, eax

; 1289 : 	glad_glLoadMatrixd = (PFNGLLOADMATRIXDPROC)load("glLoadMatrixd");

  01cd3	8b f4		 mov	 esi, esp
  01cd5	68 00 00 00 00	 push	 OFFSET ??_C@_0O@LFHKEMK@glLoadMatrixd@
  01cda	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01cdd	83 c4 04	 add	 esp, 4
  01ce0	3b f4		 cmp	 esi, esp
  01ce2	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01ce7	a3 00 00 00 00	 mov	 DWORD PTR _glad_glLoadMatrixd, eax

; 1290 : 	glad_glMatrixMode = (PFNGLMATRIXMODEPROC)load("glMatrixMode");

  01cec	8b f4		 mov	 esi, esp
  01cee	68 00 00 00 00	 push	 OFFSET ??_C@_0N@KDLNHKEJ@glMatrixMode@
  01cf3	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01cf6	83 c4 04	 add	 esp, 4
  01cf9	3b f4		 cmp	 esi, esp
  01cfb	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01d00	a3 00 00 00 00	 mov	 DWORD PTR _glad_glMatrixMode, eax

; 1291 : 	glad_glMultMatrixf = (PFNGLMULTMATRIXFPROC)load("glMultMatrixf");

  01d05	8b f4		 mov	 esi, esp
  01d07	68 00 00 00 00	 push	 OFFSET ??_C@_0O@LHKDNPKJ@glMultMatrixf@
  01d0c	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01d0f	83 c4 04	 add	 esp, 4
  01d12	3b f4		 cmp	 esi, esp
  01d14	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01d19	a3 00 00 00 00	 mov	 DWORD PTR _glad_glMultMatrixf, eax

; 1292 : 	glad_glMultMatrixd = (PFNGLMULTMATRIXDPROC)load("glMultMatrixd");

  01d1e	8b f4		 mov	 esi, esp
  01d20	68 00 00 00 00	 push	 OFFSET ??_C@_0O@IFJFLNCL@glMultMatrixd@
  01d25	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01d28	83 c4 04	 add	 esp, 4
  01d2b	3b f4		 cmp	 esi, esp
  01d2d	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01d32	a3 00 00 00 00	 mov	 DWORD PTR _glad_glMultMatrixd, eax

; 1293 : 	glad_glOrtho = (PFNGLORTHOPROC)load("glOrtho");

  01d37	8b f4		 mov	 esi, esp
  01d39	68 00 00 00 00	 push	 OFFSET ??_C@_07DBAFHOII@glOrtho@
  01d3e	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01d41	83 c4 04	 add	 esp, 4
  01d44	3b f4		 cmp	 esi, esp
  01d46	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01d4b	a3 00 00 00 00	 mov	 DWORD PTR _glad_glOrtho, eax

; 1294 : 	glad_glPopMatrix = (PFNGLPOPMATRIXPROC)load("glPopMatrix");

  01d50	8b f4		 mov	 esi, esp
  01d52	68 00 00 00 00	 push	 OFFSET ??_C@_0M@JPEAAEEK@glPopMatrix@
  01d57	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01d5a	83 c4 04	 add	 esp, 4
  01d5d	3b f4		 cmp	 esi, esp
  01d5f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01d64	a3 00 00 00 00	 mov	 DWORD PTR _glad_glPopMatrix, eax

; 1295 : 	glad_glPushMatrix = (PFNGLPUSHMATRIXPROC)load("glPushMatrix");

  01d69	8b f4		 mov	 esi, esp
  01d6b	68 00 00 00 00	 push	 OFFSET ??_C@_0N@IHFNHGBL@glPushMatrix@
  01d70	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01d73	83 c4 04	 add	 esp, 4
  01d76	3b f4		 cmp	 esi, esp
  01d78	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01d7d	a3 00 00 00 00	 mov	 DWORD PTR _glad_glPushMatrix, eax

; 1296 : 	glad_glRotated = (PFNGLROTATEDPROC)load("glRotated");

  01d82	8b f4		 mov	 esi, esp
  01d84	68 00 00 00 00	 push	 OFFSET ??_C@_09GANFLDAO@glRotated@
  01d89	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01d8c	83 c4 04	 add	 esp, 4
  01d8f	3b f4		 cmp	 esi, esp
  01d91	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01d96	a3 00 00 00 00	 mov	 DWORD PTR _glad_glRotated, eax

; 1297 : 	glad_glRotatef = (PFNGLROTATEFPROC)load("glRotatef");

  01d9b	8b f4		 mov	 esi, esp
  01d9d	68 00 00 00 00	 push	 OFFSET ??_C@_09FCODNBIM@glRotatef@
  01da2	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01da5	83 c4 04	 add	 esp, 4
  01da8	3b f4		 cmp	 esi, esp
  01daa	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01daf	a3 00 00 00 00	 mov	 DWORD PTR _glad_glRotatef, eax

; 1298 : 	glad_glScaled = (PFNGLSCALEDPROC)load("glScaled");

  01db4	8b f4		 mov	 esi, esp
  01db6	68 00 00 00 00	 push	 OFFSET ??_C@_08KAMCINDI@glScaled@
  01dbb	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01dbe	83 c4 04	 add	 esp, 4
  01dc1	3b f4		 cmp	 esi, esp
  01dc3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01dc8	a3 00 00 00 00	 mov	 DWORD PTR _glad_glScaled, eax

; 1299 : 	glad_glScalef = (PFNGLSCALEFPROC)load("glScalef");

  01dcd	8b f4		 mov	 esi, esp
  01dcf	68 00 00 00 00	 push	 OFFSET ??_C@_08JCPEOPLK@glScalef@
  01dd4	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01dd7	83 c4 04	 add	 esp, 4
  01dda	3b f4		 cmp	 esi, esp
  01ddc	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01de1	a3 00 00 00 00	 mov	 DWORD PTR _glad_glScalef, eax

; 1300 : 	glad_glTranslated = (PFNGLTRANSLATEDPROC)load("glTranslated");

  01de6	8b f4		 mov	 esi, esp
  01de8	68 00 00 00 00	 push	 OFFSET ??_C@_0N@LHMFFDFG@glTranslated@
  01ded	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01df0	83 c4 04	 add	 esp, 4
  01df3	3b f4		 cmp	 esi, esp
  01df5	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01dfa	a3 00 00 00 00	 mov	 DWORD PTR _glad_glTranslated, eax

; 1301 : 	glad_glTranslatef = (PFNGLTRANSLATEFPROC)load("glTranslatef");

  01dff	8b f4		 mov	 esi, esp
  01e01	68 00 00 00 00	 push	 OFFSET ??_C@_0N@IFPDDBNE@glTranslatef@
  01e06	ff 55 08	 call	 DWORD PTR _load$[ebp]
  01e09	83 c4 04	 add	 esp, 4
  01e0c	3b f4		 cmp	 esi, esp
  01e0e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01e13	a3 00 00 00 00	 mov	 DWORD PTR _glad_glTranslatef, eax
$LN1@load_GL_VE:

; 1302 : }

  01e18	5f		 pop	 edi
  01e19	5e		 pop	 esi
  01e1a	5b		 pop	 ebx
  01e1b	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  01e21	3b ec		 cmp	 ebp, esp
  01e23	e8 00 00 00 00	 call	 __RTC_CheckEsp
  01e28	8b e5		 mov	 esp, ebp
  01e2a	5d		 pop	 ebp
  01e2b	c3		 ret	 0
_load_GL_VERSION_1_0 ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\Light\source\repos\Spacemonster\Spacemonster-code\glad\glad.c
;	COMDAT _free_exts
_TEXT	SEGMENT
_index$1 = -8						; size = 4
_free_exts PROC						; COMDAT

; 206  : static void free_exts(void) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET __550F0BDD_glad@c
  00023	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 207  :     if (exts_i != NULL) {

  00028	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _exts_i, 0
  0002f	74 60		 je	 SHORT $LN1@free_exts

; 208  :         int index;
; 209  :         for(index = 0; index < num_exts_i; index++) {

  00031	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _index$1[ebp], 0
  00038	eb 09		 jmp	 SHORT $LN4@free_exts
$LN2@free_exts:
  0003a	8b 45 f8	 mov	 eax, DWORD PTR _index$1[ebp]
  0003d	83 c0 01	 add	 eax, 1
  00040	89 45 f8	 mov	 DWORD PTR _index$1[ebp], eax
$LN4@free_exts:
  00043	8b 45 f8	 mov	 eax, DWORD PTR _index$1[ebp]
  00046	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR _num_exts_i
  0004c	7d 21		 jge	 SHORT $LN3@free_exts

; 210  :             free((char *)exts_i[index]);

  0004e	8b f4		 mov	 esi, esp
  00050	8b 45 f8	 mov	 eax, DWORD PTR _index$1[ebp]
  00053	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _exts_i
  00059	8b 14 81	 mov	 edx, DWORD PTR [ecx+eax*4]
  0005c	52		 push	 edx
  0005d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__free
  00063	83 c4 04	 add	 esp, 4
  00066	3b f4		 cmp	 esi, esp
  00068	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 211  :         }

  0006d	eb cb		 jmp	 SHORT $LN2@free_exts
$LN3@free_exts:

; 212  :         free((void *)exts_i);

  0006f	8b f4		 mov	 esi, esp
  00071	a1 00 00 00 00	 mov	 eax, DWORD PTR _exts_i
  00076	50		 push	 eax
  00077	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__free
  0007d	83 c4 04	 add	 esp, 4
  00080	3b f4		 cmp	 esi, esp
  00082	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 213  :         exts_i = NULL;

  00087	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR _exts_i, 0
$LN1@free_exts:

; 214  :     }
; 215  : }

  00091	5f		 pop	 edi
  00092	5e		 pop	 esi
  00093	5b		 pop	 ebx
  00094	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0009a	3b ec		 cmp	 ebp, esp
  0009c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a1	8b e5		 mov	 esp, ebp
  000a3	5d		 pop	 ebp
  000a4	c3		 ret	 0
_free_exts ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\Light\source\repos\Spacemonster\Spacemonster-code\glad\glad.c
;	COMDAT _get_exts
_TEXT	SEGMENT
_local_str$1 = -44					; size = 4
_len$2 = -32						; size = 4
_gl_str_tmp$3 = -20					; size = 4
_index$4 = -8						; size = 4
_get_exts PROC						; COMDAT

; 172  : static int get_exts(void) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec f0 00 00
	00		 sub	 esp, 240		; 000000f0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 10 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-240]
  00012	b9 3c 00 00 00	 mov	 ecx, 60			; 0000003cH
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET __550F0BDD_glad@c
  00023	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 173  : #ifdef _GLAD_IS_SOME_NEW_VERSION
; 174  :     if(max_loaded_major < 3) {

  00028	83 3d 00 00 00
	00 03		 cmp	 DWORD PTR _max_loaded_major, 3
  0002f	7d 1e		 jge	 SHORT $LN5@get_exts

; 175  : #endif
; 176  :         exts = (const char *)glGetString(GL_EXTENSIONS);

  00031	8b f4		 mov	 esi, esp
  00033	68 03 1f 00 00	 push	 7939			; 00001f03H
  00038	ff 15 00 00 00
	00		 call	 DWORD PTR _glad_glGetString
  0003e	3b f4		 cmp	 esi, esp
  00040	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00045	a3 00 00 00 00	 mov	 DWORD PTR _exts, eax

; 177  : #ifdef _GLAD_IS_SOME_NEW_VERSION
; 178  :     } else {

  0004a	e9 fd 00 00 00	 jmp	 $LN6@get_exts
$LN5@get_exts:

; 179  :         unsigned int index;
; 180  : 
; 181  :         num_exts_i = 0;

  0004f	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR _num_exts_i, 0

; 182  :         glGetIntegerv(GL_NUM_EXTENSIONS, &num_exts_i);

  00059	8b f4		 mov	 esi, esp
  0005b	68 00 00 00 00	 push	 OFFSET _num_exts_i
  00060	68 1d 82 00 00	 push	 33309			; 0000821dH
  00065	ff 15 00 00 00
	00		 call	 DWORD PTR _glad_glGetIntegerv
  0006b	3b f4		 cmp	 esi, esp
  0006d	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 183  :         if (num_exts_i > 0) {

  00072	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _num_exts_i, 0
  00079	7e 2d		 jle	 SHORT $LN7@get_exts

; 184  :             exts_i = (char **)malloc((size_t)num_exts_i * (sizeof *exts_i));

  0007b	33 c9		 xor	 ecx, ecx
  0007d	a1 00 00 00 00	 mov	 eax, DWORD PTR _num_exts_i
  00082	ba 04 00 00 00	 mov	 edx, 4
  00087	f7 e2		 mul	 edx
  00089	0f 90 c1	 seto	 cl
  0008c	f7 d9		 neg	 ecx
  0008e	0b c8		 or	 ecx, eax
  00090	8b f4		 mov	 esi, esp
  00092	51		 push	 ecx
  00093	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__malloc
  00099	83 c4 04	 add	 esp, 4
  0009c	3b f4		 cmp	 esi, esp
  0009e	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a3	a3 00 00 00 00	 mov	 DWORD PTR _exts_i, eax
$LN7@get_exts:

; 185  :         }
; 186  : 
; 187  :         if (exts_i == NULL) {

  000a8	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _exts_i, 0
  000af	75 07		 jne	 SHORT $LN8@get_exts

; 188  :             return 0;

  000b1	33 c0		 xor	 eax, eax
  000b3	e9 99 00 00 00	 jmp	 $LN1@get_exts
$LN8@get_exts:

; 189  :         }
; 190  : 
; 191  :         for(index = 0; index < (unsigned)num_exts_i; index++) {

  000b8	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _index$4[ebp], 0
  000bf	eb 09		 jmp	 SHORT $LN4@get_exts
$LN2@get_exts:
  000c1	8b 45 f8	 mov	 eax, DWORD PTR _index$4[ebp]
  000c4	83 c0 01	 add	 eax, 1
  000c7	89 45 f8	 mov	 DWORD PTR _index$4[ebp], eax
$LN4@get_exts:
  000ca	8b 45 f8	 mov	 eax, DWORD PTR _index$4[ebp]
  000cd	3b 05 00 00 00
	00		 cmp	 eax, DWORD PTR _num_exts_i
  000d3	73 77		 jae	 SHORT $LN6@get_exts

; 192  :             const char *gl_str_tmp = (const char*)glGetStringi(GL_EXTENSIONS, index);

  000d5	8b f4		 mov	 esi, esp
  000d7	8b 45 f8	 mov	 eax, DWORD PTR _index$4[ebp]
  000da	50		 push	 eax
  000db	68 03 1f 00 00	 push	 7939			; 00001f03H
  000e0	ff 15 00 00 00
	00		 call	 DWORD PTR _glad_glGetStringi
  000e6	3b f4		 cmp	 esi, esp
  000e8	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000ed	89 45 ec	 mov	 DWORD PTR _gl_str_tmp$3[ebp], eax

; 193  :             size_t len = strlen(gl_str_tmp);

  000f0	8b 45 ec	 mov	 eax, DWORD PTR _gl_str_tmp$3[ebp]
  000f3	50		 push	 eax
  000f4	e8 00 00 00 00	 call	 _strlen
  000f9	83 c4 04	 add	 esp, 4
  000fc	89 45 e0	 mov	 DWORD PTR _len$2[ebp], eax

; 194  : 
; 195  :             char *local_str = (char*)malloc((len+1) * sizeof(char));

  000ff	8b 45 e0	 mov	 eax, DWORD PTR _len$2[ebp]
  00102	83 c0 01	 add	 eax, 1
  00105	8b f4		 mov	 esi, esp
  00107	50		 push	 eax
  00108	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__malloc
  0010e	83 c4 04	 add	 esp, 4
  00111	3b f4		 cmp	 esi, esp
  00113	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00118	89 45 d4	 mov	 DWORD PTR _local_str$1[ebp], eax

; 196  :             if(local_str != NULL) {

  0011b	83 7d d4 00	 cmp	 DWORD PTR _local_str$1[ebp], 0
  0011f	74 17		 je	 SHORT $LN9@get_exts

; 197  :                 memcpy(local_str, gl_str_tmp, (len+1) * sizeof(char));

  00121	8b 45 e0	 mov	 eax, DWORD PTR _len$2[ebp]
  00124	83 c0 01	 add	 eax, 1
  00127	50		 push	 eax
  00128	8b 4d ec	 mov	 ecx, DWORD PTR _gl_str_tmp$3[ebp]
  0012b	51		 push	 ecx
  0012c	8b 55 d4	 mov	 edx, DWORD PTR _local_str$1[ebp]
  0012f	52		 push	 edx
  00130	e8 00 00 00 00	 call	 _memcpy
  00135	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN9@get_exts:

; 198  :             }
; 199  :             exts_i[index] = local_str;

  00138	8b 45 f8	 mov	 eax, DWORD PTR _index$4[ebp]
  0013b	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _exts_i
  00141	8b 55 d4	 mov	 edx, DWORD PTR _local_str$1[ebp]
  00144	89 14 81	 mov	 DWORD PTR [ecx+eax*4], edx

; 200  :         }

  00147	e9 75 ff ff ff	 jmp	 $LN2@get_exts
$LN6@get_exts:

; 201  :     }
; 202  : #endif
; 203  :     return 1;

  0014c	b8 01 00 00 00	 mov	 eax, 1
$LN1@get_exts:

; 204  : }

  00151	5f		 pop	 edi
  00152	5e		 pop	 esi
  00153	5b		 pop	 ebx
  00154	81 c4 f0 00 00
	00		 add	 esp, 240		; 000000f0H
  0015a	3b ec		 cmp	 ebp, esp
  0015c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00161	8b e5		 mov	 esp, ebp
  00163	5d		 pop	 ebp
  00164	c3		 ret	 0
_get_exts ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\Light\source\repos\Spacemonster\Spacemonster-code\glad\glad.c
;	COMDAT _close_gl
_TEXT	SEGMENT
_close_gl PROC						; COMDAT

; 72   : void close_gl(void) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET __550F0BDD_glad@c
  00023	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 73   :     if(libGL != NULL) {

  00028	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _libGL, 0
  0002f	74 1f		 je	 SHORT $LN1@close_gl

; 74   :         FreeLibrary((HMODULE) libGL);

  00031	8b f4		 mov	 esi, esp
  00033	a1 00 00 00 00	 mov	 eax, DWORD PTR _libGL
  00038	50		 push	 eax
  00039	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__FreeLibrary@4
  0003f	3b f4		 cmp	 esi, esp
  00041	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 75   :         libGL = NULL;

  00046	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR _libGL, 0
$LN1@close_gl:

; 76   :     }
; 77   : }

  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
  00052	5b		 pop	 ebx
  00053	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00059	3b ec		 cmp	 ebp, esp
  0005b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00060	8b e5		 mov	 esp, ebp
  00062	5d		 pop	 ebp
  00063	c3		 ret	 0
_close_gl ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\Light\source\repos\Spacemonster\Spacemonster-code\glad\glad.c
;	COMDAT _open_gl
_TEXT	SEGMENT
tv71 = -208						; size = 4
_tmp$1 = -8						; size = 4
_open_gl PROC						; COMDAT

; 57   : int open_gl(void) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 30 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-208]
  00012	b9 34 00 00 00	 mov	 ecx, 52			; 00000034H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET __550F0BDD_glad@c
  00023	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 58   : #ifndef IS_UWP
; 59   :     libGL = LoadLibraryW(L"opengl32.dll");

  00028	8b f4		 mov	 esi, esp
  0002a	68 00 00 00 00	 push	 OFFSET ??_C@_1BK@LCODAJLO@?$AAo?$AAp?$AAe?$AAn?$AAg?$AAl?$AA3?$AA2?$AA?4?$AAd?$AAl?$AAl@
  0002f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadLibraryW@4
  00035	3b f4		 cmp	 esi, esp
  00037	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003c	a3 00 00 00 00	 mov	 DWORD PTR _libGL, eax

; 60   :     if(libGL != NULL) {

  00041	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _libGL, 0
  00048	74 4c		 je	 SHORT $LN2@open_gl

; 61   :         void (* tmp)(void);
; 62   :         tmp = (void(*)(void)) GetProcAddress(libGL, "wglGetProcAddress");

  0004a	8b f4		 mov	 esi, esp
  0004c	68 00 00 00 00	 push	 OFFSET ??_C@_0BC@FFKMKEGM@wglGetProcAddress@
  00051	a1 00 00 00 00	 mov	 eax, DWORD PTR _libGL
  00056	50		 push	 eax
  00057	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetProcAddress@8
  0005d	3b f4		 cmp	 esi, esp
  0005f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00064	89 45 f8	 mov	 DWORD PTR _tmp$1[ebp], eax

; 63   :         gladGetProcAddressPtr = (PFNWGLGETPROCADDRESSPROC_PRIVATE) tmp;

  00067	8b 45 f8	 mov	 eax, DWORD PTR _tmp$1[ebp]
  0006a	a3 00 00 00 00	 mov	 DWORD PTR _gladGetProcAddressPtr, eax

; 64   :         return gladGetProcAddressPtr != NULL;

  0006f	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _gladGetProcAddressPtr, 0
  00076	74 0c		 je	 SHORT $LN4@open_gl
  00078	c7 85 30 ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv71[ebp], 1
  00082	eb 0a		 jmp	 SHORT $LN5@open_gl
$LN4@open_gl:
  00084	c7 85 30 ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv71[ebp], 0
$LN5@open_gl:
  0008e	8b 85 30 ff ff
	ff		 mov	 eax, DWORD PTR tv71[ebp]
  00094	eb 02		 jmp	 SHORT $LN1@open_gl
$LN2@open_gl:

; 65   :     }
; 66   : #endif
; 67   : 
; 68   :     return 0;

  00096	33 c0		 xor	 eax, eax
$LN1@open_gl:

; 69   : }

  00098	5f		 pop	 edi
  00099	5e		 pop	 esi
  0009a	5b		 pop	 ebx
  0009b	81 c4 d0 00 00
	00		 add	 esp, 208		; 000000d0H
  000a1	3b ec		 cmp	 ebp, esp
  000a3	e8 00 00 00 00	 call	 __RTC_CheckEsp
  000a8	8b e5		 mov	 esp, ebp
  000aa	5d		 pop	 ebp
  000ab	c3		 ret	 0
_open_gl ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\Light\source\repos\Spacemonster\Spacemonster-code\glad\glad.c
;	COMDAT _get_proc
_TEXT	SEGMENT
_result$ = -8						; size = 4
_namez$ = 8						; size = 4
_get_proc PROC						; COMDAT

; 128  : void* get_proc(const char *namez) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET __550F0BDD_glad@c
  00023	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 129  :     void* result = NULL;

  00028	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _result$[ebp], 0

; 130  :     if(libGL == NULL) return NULL;

  0002f	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _libGL, 0
  00036	75 04		 jne	 SHORT $LN2@get_proc
  00038	33 c0		 xor	 eax, eax
  0003a	eb 45		 jmp	 SHORT $LN1@get_proc
$LN2@get_proc:

; 131  : 
; 132  : #if !defined(__APPLE__) && !defined(__HAIKU__)
; 133  :     if(gladGetProcAddressPtr != NULL) {

  0003c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _gladGetProcAddressPtr, 0
  00043	74 16		 je	 SHORT $LN3@get_proc

; 134  :         result = gladGetProcAddressPtr(namez);

  00045	8b f4		 mov	 esi, esp
  00047	8b 45 08	 mov	 eax, DWORD PTR _namez$[ebp]
  0004a	50		 push	 eax
  0004b	ff 15 00 00 00
	00		 call	 DWORD PTR _gladGetProcAddressPtr
  00051	3b f4		 cmp	 esi, esp
  00053	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00058	89 45 f8	 mov	 DWORD PTR _result$[ebp], eax
$LN3@get_proc:

; 135  :     }
; 136  : #endif
; 137  :     if(result == NULL) {

  0005b	83 7d f8 00	 cmp	 DWORD PTR _result$[ebp], 0
  0005f	75 1d		 jne	 SHORT $LN4@get_proc

; 138  : #if defined(_WIN32) || defined(__CYGWIN__)
; 139  :         result = (void*)GetProcAddress((HMODULE) libGL, namez);

  00061	8b f4		 mov	 esi, esp
  00063	8b 45 08	 mov	 eax, DWORD PTR _namez$[ebp]
  00066	50		 push	 eax
  00067	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _libGL
  0006d	51		 push	 ecx
  0006e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetProcAddress@8
  00074	3b f4		 cmp	 esi, esp
  00076	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0007b	89 45 f8	 mov	 DWORD PTR _result$[ebp], eax
$LN4@get_proc:

; 140  : #else
; 141  :         result = dlsym(libGL, namez);
; 142  : #endif
; 143  :     }
; 144  : 
; 145  :     return result;

  0007e	8b 45 f8	 mov	 eax, DWORD PTR _result$[ebp]
$LN1@get_proc:

; 146  : }

  00081	5f		 pop	 edi
  00082	5e		 pop	 esi
  00083	5b		 pop	 ebx
  00084	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  0008a	3b ec		 cmp	 ebp, esp
  0008c	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00091	8b e5		 mov	 esp, ebp
  00093	5d		 pop	 ebp
  00094	c3		 ret	 0
_get_proc ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\Light\source\repos\Spacemonster\Spacemonster-code\glad\glad.c
;	COMDAT _gladLoadGLLoader
_TEXT	SEGMENT
tv86 = -196						; size = 4
_load$ = 8						; size = 4
_gladLoadGLLoader PROC					; COMDAT

; 1818 : int gladLoadGLLoader(GLADloadproc load) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c4 00 00
	00		 sub	 esp, 196		; 000000c4H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 3c ff ff
	ff		 lea	 edi, DWORD PTR [ebp-196]
  00012	b9 31 00 00 00	 mov	 ecx, 49			; 00000031H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET __550F0BDD_glad@c
  00023	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 1819 : 	GLVersion.major = 0; GLVersion.minor = 0;

  00028	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR _GLVersion, 0
  00032	c7 05 04 00 00
	00 00 00 00 00	 mov	 DWORD PTR _GLVersion+4, 0

; 1820 : 	glGetString = (PFNGLGETSTRINGPROC)load("glGetString");

  0003c	8b f4		 mov	 esi, esp
  0003e	68 00 00 00 00	 push	 OFFSET ??_C@_0M@OPOBFDCB@glGetString@
  00043	ff 55 08	 call	 DWORD PTR _load$[ebp]
  00046	83 c4 04	 add	 esp, 4
  00049	3b f4		 cmp	 esi, esp
  0004b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00050	a3 00 00 00 00	 mov	 DWORD PTR _glad_glGetString, eax

; 1821 : 	if(glGetString == NULL) return 0;

  00055	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _glad_glGetString, 0
  0005c	75 07		 jne	 SHORT $LN2@gladLoadGL
  0005e	33 c0		 xor	 eax, eax
  00060	e9 ef 00 00 00	 jmp	 $LN1@gladLoadGL
$LN2@gladLoadGL:

; 1822 : 	if(glGetString(GL_VERSION) == NULL) return 0;

  00065	8b f4		 mov	 esi, esp
  00067	68 02 1f 00 00	 push	 7938			; 00001f02H
  0006c	ff 15 00 00 00
	00		 call	 DWORD PTR _glad_glGetString
  00072	3b f4		 cmp	 esi, esp
  00074	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00079	85 c0		 test	 eax, eax
  0007b	75 07		 jne	 SHORT $LN3@gladLoadGL
  0007d	33 c0		 xor	 eax, eax
  0007f	e9 d0 00 00 00	 jmp	 $LN1@gladLoadGL
$LN3@gladLoadGL:

; 1823 : 	find_coreGL();

  00084	e8 00 00 00 00	 call	 _find_coreGL

; 1824 : 	load_GL_VERSION_1_0(load);

  00089	8b 45 08	 mov	 eax, DWORD PTR _load$[ebp]
  0008c	50		 push	 eax
  0008d	e8 00 00 00 00	 call	 _load_GL_VERSION_1_0
  00092	83 c4 04	 add	 esp, 4

; 1825 : 	load_GL_VERSION_1_1(load);

  00095	8b 45 08	 mov	 eax, DWORD PTR _load$[ebp]
  00098	50		 push	 eax
  00099	e8 00 00 00 00	 call	 _load_GL_VERSION_1_1
  0009e	83 c4 04	 add	 esp, 4

; 1826 : 	load_GL_VERSION_1_2(load);

  000a1	8b 45 08	 mov	 eax, DWORD PTR _load$[ebp]
  000a4	50		 push	 eax
  000a5	e8 00 00 00 00	 call	 _load_GL_VERSION_1_2
  000aa	83 c4 04	 add	 esp, 4

; 1827 : 	load_GL_VERSION_1_3(load);

  000ad	8b 45 08	 mov	 eax, DWORD PTR _load$[ebp]
  000b0	50		 push	 eax
  000b1	e8 00 00 00 00	 call	 _load_GL_VERSION_1_3
  000b6	83 c4 04	 add	 esp, 4

; 1828 : 	load_GL_VERSION_1_4(load);

  000b9	8b 45 08	 mov	 eax, DWORD PTR _load$[ebp]
  000bc	50		 push	 eax
  000bd	e8 00 00 00 00	 call	 _load_GL_VERSION_1_4
  000c2	83 c4 04	 add	 esp, 4

; 1829 : 	load_GL_VERSION_1_5(load);

  000c5	8b 45 08	 mov	 eax, DWORD PTR _load$[ebp]
  000c8	50		 push	 eax
  000c9	e8 00 00 00 00	 call	 _load_GL_VERSION_1_5
  000ce	83 c4 04	 add	 esp, 4

; 1830 : 	load_GL_VERSION_2_0(load);

  000d1	8b 45 08	 mov	 eax, DWORD PTR _load$[ebp]
  000d4	50		 push	 eax
  000d5	e8 00 00 00 00	 call	 _load_GL_VERSION_2_0
  000da	83 c4 04	 add	 esp, 4

; 1831 : 	load_GL_VERSION_2_1(load);

  000dd	8b 45 08	 mov	 eax, DWORD PTR _load$[ebp]
  000e0	50		 push	 eax
  000e1	e8 00 00 00 00	 call	 _load_GL_VERSION_2_1
  000e6	83 c4 04	 add	 esp, 4

; 1832 : 	load_GL_VERSION_3_0(load);

  000e9	8b 45 08	 mov	 eax, DWORD PTR _load$[ebp]
  000ec	50		 push	 eax
  000ed	e8 00 00 00 00	 call	 _load_GL_VERSION_3_0
  000f2	83 c4 04	 add	 esp, 4

; 1833 : 	load_GL_VERSION_3_1(load);

  000f5	8b 45 08	 mov	 eax, DWORD PTR _load$[ebp]
  000f8	50		 push	 eax
  000f9	e8 00 00 00 00	 call	 _load_GL_VERSION_3_1
  000fe	83 c4 04	 add	 esp, 4

; 1834 : 	load_GL_VERSION_3_2(load);

  00101	8b 45 08	 mov	 eax, DWORD PTR _load$[ebp]
  00104	50		 push	 eax
  00105	e8 00 00 00 00	 call	 _load_GL_VERSION_3_2
  0010a	83 c4 04	 add	 esp, 4

; 1835 : 	load_GL_VERSION_3_3(load);

  0010d	8b 45 08	 mov	 eax, DWORD PTR _load$[ebp]
  00110	50		 push	 eax
  00111	e8 00 00 00 00	 call	 _load_GL_VERSION_3_3
  00116	83 c4 04	 add	 esp, 4

; 1836 : 
; 1837 : 	if (!find_extensionsGL()) return 0;

  00119	e8 00 00 00 00	 call	 _find_extensionsGL
  0011e	85 c0		 test	 eax, eax
  00120	75 04		 jne	 SHORT $LN4@gladLoadGL
  00122	33 c0		 xor	 eax, eax
  00124	eb 2e		 jmp	 SHORT $LN1@gladLoadGL
$LN4@gladLoadGL:

; 1838 : 	return GLVersion.major != 0 || GLVersion.minor != 0;

  00126	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _GLVersion, 0
  0012d	75 15		 jne	 SHORT $LN6@gladLoadGL
  0012f	83 3d 04 00 00
	00 00		 cmp	 DWORD PTR _GLVersion+4, 0
  00136	75 0c		 jne	 SHORT $LN6@gladLoadGL
  00138	c7 85 3c ff ff
	ff 00 00 00 00	 mov	 DWORD PTR tv86[ebp], 0
  00142	eb 0a		 jmp	 SHORT $LN7@gladLoadGL
$LN6@gladLoadGL:
  00144	c7 85 3c ff ff
	ff 01 00 00 00	 mov	 DWORD PTR tv86[ebp], 1
$LN7@gladLoadGL:
  0014e	8b 85 3c ff ff
	ff		 mov	 eax, DWORD PTR tv86[ebp]
$LN1@gladLoadGL:

; 1839 : }

  00154	5f		 pop	 edi
  00155	5e		 pop	 esi
  00156	5b		 pop	 ebx
  00157	81 c4 c4 00 00
	00		 add	 esp, 196		; 000000c4H
  0015d	3b ec		 cmp	 ebp, esp
  0015f	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00164	8b e5		 mov	 esp, ebp
  00166	5d		 pop	 ebp
  00167	c3		 ret	 0
_gladLoadGLLoader ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\Light\source\repos\Spacemonster\Spacemonster-code\glad\glad.c
;	COMDAT _gladLoadGL
_TEXT	SEGMENT
_status$ = -8						; size = 4
_gladLoadGL PROC					; COMDAT

; 148  : int gladLoadGL(void) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec cc 00 00
	00		 sub	 esp, 204		; 000000ccH
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 34 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-204]
  00012	b9 33 00 00 00	 mov	 ecx, 51			; 00000033H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET __550F0BDD_glad@c
  00023	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 149  :     int status = 0;

  00028	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR _status$[ebp], 0

; 150  : 
; 151  :     if(open_gl()) {

  0002f	e8 00 00 00 00	 call	 _open_gl
  00034	85 c0		 test	 eax, eax
  00036	74 15		 je	 SHORT $LN2@gladLoadGL

; 152  :         status = gladLoadGLLoader(&get_proc);

  00038	68 00 00 00 00	 push	 OFFSET _get_proc
  0003d	e8 00 00 00 00	 call	 _gladLoadGLLoader
  00042	83 c4 04	 add	 esp, 4
  00045	89 45 f8	 mov	 DWORD PTR _status$[ebp], eax

; 153  :         close_gl();

  00048	e8 00 00 00 00	 call	 _close_gl
$LN2@gladLoadGL:

; 154  :     }
; 155  : 
; 156  :     return status;

  0004d	8b 45 f8	 mov	 eax, DWORD PTR _status$[ebp]

; 157  : }

  00050	5f		 pop	 edi
  00051	5e		 pop	 esi
  00052	5b		 pop	 ebx
  00053	81 c4 cc 00 00
	00		 add	 esp, 204		; 000000ccH
  00059	3b ec		 cmp	 ebp, esp
  0005b	e8 00 00 00 00	 call	 __RTC_CheckEsp
  00060	8b e5		 mov	 esp, ebp
  00062	5d		 pop	 ebp
  00063	c3		 ret	 0
_gladLoadGL ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _sscanf_s
_TEXT	SEGMENT
__ArgList$ = -20					; size = 4
__Result$ = -8						; size = 4
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
_sscanf_s PROC						; COMDAT

; 2309 :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec d8 00 00
	00		 sub	 esp, 216		; 000000d8H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 28 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-216]
  00012	b9 36 00 00 00	 mov	 ecx, 54			; 00000036H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET __AD6A91B7_stdio@h
  00023	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 2310 :             int _Result;
; 2311 :             va_list _ArgList;
; 2312 :             __crt_va_start(_ArgList, _Format);

  00028	8d 45 10	 lea	 eax, DWORD PTR __Format$[ebp+4]
  0002b	89 45 ec	 mov	 DWORD PTR __ArgList$[ebp], eax

; 2313 : 
; 2314 :             #pragma warning(push)
; 2315 :             #pragma warning(disable: 4996) // Deprecation
; 2316 :             _Result = vsscanf_s(_Buffer, _Format, _ArgList);

  0002e	8b 45 ec	 mov	 eax, DWORD PTR __ArgList$[ebp]
  00031	50		 push	 eax
  00032	8b 4d 0c	 mov	 ecx, DWORD PTR __Format$[ebp]
  00035	51		 push	 ecx
  00036	8b 55 08	 mov	 edx, DWORD PTR __Buffer$[ebp]
  00039	52		 push	 edx
  0003a	e8 00 00 00 00	 call	 _vsscanf_s
  0003f	83 c4 0c	 add	 esp, 12			; 0000000cH
  00042	89 45 f8	 mov	 DWORD PTR __Result$[ebp], eax

; 2317 :             #pragma warning(pop)
; 2318 : 
; 2319 :             __crt_va_end(_ArgList);

  00045	c7 45 ec 00 00
	00 00		 mov	 DWORD PTR __ArgList$[ebp], 0

; 2320 :             return _Result;

  0004c	8b 45 f8	 mov	 eax, DWORD PTR __Result$[ebp]

; 2321 :         }

  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi
  00051	5b		 pop	 ebx
  00052	81 c4 d8 00 00
	00		 add	 esp, 216		; 000000d8H
  00058	3b ec		 cmp	 ebp, esp
  0005a	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0005f	8b e5		 mov	 esp, ebp
  00061	5d		 pop	 ebp
  00062	c3		 ret	 0
_sscanf_s ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _vsscanf_s
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
__ArgList$ = 16						; size = 4
_vsscanf_s PROC						; COMDAT

; 2227 :         {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET __AD6A91B7_stdio@h
  00023	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 2228 :             return _vsscanf_s_l(_Buffer, _Format, NULL, _ArgList);

  00028	8b 45 10	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0002b	50		 push	 eax
  0002c	6a 00		 push	 0
  0002e	8b 4d 0c	 mov	 ecx, DWORD PTR __Format$[ebp]
  00031	51		 push	 ecx
  00032	8b 55 08	 mov	 edx, DWORD PTR __Buffer$[ebp]
  00035	52		 push	 edx
  00036	e8 00 00 00 00	 call	 __vsscanf_s_l
  0003b	83 c4 10	 add	 esp, 16			; 00000010H

; 2229 :         }

  0003e	5f		 pop	 edi
  0003f	5e		 pop	 esi
  00040	5b		 pop	 ebx
  00041	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00047	3b ec		 cmp	 ebp, esp
  00049	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0004e	8b e5		 mov	 esp, ebp
  00050	5d		 pop	 ebp
  00051	c3		 ret	 0
_vsscanf_s ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __vsscanf_s_l
_TEXT	SEGMENT
__Buffer$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vsscanf_s_l PROC					; COMDAT

; 2206 :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET __AD6A91B7_stdio@h
  00023	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 2207 :         return __stdio_common_vsscanf(

  00028	8b f4		 mov	 esi, esp
  0002a	8b 45 14	 mov	 eax, DWORD PTR __ArgList$[ebp]
  0002d	50		 push	 eax
  0002e	8b 4d 10	 mov	 ecx, DWORD PTR __Locale$[ebp]
  00031	51		 push	 ecx
  00032	8b 55 0c	 mov	 edx, DWORD PTR __Format$[ebp]
  00035	52		 push	 edx
  00036	6a ff		 push	 -1
  00038	8b 45 08	 mov	 eax, DWORD PTR __Buffer$[ebp]
  0003b	50		 push	 eax
  0003c	e8 00 00 00 00	 call	 ___local_stdio_scanf_options
  00041	8b 08		 mov	 ecx, DWORD PTR [eax]
  00043	83 c9 01	 or	 ecx, 1
  00046	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00049	52		 push	 edx
  0004a	51		 push	 ecx
  0004b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp____stdio_common_vsscanf
  00051	83 c4 1c	 add	 esp, 28			; 0000001cH
  00054	3b f4		 cmp	 esi, esp
  00056	e8 00 00 00 00	 call	 __RTC_CheckEsp

; 2208 :             _CRT_INTERNAL_LOCAL_SCANF_OPTIONS | _CRT_INTERNAL_SCANF_SECURECRT,
; 2209 :             _Buffer, (size_t)-1, _Format, _Locale, _ArgList);
; 2210 :     }

  0005b	5f		 pop	 edi
  0005c	5e		 pop	 esi
  0005d	5b		 pop	 ebx
  0005e	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00064	3b ec		 cmp	 ebp, esp
  00066	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0006b	8b e5		 mov	 esp, ebp
  0006d	5d		 pop	 ebp
  0006e	c3		 ret	 0
__vsscanf_s_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_scanf_options
_TEXT	SEGMENT
___local_stdio_scanf_options PROC			; COMDAT

; 96   :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec c0 00 00
	00		 sub	 esp, 192		; 000000c0H
  00009	53		 push	 ebx
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8d bd 40 ff ff
	ff		 lea	 edi, DWORD PTR [ebp-192]
  00012	b9 30 00 00 00	 mov	 ecx, 48			; 00000030H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	b9 00 00 00 00	 mov	 ecx, OFFSET __F66CEB67_corecrt_stdio_config@h
  00023	e8 00 00 00 00	 call	 @__CheckForDebuggerJustMyCode@4

; 97   :         static unsigned __int64 _OptionsStorage;
; 98   :         return &_OptionsStorage;

  00028	b8 00 00 00 00	 mov	 eax, OFFSET ?_OptionsStorage@?1??__local_stdio_scanf_options@@9@9 ; `__local_stdio_scanf_options'::`2'::_OptionsStorage

; 99   :     }

  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi
  0002f	5b		 pop	 ebx
  00030	81 c4 c0 00 00
	00		 add	 esp, 192		; 000000c0H
  00036	3b ec		 cmp	 ebp, esp
  00038	e8 00 00 00 00	 call	 __RTC_CheckEsp
  0003d	8b e5		 mov	 esp, ebp
  0003f	5d		 pop	 ebp
  00040	c3		 ret	 0
___local_stdio_scanf_options ENDP
_TEXT	ENDS
END
